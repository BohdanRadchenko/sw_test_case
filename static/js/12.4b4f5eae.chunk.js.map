{"version":3,"sources":["redux/films/filmsSelectors.js","redux/species/speciesOperations.js","redux/species/speciesActions.js","redux/people/peopleSelectors.js","redux/vehicles/vehiclesOperations.js","redux/vehicles/vehiclesActions.js","redux/starships/starshipsOperations.js","redux/starships/starshipsActions.js","redux/species/speciesSelectors.js","redux/starships/starshipsSelectors.js","components/detail.module.css","components/People/PeopleList/PeopleList.js","components/Films/FilmsList/FilmsList.js","components/Starships/DetailStarships/DetailStarships.js","pages/DetailStarshipsPage.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/list.module.css","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","redux/planets/planetsOperations.js","redux/planets/planetsActions.js","redux/people/peopleOperations.js","redux/people/peopleActions.js"],"names":["getAllFilms","state","films","items","getLoading","loading","fetchSpeciesById","count","dispatch","URL","type","ActionType","FETCH_SPECIES_BY_ID_REQUEST","axios","get","then","response","species","data","id","FETCH_SPECIES_BY_ID_SUCCESS","payload","catch","error","console","log","message","FETCH_SPECIES_BY_ID_ERROR","fetchSpeciesByIdError","searchSpecies","name","SEARCH_SPECIES_REQUEST","results","SEARCH_SPECIES_SUCCESS","SEARCH_SPECIES_ERROR","searchSpeciesError","fetchPaginationSpecies","page","FETCH_PAGINATION_SPECIES_REQUEST","FETCH_PAGINATION_SPECIES_SUCCESS","getPeople","people","sort","a","b","peopleSearch","search","paginationPeople","peoplePrev","previous","peopleNext","next","fetchVehiclesById","FETCH_VEHICLES_BY_ID_REQUEST","vehicles","FETCH_VEHICLES_BY_ID_SUCCESS","FETCH_VEHICLES_BY_ID_ERROR","fetchVehiclesByIdError","searchVehicles","SEARCH_VEHICLES_REQUEST","SEARCH_VEHICLES_SUCCESS","SEARCH_VEHICLES_ERROR","searchVehiclesError","fetchPaginationVehicles","FETCH_PAGINATION_VEHICLES_REQUEST","FETCH_PAGINATION_VEHICLES_SUCCESS","fetchStarshipsById","FETCH_STARSHIPS_BY_ID_REQUEST","planets","FETCH_STARSHIPS_BY_ID_SUCCESS","FETCH_STARSHIPS_BY_ID_ERROR","fetchStarshipsByIdError","searchStarships","SEARCH_STARSHIPS_REQUEST","starships","SEARCH_STARSHIPS_SUCCESS","SEARCH_STARSHIPS_ERROR","searchStarshipsError","fetchPaginationStarships","FETCH_PAGINATION_STARSHIPS_REQUEST","FETCH_PAGINATION_STARSHIPS_SUCCESS","getAllSpecies","speciesSearch","paginationSpecies","speciesPrev","speciesNext","getStarships","starshipsSearch","paginationStarships","starshipsPrev","starshipsNext","module","exports","connect","peopleSelectors","className","css","container","length","list","map","el","i","item","key","link","to","filmsSelectors","film","episode_id","title","allFilms","allPeople","model","manufacturer","cost_in_credits","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","hyperdrive_rating","MGLT","starship_class","pilots","history","useHistory","arrId","Number","split","filter","includes","desc","p","PeopleList","FilmsList","button","onClick","goBack","mDTP","fetchPeopleById","peopleOperations","fetchPlanetsById","planetsOperations","starshipsOperation","vehiclesOperations","speciesOperations","starshipsSelectors","starshipsId","useParams","useEffect","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","FETCH_PLANETS_BY_ID_REQUEST","FETCH_PLANETS_BY_ID_SUCCESS","FETCH_PLANETS_BY_ID_ERROR","fetchPlanetsByIdError","searchPlanets","SEARCH_PLANETS_REQUEST","SEARCH_PLANETS_SUCCESS","SEARCH_PLANETS_ERROR","searchPlanetsError","fetchPaginationPlanets","FETCH_PAGINATION_PLANETS_REQUEST","FETCH_PAGINATION_PLANETS_SUCCESS","FETCH_PEOPLE_BY_ID_REQUEST","FETCH_PEOPLE_BY_ID_SUCCESS","FETCH_PEOPLE_BY_ID_ERROR","fetchPeopleByIdError","searchPeople","SEARCH_PEOPLE_REQUEST","SEARCH_PEOPLE_SUCCESS","SEARCH_PEOPLE_ERROR","searchPeopleError","fetchPaginationPeople","FETCH_PAGINATION_PEOPLE_REQUEST","FETCH_PAGINATION_PEOPLE_SUCCESS"],"mappings":"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","file":"static/js/12.4b4f5eae.chunk.js","sourcesContent":["export const getAllFilms = state => state.films.items\r\n\r\nexport const getLoading = state => state.films.loading\r\n","import axios from 'axios';\r\nimport {\r\n  fetchSpeciesByIdRequest,\r\n  fetchSpeciesByIdSuccess,\r\n  fetchSpeciesByIdError,\r\n  fetchPaginationSpeciesRequest,\r\n  fetchPaginationSpeciesSuccess,\r\n  searchSpeciesRequest,\r\n  searchSpeciesSuccess,\r\n  searchSpeciesError\r\n} from './speciesActions';\r\n\r\nexport const fetchSpeciesById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/species/${count}`\r\n  dispatch(fetchSpeciesByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchSpeciesByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchSpeciesByIdError(error));\r\n    });\r\n};\r\n\r\n//SEARCH\r\nexport const searchSpecies = (name) => dispatch => {\r\n  const URL = `https://swapi.co/api/species/?search=${name}`;\r\n  dispatch(searchSpeciesRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(searchSpeciesSuccess(response.data.results));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(searchSpeciesError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationSpecies = page => dispatch => {\r\n  dispatch(fetchPaginationSpeciesRequest())\r\n  const URL = `https://swapi.co/api/species/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationSpeciesSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n// FETCH SPECIES\r\nexport const fetchSpeciesByIdRequest = () => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_REQUEST,\r\n});\r\n\r\nexport const fetchSpeciesByIdSuccess = species => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_SUCCESS,\r\n  payload : {\r\n    species,\r\n  }\r\n});\r\n\r\nexport const fetchSpeciesByIdError = error => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// SPECIES SEARCH\r\nexport const searchSpeciesRequest = () => ({\r\n  type: ActionType.SEARCH_SPECIES_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const searchSpeciesSuccess = species => ({\r\n  type: ActionType.SEARCH_SPECIES_SUCCESS,\r\n  payload : species\r\n});\r\n\r\nexport const searchSpeciesError = error => ({\r\n  type: ActionType.SEARCH_SPECIES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationSpeciesRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationSpeciesSuccess = species => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_SUCCESS,\r\n  payload : species\r\n});\r\n\r\nexport const fetchPaginationSpeciesError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","export const getPeople = state => state.people.items.sort((a, b) => {\r\n return a.name > b.name\r\n})\r\n\r\nexport const getLoading = state => state.people.loading\r\n\r\n//SEARCH\r\nexport const peopleSearch = state => state.people.search\r\n\r\n\r\n//PAGINATION\r\nexport const paginationPeople = state => state.people.paginationPeople.results\r\n\r\nexport const peoplePrev = state => state.people.paginationPeople.previous\r\n\r\nexport const peopleNext = state => state.people.paginationPeople.next\r\n","import axios from 'axios';\r\nimport {\r\n  fetchVehiclesByIdRequest,\r\n  fetchVehiclesByIdSuccess,\r\n  fetchVehiclesByIdError,\r\n  fetchPaginationVehiclesRequest,\r\n  fetchPaginationVehiclesSuccess,\r\n  searchVehiclesRequest,\r\n  searchVehiclesSuccess,\r\n  searchVehiclesError\r\n} from './vehiclesActions';\r\n\r\nexport const fetchVehiclesById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/vehicles/${count}`\r\n  dispatch(fetchVehiclesByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchVehiclesByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchVehiclesByIdError(error));\r\n    });\r\n};\r\n\r\n//SEARCH\r\nexport const searchVehicles = (name) => dispatch => {\r\n  const URL = `https://swapi.co/api/vehicles/?search=${name}`;\r\n  dispatch(searchVehiclesRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(searchVehiclesSuccess(response.data.results));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(searchVehiclesError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationVehicles = page => dispatch => {\r\n  dispatch(fetchPaginationVehiclesRequest())\r\n  const URL = `https://swapi.co/api/vehicles/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationVehiclesSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n//FETCH VEHICLES\r\nexport const fetchVehiclesByIdRequest = () => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_REQUEST,\r\n});\r\n\r\nexport const fetchVehiclesByIdSuccess = vehicles => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_SUCCESS,\r\n  payload : {\r\n    vehicles,\r\n  }\r\n});\r\n\r\nexport const fetchVehiclesByIdError = error => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// VEHICLES SEARCH\r\nexport const searchVehiclesRequest = () => ({\r\n  type: ActionType.SEARCH_VEHICLES_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const searchVehiclesSuccess = vehicles => ({\r\n  type: ActionType.SEARCH_VEHICLES_SUCCESS,\r\n  payload : vehicles\r\n});\r\n\r\nexport const searchVehiclesError = error => ({\r\n  type: ActionType.SEARCH_VEHICLES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationVehiclesRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationVehiclesSuccess = vehicles => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_SUCCESS,\r\n  payload : vehicles\r\n});\r\n\r\nexport const fetchPaginationVehiclesError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  fetchStarshipsByIdRequest,\r\n  fetchStarshipsByIdSuccess,\r\n  fetchStarshipsByIdError,\r\n  fetchPaginationStarshipsRequest,\r\n  fetchPaginationStarshipsSuccess,\r\n  searchStarshipsError,\r\n  searchStarshipsSuccess,\r\n  searchStarshipsRequest\r\n} from './starshipsActions';\r\n\r\n\r\nexport const fetchStarshipsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/starships/${count}`\r\n  dispatch(fetchStarshipsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchStarshipsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchStarshipsByIdError(error));\r\n    });\r\n};\r\n\r\n\r\n//SEARCH\r\nexport const searchStarships = (name) => dispatch => {\r\n  const URL = `https://swapi.co/api/starships/?search=${name}`;\r\n  dispatch(searchStarshipsRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(searchStarshipsSuccess(response.data.results));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(searchStarshipsError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationStarships = page => dispatch => {\r\n  dispatch(fetchPaginationStarshipsRequest())\r\n  const URL = `https://swapi.co/api/starships/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationStarshipsSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n// FECTH STARSHIPS\r\nexport const fetchStarshipsByIdRequest = () => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchStarshipsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchStarshipsByIdError = error => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// STARSHIPS SEARCH\r\nexport const searchStarshipsRequest = () => ({\r\n  type: ActionType.SEARCH_STARSHIPS_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const searchStarshipsSuccess = starships => ({\r\n  type: ActionType.SEARCH_STARSHIPS_SUCCESS,\r\n  payload : starships\r\n});\r\n\r\nexport const searchStarshipsError = error => ({\r\n  type: ActionType.SEARCH_STARSHIPS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationStarshipsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationStarshipsSuccess = starships => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_SUCCESS,\r\n  payload : starships\r\n});\r\n\r\nexport const fetchPaginationStarshipsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","export const getAllSpecies = state => state.species.items\r\n\r\nexport const getLoading = state => state.species.loading\r\n\r\n//SEARCH\r\nexport const speciesSearch = state => state.species.search\r\n\r\n//PAGINATION\r\nexport const paginationSpecies = state => state.species.paginationSpecies.results\r\n\r\nexport const speciesPrev = state => state.species.paginationSpecies.previous\r\n\r\nexport const speciesNext = state => state.species.paginationSpecies.next\r\n","export const getStarships = state => state.starships.items\r\n\r\nexport const getLoading = state => state.starships.loading\r\n\r\n//SEARCH\r\nexport const starshipsSearch = state => state.starships.search\r\n\r\n//PAGINATION\r\nexport const paginationStarships = state => state.starships.paginationStarships.results\r\n\r\nexport const starshipsPrev = state => state.starships.paginationStarships.previous\r\n\r\nexport const starshipsNext = state => state.starships.paginationStarships.next\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"detail_container__BC9SV\",\"desc\":\"detail_desc__AcYHn\",\"p\":\"detail_p__2pKXO\",\"i\":\"detail_i__2pxcA\",\"title\":\"detail_title__3WL5J\",\"button\":\"detail_button__1z1Ze\"};","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as peopleSelectors from '../../../redux/people/peopleSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\nimport css from \"../../list.module.css\";\r\n\r\nconst SpeciesList = ({people, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!people.length && (\r\n            <ul className={css.list}>\r\n              {people.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={ i * 9}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/people/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : peopleSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as filmsSelectors from '../../../redux/films/filmsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nimport css from '../../list.module.css'\r\n\r\nconst SpeciesList = ({film, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!film.length && (\r\n            <ul className={css.list}>\r\n              {film.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={el.episode_id}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/films/${el.episode_id}`}>{el.title}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : filmsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React  from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport * as peopleSelectors from '../../../redux/people/peopleSelectors'\r\nimport * as filmsSelectors from \"../../../redux/films/filmsSelectors\";\r\nimport PeopleList from \"../../People/PeopleList/PeopleList\";\r\nimport FilmsList from \"../../Films/FilmsList/FilmsList\";\r\n\r\nimport css from '../../detail.module.css'\r\n\r\nconst DetailStarships = ({\r\n                           name,\r\n                           model,\r\n                           manufacturer,\r\n                           cost_in_credits,\r\n                           length,\r\n                           max_atmosphering_speed,\r\n                           crew,\r\n                           passengers,\r\n                           cargo_capacity,\r\n                           consumables,\r\n                           hyperdrive_rating,\r\n                           MGLT,\r\n                           starship_class,\r\n                           pilots,\r\n                           films,\r\n                           allPeople,\r\n                           allFilms,\r\n}) => {\r\n\r\n  const history = useHistory()\r\n\r\n  const handlerBack = () => {\r\n    history.goBack()\r\n  }\r\n\r\n  const arrId = films.map(el => Number(el.split('/')[5]))\r\n  const film = allFilms.filter(el => {\r\n    return arrId.includes(el.episode_id)\r\n  })\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>Name:</p>\r\n      <p className={css.i}>{name}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>model:</p>\r\n      <p className={css.i}>{model}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>manufacturer:</p>\r\n      <p className={css.i}>: {manufacturer}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>cost in credits:</p>\r\n      <p className={css.i}>{cost_in_credits}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>length:</p>\r\n      <p className={css.i}>{length}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>max atmosphering speed:</p>\r\n      <p className={css.i}>{max_atmosphering_speed}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>crew:</p>\r\n      <p className={css.i}> {crew}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>passengers:</p>\r\n      <p className={css.i}>{passengers}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>cargo_capacity:</p>\r\n      <p className={css.i}>{cargo_capacity}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>consumables:</p>\r\n      <p className={css.i}>{consumables}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>hyperdrive rating:</p>\r\n      <p className={css.i}>{hyperdrive_rating}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>MGLT:</p>\r\n      <p className={css.i}>{MGLT}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>starship class:</p>\r\n      <p className={css.i}>{starship_class}</p>\r\n      </div>\r\n\r\n      {/*PILOTS*/}\r\n      {!!allPeople.length && (\r\n        <div>\r\n          <h2 className={css.title}>pilots</h2>\r\n          <PeopleList people={allPeople}/>\r\n        </div>\r\n      )}\r\n\r\n      {/*FILMS*/}\r\n      {!!allFilms.length && (\r\n        <div>\r\n          <h2 className={css.title}>films</h2>\r\n          <FilmsList film={film}/>\r\n        </div>\r\n      )}\r\n\r\n      <button\r\n        className={css.button}\r\n        onClick={handlerBack}\r\n      >\r\n        Back\r\n      </button>\r\n\r\n    </div>)\r\n}\r\n\r\nconst mSTP = state => ({\r\n  allFilms : filmsSelectors.getAllFilms(state),\r\n  allPeople : peopleSelectors.getPeople(state)\r\n})\r\n\r\nexport default connect(mSTP)(DetailStarships);\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport DetailStarships\r\n  from \"../components/Starships/DetailStarships/DetailStarships\";\r\nimport * as speciesSelectors from '../redux/species/speciesSelectors'\r\nimport * as starshipsSelectors from '../redux/starships/starshipsSelectors'\r\nimport * as peopleOperations from \"../redux/people/peopleOperations\";\r\nimport * as planetsOperations from \"../redux/planets/planetsOperations\";\r\nimport * as starshipsOperation from \"../redux/starships/starshipsOperations\";\r\nimport * as vehiclesOperations from \"../redux/vehicles/vehiclesOperations\";\r\nimport * as speciesOperations from \"../redux/species/speciesOperations\";\r\n\r\nconst DetailStarshipsPage = ({starships, fetchStarshipsById, fetchPeopleById}) => {\r\n  const starshipsId = Number(useParams().id)\r\n\r\n  useEffect(() => {\r\n    fetchStarshipsById(starshipsId)\r\n  }, [])\r\n\r\n  if (starships[0]) {\r\n    starships[0].pilots.map(el => {\r\n      const count = Number(el.split('/')[5])\r\n      return fetchPeopleById(count)\r\n    })\r\n  }\r\n\r\n  return (<div>\r\n    {starships[0] && <DetailStarships {...starships[0]}/>}\r\n    </div>)\r\n}\r\n\r\n\r\nconst mSTP = state => ({\r\n  starships : starshipsSelectors.getStarships(state)\r\n})\r\n\r\nconst mDTP = {\r\n  fetchPeopleById: peopleOperations.fetchPeopleById,\r\n  fetchPlanetsById: planetsOperations.fetchPlanetsById,\r\n  fetchStarshipsById: starshipsOperation.fetchStarshipsById,\r\n  fetchVehiclesById: vehiclesOperations.fetchVehiclesById,\r\n  fetchSpeciesById: speciesOperations.fetchSpeciesById,\r\n}\r\n\r\nexport default connect(mSTP, mDTP)(DetailStarshipsPage);","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"list_container__1Bq0D\",\"list\":\"list_list__1pvkh\",\"item\":\"list_item__3HMYw\",\"link\":\"list_link__2mIHv\"};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import axios from 'axios';\r\nimport {\r\n  fetchPlanetsByIdRequest,\r\n  fetchPlanetsByIdSuccess,\r\n  fetchPlanetsByIdError,\r\n  fetchPaginationPlanetsRequest,\r\n  fetchPaginationPlanetsSuccess,\r\n  searchPlanetsRequest,\r\n  searchPlanetsSuccess,\r\n  searchPlanetsError\r\n} from './planetsActions';\r\n\r\n\r\n\r\nexport const fetchPlanetsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/planets/${count}`\r\n  dispatch(fetchPlanetsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPlanetsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchPlanetsByIdError(error));\r\n    });\r\n};\r\n\r\n//SEARCH\r\nexport const searchPlanets = (name) => dispatch => {\r\n  const URL = `https://swapi.co/api/planets/?search=${name}`;\r\n  dispatch(searchPlanetsRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      console.log(response.data)\r\n      dispatch(searchPlanetsSuccess(response.data.results));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(searchPlanetsError(error));\r\n    });\r\n};\r\n\r\n// PAGINATION\r\nexport const fetchPaginationPlanets = page => dispatch => {\r\n  dispatch(fetchPaginationPlanetsRequest())\r\n  const URL = `https://swapi.co/api/planets/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPlanetsSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n//FETCH PLANETS BY ID\r\nexport const fetchPlanetsByIdRequest = () => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPlanetsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchPlanetsByIdError = error => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// PLANETS SEARCH\r\nexport const searchPlanetsRequest = () => ({\r\n  type: ActionType.SEARCH_PLANETS_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const searchPlanetsSuccess = planets => ({\r\n  type: ActionType.SEARCH_PLANETS_SUCCESS,\r\n  payload : planets\r\n});\r\n\r\nexport const searchPlanetsError = error => ({\r\n  type: ActionType.SEARCH_PLANETS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPlanetsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationPlanetsSuccess = planets => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_SUCCESS,\r\n  payload : planets\r\n});\r\n\r\nexport const fetchPaginationPlanetsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n","import axios from 'axios';\r\nimport {\r\n  fetchPeopleByIdRequest,\r\n  fetchPeopleByIdSuccess,\r\n  fetchPeopleByIdError,\r\n  fetchPaginationPeopleRequest,\r\n  fetchPaginationPeopleSuccess,\r\n  searchPeopleRequest,\r\n  searchPeopleSuccess, searchPeopleError\r\n} from './peopleActions';\r\n\r\n\r\nexport const fetchPeopleById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/people/${count}`\r\n  dispatch(fetchPeopleByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPeopleByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchPeopleByIdError(error));\r\n    });\r\n};\r\n\r\n//SEARCH\r\nexport const searchPeople = (name) => dispatch => {\r\n  const URL = `https://swapi.co/api/people/?search=${name}`;\r\n  dispatch(searchPeopleRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(searchPeopleSuccess(response.data.results));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(searchPeopleError(error));\r\n    });\r\n};\r\n\r\n\r\n//FETCH PAGINATION\r\nexport const fetchPaginationPeople = page => dispatch => {\r\n  dispatch(fetchPaginationPeopleRequest())\r\n  const URL = `https://swapi.co/api/people/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPeopleSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n// FETCH BY ID\r\nexport const fetchPeopleByIdRequest = () => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPeopleByIdSuccess = people => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_SUCCESS,\r\n  payload : {\r\n    people,\r\n  }\r\n});\r\n\r\nexport const fetchPeopleByIdError = error => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// PEOPLE SEARCH\r\nexport const searchPeopleRequest = () => ({\r\n  type: ActionType.SEARCH_PEOPLE_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const searchPeopleSuccess = people => ({\r\n  type: ActionType.SEARCH_PEOPLE_SUCCESS,\r\n  payload : people\r\n});\r\n\r\nexport const searchPeopleError = error => ({\r\n  type: ActionType.SEARCH_PEOPLE_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPeopleRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPaginationPeopleSuccess = people => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_SUCCESS,\r\n  payload : people\r\n});\r\n\r\nexport const fetchPaginationPeopleError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n"],"sourceRoot":""}