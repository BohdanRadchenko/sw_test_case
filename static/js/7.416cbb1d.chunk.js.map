{"version":3,"sources":["redux/starships/starshipsSelectors.js","redux/people/peopleOperations.js","redux/people/peopleActions.js","redux/planets/planetsOperations.js","redux/planets/planetsActions.js","redux/species/speciesOperations.js","redux/species/speciesActions.js","components/People/PeopleList/PeopleList.js","components/Films/FilmsList/FilmsList.js","redux/vehicles/vehiclesOperations.js","redux/vehicles/vehiclesActions.js","redux/starships/starshipsOperations.js","redux/starships/starshipsActions.js","components/Starships/DetailStarships/DetailStarships.js","pages/DetailStarshipsPage.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","redux/films/filmsSelectors.js","redux/people/peopleSelectors.js","redux/species/speciesSelectors.js"],"names":["getStarships","state","starships","items","getLoading","loading","paginationStarships","results","starshipsPrev","previous","starshipsNext","next","fetchPeopleById","count","dispatch","URL","type","ActionType","FETCH_PEOPLE_BY_ID_REQUEST","payload","axios","get","then","response","people","data","id","FETCH_PEOPLE_BY_ID_SUCCESS","catch","error","FETCH_PEOPLE_BY_ID_ERROR","fetchPeopleByIdError","fetchPaginationPeople","page","FETCH_PAGINATION_PEOPLE_REQUEST","FETCH_PAGINATION_PEOPLE_SUCCESS","fetchPlanetsById","FETCH_PLANETS_BY_ID_REQUEST","planets","FETCH_PLANETS_BY_ID_SUCCESS","FETCH_PLANETS_BY_ID_ERROR","fetchPlanetsByIdError","fetchPaginationPlanets","FETCH_PAGINATION_PLANETS_REQUEST","FETCH_PAGINATION_PLANETS_SUCCESS","fetchSpeciesById","FETCH_SPECIES_BY_ID_REQUEST","species","FETCH_SPECIES_BY_ID_SUCCESS","FETCH_SPECIES_BY_ID_ERROR","fetchSpeciesByIdError","fetchPaginationSpecies","FETCH_PAGINATION_SPECIES_REQUEST","FETCH_PAGINATION_SPECIES_SUCCESS","style","position","display","connect","peopleSelectors","length","map","el","i","key","to","name","filmsSelectors","film","episode_id","title","fetchVehiclesById","FETCH_VEHICLES_BY_ID_REQUEST","vehicles","FETCH_VEHICLES_BY_ID_SUCCESS","FETCH_VEHICLES_BY_ID_ERROR","fetchVehiclesByIdError","fetchPaginationVehicles","FETCH_PAGINATION_VEHICLES_REQUEST","FETCH_PAGINATION_VEHICLES_SUCCESS","fetchStarshipsById","FETCH_STARSHIPS_BY_ID_REQUEST","FETCH_STARSHIPS_BY_ID_SUCCESS","FETCH_STARSHIPS_BY_ID_ERROR","fetchStarshipsByIdError","fetchPaginationStarships","FETCH_PAGINATION_STARSHIPS_REQUEST","FETCH_PAGINATION_STARSHIPS_SUCCESS","allFilms","allPeople","model","manufacturer","cost_in_credits","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","hyperdrive_rating","MGLT","starship_class","films","pilots","history","useHistory","arrId","Number","split","filter","includes","PeopleList","FilmsList","className","onClick","goBack","mDTP","peopleOperations","planetsOperations","starshipsOperation","vehiclesOperations","speciesOperations","starshipsSelectors","starshipsId","useParams","useEffect","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","getAllFilms","getPeople","sort","a","b","paginationPeople","peoplePrev","peopleNext","getAllSpecies","paginationSpecies","speciesPrev","speciesNext"],"mappings":"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","file":"static/js/7.416cbb1d.chunk.js","sourcesContent":["export const getStarships = state => state.starships.items\r\n\r\nexport const getLoading = state => state.starships.loading\r\n\r\n//PAGINATION\r\nexport const paginationStarships = state => state.starships.paginationStarships.results\r\n\r\nexport const starshipsPrev = state => state.starships.paginationStarships.previous\r\n\r\nexport const starshipsNext = state => state.starships.paginationStarships.next\r\n","import axios from 'axios';\r\nimport {\r\n  fetchPeopleByIdRequest,\r\n  fetchPeopleByIdSuccess,\r\n  fetchPeopleByIdError,\r\n  fetchPaginationPeopleRequest,\r\n  fetchPaginationPeopleSuccess\r\n} from './peopleActions';\r\n\r\n\r\nexport const fetchPeopleById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/people/${count}`\r\n  dispatch(fetchPeopleByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPeopleByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchPeopleByIdError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationPeople = page => dispatch => {\r\n  dispatch(fetchPaginationPeopleRequest())\r\n  const URL = `https://swapi.co/api/people/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPeopleSuccess(response.data)))\r\n}","import {ActionType} from '../actionType'\r\n\r\n\r\n// FETCH BY ID\r\nexport const fetchPeopleByIdRequest = () => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPeopleByIdSuccess = people => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_SUCCESS,\r\n  payload : {\r\n    people,\r\n  }\r\n});\r\n\r\nexport const fetchPeopleByIdError = error => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPeopleRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPaginationPeopleSuccess = people => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_SUCCESS,\r\n  payload : people\r\n});\r\n\r\nexport const fetchPaginationPeopleError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  fetchPlanetsByIdRequest,\r\n  fetchPlanetsByIdSuccess,\r\n  fetchPlanetsByIdError,\r\n  fetchPaginationPlanetsRequest,\r\n  fetchPaginationPlanetsSuccess\r\n} from './planetsActions';\r\n\r\n\r\n\r\nexport const fetchPlanetsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/planets/${count}`\r\n  dispatch(fetchPlanetsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPlanetsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchPlanetsByIdError(error));\r\n    });\r\n};\r\n\r\n//\r\nexport const fetchPaginationPlanets = page => dispatch => {\r\n  dispatch(fetchPaginationPlanetsRequest())\r\n  const URL = `https://swapi.co/api/planets/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPlanetsSuccess(response.data)))\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchPlanetsByIdRequest = () => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPlanetsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchPlanetsByIdError = error => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPlanetsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationPlanetsSuccess = planets => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_SUCCESS,\r\n  payload : planets\r\n});\r\n\r\nexport const fetchPaginationPlanetsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n","import axios from 'axios';\r\nimport {\r\n  fetchSpeciesByIdRequest,\r\n  fetchSpeciesByIdSuccess,\r\n  fetchSpeciesByIdError,\r\n  fetchPaginationSpeciesRequest,\r\n  fetchPaginationSpeciesSuccess\r\n} from './speciesActions';\r\n\r\nexport const fetchSpeciesById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/species/${count}`\r\n  dispatch(fetchSpeciesByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchSpeciesByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchSpeciesByIdError(error));\r\n    });\r\n};\r\nexport const fetchPaginationSpecies = page => dispatch => {\r\n  dispatch(fetchPaginationSpeciesRequest())\r\n  const URL = `https://swapi.co/api/species/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationSpeciesSuccess(response.data)))\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchSpeciesByIdRequest = () => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_REQUEST,\r\n});\r\n\r\nexport const fetchSpeciesByIdSuccess = species => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_SUCCESS,\r\n  payload : {\r\n    species,\r\n  }\r\n});\r\n\r\nexport const fetchSpeciesByIdError = error => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationSpeciesRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationSpeciesSuccess = species => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_SUCCESS,\r\n  payload : species\r\n});\r\n\r\nexport const fetchPaginationSpeciesError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as peopleSelectors from '../../../redux/people/peopleSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nconst style = {\r\n  position: 'relative',\r\n  display : 'block'\r\n}\r\n\r\nconst SpeciesList = ({people, loading}) => {\r\n  return (\r\n    <div style={style}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!people.length && (\r\n            <ul>\r\n              {people.map((el, i) => (\r\n                <li key={ i * 9}>\r\n                  <NavLink to={`/people/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : peopleSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as filmsSelectors from '../../../redux/films/filmsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nconst style = {\r\n  position: 'relative',\r\n  display : 'block'\r\n}\r\n\r\nconst SpeciesList = ({film, loading}) => {\r\n  return (\r\n    <div style={style}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!film.length && (\r\n            <ul>\r\n              {film.map((el, i) => (\r\n                <li key={el.episode_id}>\r\n                  <NavLink to={`/films/${el.episode_id}`}>{el.title}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : filmsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import axios from 'axios';\r\nimport {\r\n  fetchVehiclesByIdRequest,\r\n  fetchVehiclesByIdSuccess,\r\n  fetchVehiclesByIdError,\r\n  fetchPaginationVehiclesRequest, fetchPaginationVehiclesSuccess\r\n} from './vehiclesActions';\r\n\r\nexport const fetchVehiclesById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/vehicles/${count}`\r\n  dispatch(fetchVehiclesByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchVehiclesByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchVehiclesByIdError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationVehicles = page => dispatch => {\r\n  dispatch(fetchPaginationVehiclesRequest())\r\n  const URL = `https://swapi.co/api/vehicles/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationVehiclesSuccess(response.data)))\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchVehiclesByIdRequest = () => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_REQUEST,\r\n});\r\n\r\nexport const fetchVehiclesByIdSuccess = vehicles => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_SUCCESS,\r\n  payload : {\r\n    vehicles,\r\n  }\r\n});\r\n\r\nexport const fetchVehiclesByIdError = error => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationVehiclesRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationVehiclesSuccess = vehicles => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_SUCCESS,\r\n  payload : vehicles\r\n});\r\n\r\nexport const fetchPaginationVehiclesError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  fetchStarshipsByIdRequest,\r\n  fetchStarshipsByIdSuccess,\r\n  fetchStarshipsByIdError,\r\n  fetchPaginationStarshipsRequest,\r\n  fetchPaginationStarshipsSuccess\r\n} from './starshipsActions';\r\n\r\nexport const fetchStarshipsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/starships/${count}`\r\n  dispatch(fetchStarshipsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchStarshipsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchStarshipsByIdError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationStarships = page => dispatch => {\r\n  dispatch(fetchPaginationStarshipsRequest())\r\n  const URL = `https://swapi.co/api/starships/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationStarshipsSuccess(response.data)))\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchStarshipsByIdRequest = () => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchStarshipsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchStarshipsByIdError = error => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationStarshipsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationStarshipsSuccess = starships => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_SUCCESS,\r\n  payload : starships\r\n});\r\n\r\nexport const fetchPaginationStarshipsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import React  from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport * as peopleSelectors from '../../../redux/people/peopleSelectors'\r\nimport * as filmsSelectors from \"../../../redux/films/filmsSelectors\";\r\nimport PeopleList from \"../../People/PeopleList/PeopleList\";\r\nimport FilmsList from \"../../Films/FilmsList/FilmsList\";\r\n\r\n\r\nconst DetailStarships = ({\r\n                           name,\r\n                           model,\r\n                           manufacturer,\r\n                           cost_in_credits,\r\n                           length,\r\n                           max_atmosphering_speed,\r\n                           crew,\r\n                           passengers,\r\n                           cargo_capacity,\r\n                           consumables,\r\n                           hyperdrive_rating,\r\n                           MGLT,\r\n                           starship_class,\r\n                           pilots,\r\n                           films,\r\n                           allPeople,\r\n                           allFilms,\r\n}) => {\r\n\r\n  const history = useHistory()\r\n\r\n  const handlerBack = () => {\r\n    history.goBack()\r\n  }\r\n\r\n  const arrId = films.map(el => Number(el.split('/')[5]))\r\n  const film = allFilms.filter(el => {\r\n    return arrId.includes(el.episode_id)\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <p>Name : {name}</p>\r\n      <p>model : {model}</p>\r\n      <p>manufacturer : {manufacturer}</p>\r\n      <p>cost_in_credits : {cost_in_credits}</p>\r\n      <p>length : {length}</p>\r\n      <p>max_atmosphering_speed : {max_atmosphering_speed}</p>\r\n      <p>crew : {crew}</p>\r\n      <p>passengers : {passengers}</p>\r\n      <p>cargo_capacity : {cargo_capacity}</p>\r\n      <p>consumables : {consumables}</p>\r\n      <p>hyperdrive_rating : {hyperdrive_rating}</p>\r\n      <p>MGLT : {MGLT}</p>\r\n      <p>starship_class : {starship_class}</p>\r\n\r\n      {/*PILOTS*/}\r\n      {!!allPeople.length && (\r\n        <div>\r\n          <h2>pilots</h2>\r\n          <PeopleList people={allPeople}/>\r\n        </div>\r\n      )}\r\n\r\n      {/*FILMS*/}\r\n      {!!allFilms.length && (\r\n        <div>\r\n          <h2>films</h2>\r\n          <FilmsList film={film}/>\r\n        </div>\r\n      )}\r\n\r\n      <button\r\n        className=\"btn darken-4 right\"\r\n        onClick={handlerBack}\r\n      >\r\n        Back\r\n      </button>\r\n\r\n    </div>)\r\n}\r\n\r\nconst mSTP = state => ({\r\n  allFilms : filmsSelectors.getAllFilms(state),\r\n  allPeople : peopleSelectors.getPeople(state)\r\n})\r\n\r\nexport default connect(mSTP)(DetailStarships);\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport DetailStarships\r\n  from \"../components/Starships/DetailStarships/DetailStarships\";\r\nimport * as speciesSelectors from '../redux/species/speciesSelectors'\r\nimport * as starshipsSelectors from '../redux/starships/starshipsSelectors'\r\nimport * as peopleOperations from \"../redux/people/peopleOperations\";\r\nimport * as planetsOperations from \"../redux/planets/planetsOperations\";\r\nimport * as starshipsOperation from \"../redux/starships/starshipsOperations\";\r\nimport * as vehiclesOperations from \"../redux/vehicles/vehiclesOperations\";\r\nimport * as speciesOperations from \"../redux/species/speciesOperations\";\r\n\r\nconst DetailStarshipsPage = ({starships, fetchStarshipsById, fetchPeopleById}) => {\r\n  const starshipsId = Number(useParams().id)\r\n\r\n  useEffect(() => {\r\n    fetchStarshipsById(starshipsId)\r\n  }, [])\r\n\r\n  if (starships[0]) {\r\n    starships[0].pilots.map(el => {\r\n      const count = Number(el.split('/')[5])\r\n      return fetchPeopleById(count)\r\n    })\r\n  }\r\n\r\n  return (<div>\r\n    {starships[0] && <DetailStarships {...starships[0]}/>}\r\n    </div>)\r\n}\r\n\r\n\r\nconst mSTP = state => ({\r\n  starships : starshipsSelectors.getStarships(state)\r\n})\r\n\r\nconst mDTP = {\r\n  fetchPeopleById: peopleOperations.fetchPeopleById,\r\n  fetchPlanetsById: planetsOperations.fetchPlanetsById,\r\n  fetchStarshipsById: starshipsOperation.fetchStarshipsById,\r\n  fetchVehiclesById: vehiclesOperations.fetchVehiclesById,\r\n  fetchSpeciesById: speciesOperations.fetchSpeciesById,\r\n}\r\n\r\nexport default connect(mSTP, mDTP)(DetailStarshipsPage);","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export const getAllFilms = state => state.films.items\r\n\r\nexport const getLoading = state => state.films.loading\r\n","export const getPeople = state => state.people.items.sort((a, b) => {\r\n return a.name > b.name\r\n})\r\n\r\nexport const getLoading = state => state.people.loading\r\n\r\n\r\n//PAGINATION\r\nexport const paginationPeople = state => state.people.paginationPeople.results\r\n\r\nexport const peoplePrev = state => state.people.paginationPeople.previous\r\n\r\nexport const peopleNext = state => state.people.paginationPeople.next\r\n","export const getAllSpecies = state => state.species.items\r\n\r\nexport const getLoading = state => state.species.loading\r\n\r\n//PAGINATION\r\nexport const paginationSpecies = state => state.species.paginationSpecies.results\r\n\r\nexport const speciesPrev = state => state.species.paginationSpecies.previous\r\n\r\nexport const speciesNext = state => state.species.paginationSpecies.next\r\n"],"sourceRoot":""}