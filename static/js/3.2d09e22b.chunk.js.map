{"version":3,"sources":["redux/starships/starshipsSelectors.js","redux/vehicles/vehiclesSelectors.js","redux/people/peopleOperations.js","redux/people/peopleActions.js","redux/planets/planetsOperations.js","redux/planets/planetsActions.js","redux/species/speciesOperations.js","redux/species/speciesActions.js","components/People/PeopleList/PeopleList.js","components/Films/FilmsList/FilmsList.js","redux/vehicles/vehiclesOperations.js","redux/vehicles/vehiclesActions.js","redux/starships/starshipsOperations.js","redux/starships/starshipsActions.js","components/Planets/PlanetsList/PlanetsList.js","components/Species/SpeciesList/SpeciesList.js","components/Vehicles/VehiclesList/VehiclesList.js","components/Starships/StarshipsList/StarshipsList.js","components/People/DetailPeople/DetailPeople.js","components/Vehicles/DetailVehicles/DetailVehicles.js","pages/DetailVehiclesPage.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","redux/films/filmsSelectors.js","redux/people/peopleSelectors.js","redux/planets/planetsSelectors.js","redux/species/speciesSelectors.js"],"names":["getStarships","state","starships","items","getLoading","loading","paginationStarships","results","starshipsPrev","previous","starshipsNext","next","getAllVehicles","vehicles","paginationVehicles","vehiclesPrev","vehiclesNext","fetchPeopleById","count","dispatch","URL","type","ActionType","FETCH_PEOPLE_BY_ID_REQUEST","payload","axios","get","then","response","people","data","id","FETCH_PEOPLE_BY_ID_SUCCESS","catch","error","FETCH_PEOPLE_BY_ID_ERROR","fetchPeopleByIdError","fetchPaginationPeople","page","FETCH_PAGINATION_PEOPLE_REQUEST","FETCH_PAGINATION_PEOPLE_SUCCESS","fetchPlanetsById","FETCH_PLANETS_BY_ID_REQUEST","planets","FETCH_PLANETS_BY_ID_SUCCESS","FETCH_PLANETS_BY_ID_ERROR","fetchPlanetsByIdError","fetchPaginationPlanets","FETCH_PAGINATION_PLANETS_REQUEST","FETCH_PAGINATION_PLANETS_SUCCESS","fetchSpeciesById","FETCH_SPECIES_BY_ID_REQUEST","species","FETCH_SPECIES_BY_ID_SUCCESS","FETCH_SPECIES_BY_ID_ERROR","fetchSpeciesByIdError","fetchPaginationSpecies","FETCH_PAGINATION_SPECIES_REQUEST","FETCH_PAGINATION_SPECIES_SUCCESS","style","position","display","connect","peopleSelectors","length","map","el","i","key","to","name","filmsSelectors","film","episode_id","title","fetchVehiclesById","FETCH_VEHICLES_BY_ID_REQUEST","FETCH_VEHICLES_BY_ID_SUCCESS","FETCH_VEHICLES_BY_ID_ERROR","fetchVehiclesByIdError","fetchPaginationVehicles","FETCH_PAGINATION_VEHICLES_REQUEST","FETCH_PAGINATION_VEHICLES_SUCCESS","fetchStarshipsById","FETCH_STARSHIPS_BY_ID_REQUEST","FETCH_STARSHIPS_BY_ID_SUCCESS","FETCH_STARSHIPS_BY_ID_ERROR","fetchStarshipsByIdError","fetchPaginationStarships","FETCH_PAGINATION_STARSHIPS_REQUEST","FETCH_PAGINATION_STARSHIPS_SUCCESS","planetsSelectors","speciesSelectors","vehiclesSelectors","starshipsSelectors","console","log","allFilms","allPlanets","allStarships","allVehicles","allSpecies","height","mass","hair_color","skin_color","eye_color","birth_year","gender","films","history","useHistory","arrId","Number","split","filter","includes","className","onClick","goBack","allPeople","model","manufacturer","cost_in_credits","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","vehicle_class","pilots","mDTP","peopleOperations","planetsOperations","starshipsOperation","vehiclesOperations","speciesOperations","vehiclesId","useParams","useEffect","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","getAllFilms","getPeople","sort","a","b","paginationPeople","peoplePrev","peopleNext","getPlanets","paginationPlanets","planetsPrev","planetsNext","getAllSpecies","paginationSpecies","speciesPrev","speciesNext"],"mappings":"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","file":"static/js/3.2d09e22b.chunk.js","sourcesContent":["export const getStarships = state => state.starships.items\r\n\r\nexport const getLoading = state => state.starships.loading\r\n\r\n//PAGINATION\r\nexport const paginationStarships = state => state.starships.paginationStarships.results\r\n\r\nexport const starshipsPrev = state => state.starships.paginationStarships.previous\r\n\r\nexport const starshipsNext = state => state.starships.paginationStarships.next\r\n","export const getAllVehicles = state => state.vehicles.items\r\n\r\nexport const getLoading = state => state.vehicles.loading\r\n\r\n//PAGINATION\r\nexport const paginationVehicles = state => state.vehicles.paginationVehicles.results\r\n\r\nexport const vehiclesPrev = state => state.vehicles.paginationVehicles.previous\r\n\r\nexport const vehiclesNext = state => state.vehicles.paginationVehicles.next\r\n","import axios from 'axios';\r\nimport {\r\n  fetchPeopleByIdRequest,\r\n  fetchPeopleByIdSuccess,\r\n  fetchPeopleByIdError,\r\n  fetchPaginationPeopleRequest,\r\n  fetchPaginationPeopleSuccess\r\n} from './peopleActions';\r\n\r\n\r\nexport const fetchPeopleById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/people/${count}`\r\n  dispatch(fetchPeopleByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPeopleByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchPeopleByIdError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationPeople = page => dispatch => {\r\n  dispatch(fetchPaginationPeopleRequest())\r\n  const URL = `https://swapi.co/api/people/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPeopleSuccess(response.data)))\r\n}","import {ActionType} from '../actionType'\r\n\r\n\r\n// FETCH BY ID\r\nexport const fetchPeopleByIdRequest = () => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPeopleByIdSuccess = people => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_SUCCESS,\r\n  payload : {\r\n    people,\r\n  }\r\n});\r\n\r\nexport const fetchPeopleByIdError = error => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPeopleRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPaginationPeopleSuccess = people => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_SUCCESS,\r\n  payload : people\r\n});\r\n\r\nexport const fetchPaginationPeopleError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  fetchPlanetsByIdRequest,\r\n  fetchPlanetsByIdSuccess,\r\n  fetchPlanetsByIdError,\r\n  fetchPaginationPlanetsRequest,\r\n  fetchPaginationPlanetsSuccess\r\n} from './planetsActions';\r\n\r\n\r\n\r\nexport const fetchPlanetsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/planets/${count}`\r\n  dispatch(fetchPlanetsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPlanetsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchPlanetsByIdError(error));\r\n    });\r\n};\r\n\r\n//\r\nexport const fetchPaginationPlanets = page => dispatch => {\r\n  dispatch(fetchPaginationPlanetsRequest())\r\n  const URL = `https://swapi.co/api/planets/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPlanetsSuccess(response.data)))\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchPlanetsByIdRequest = () => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPlanetsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchPlanetsByIdError = error => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPlanetsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationPlanetsSuccess = planets => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_SUCCESS,\r\n  payload : planets\r\n});\r\n\r\nexport const fetchPaginationPlanetsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n","import axios from 'axios';\r\nimport {\r\n  fetchSpeciesByIdRequest,\r\n  fetchSpeciesByIdSuccess,\r\n  fetchSpeciesByIdError,\r\n  fetchPaginationSpeciesRequest,\r\n  fetchPaginationSpeciesSuccess\r\n} from './speciesActions';\r\n\r\nexport const fetchSpeciesById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/species/${count}`\r\n  dispatch(fetchSpeciesByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchSpeciesByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchSpeciesByIdError(error));\r\n    });\r\n};\r\nexport const fetchPaginationSpecies = page => dispatch => {\r\n  dispatch(fetchPaginationSpeciesRequest())\r\n  const URL = `https://swapi.co/api/species/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationSpeciesSuccess(response.data)))\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchSpeciesByIdRequest = () => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_REQUEST,\r\n});\r\n\r\nexport const fetchSpeciesByIdSuccess = species => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_SUCCESS,\r\n  payload : {\r\n    species,\r\n  }\r\n});\r\n\r\nexport const fetchSpeciesByIdError = error => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationSpeciesRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationSpeciesSuccess = species => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_SUCCESS,\r\n  payload : species\r\n});\r\n\r\nexport const fetchPaginationSpeciesError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as peopleSelectors from '../../../redux/people/peopleSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nconst style = {\r\n  position: 'relative',\r\n  display : 'block'\r\n}\r\n\r\nconst SpeciesList = ({people, loading}) => {\r\n  return (\r\n    <div style={style}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!people.length && (\r\n            <ul>\r\n              {people.map((el, i) => (\r\n                <li key={ i * 9}>\r\n                  <NavLink to={`/people/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : peopleSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as filmsSelectors from '../../../redux/films/filmsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nconst style = {\r\n  position: 'relative',\r\n  display : 'block'\r\n}\r\n\r\nconst SpeciesList = ({film, loading}) => {\r\n  return (\r\n    <div style={style}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!film.length && (\r\n            <ul>\r\n              {film.map((el, i) => (\r\n                <li key={el.episode_id}>\r\n                  <NavLink to={`/films/${el.episode_id}`}>{el.title}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : filmsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import axios from 'axios';\r\nimport {\r\n  fetchVehiclesByIdRequest,\r\n  fetchVehiclesByIdSuccess,\r\n  fetchVehiclesByIdError,\r\n  fetchPaginationVehiclesRequest, fetchPaginationVehiclesSuccess\r\n} from './vehiclesActions';\r\n\r\nexport const fetchVehiclesById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/vehicles/${count}`\r\n  dispatch(fetchVehiclesByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchVehiclesByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchVehiclesByIdError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationVehicles = page => dispatch => {\r\n  dispatch(fetchPaginationVehiclesRequest())\r\n  const URL = `https://swapi.co/api/vehicles/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationVehiclesSuccess(response.data)))\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchVehiclesByIdRequest = () => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_REQUEST,\r\n});\r\n\r\nexport const fetchVehiclesByIdSuccess = vehicles => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_SUCCESS,\r\n  payload : {\r\n    vehicles,\r\n  }\r\n});\r\n\r\nexport const fetchVehiclesByIdError = error => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationVehiclesRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationVehiclesSuccess = vehicles => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_SUCCESS,\r\n  payload : vehicles\r\n});\r\n\r\nexport const fetchPaginationVehiclesError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  fetchStarshipsByIdRequest,\r\n  fetchStarshipsByIdSuccess,\r\n  fetchStarshipsByIdError,\r\n  fetchPaginationStarshipsRequest,\r\n  fetchPaginationStarshipsSuccess\r\n} from './starshipsActions';\r\n\r\nexport const fetchStarshipsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/starships/${count}`\r\n  dispatch(fetchStarshipsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchStarshipsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchStarshipsByIdError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationStarships = page => dispatch => {\r\n  dispatch(fetchPaginationStarshipsRequest())\r\n  const URL = `https://swapi.co/api/starships/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationStarshipsSuccess(response.data)))\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchStarshipsByIdRequest = () => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchStarshipsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchStarshipsByIdError = error => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationStarshipsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationStarshipsSuccess = starships => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_SUCCESS,\r\n  payload : starships\r\n});\r\n\r\nexport const fetchPaginationStarshipsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as planetsSelectors from '../../../redux/planets/planetsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nconst style = {\r\n  position: 'relative',\r\n  display : 'block'\r\n}\r\n\r\nconst SpeciesList = ({planets, loading}) => {\r\n  return (\r\n    <div style={style}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!planets.length && (\r\n            <ul>\r\n              {planets.map((el, i) => (\r\n                <li key={ i * 9}>\r\n                  <NavLink to={`/planets/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : planetsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as speciesSelectors from '../../../redux/species/speciesSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nconst style = {\r\n  position: 'relative',\r\n  display : 'block'\r\n}\r\n\r\nconst SpeciesList = ({species, loading}) => {\r\n  return (\r\n    <div style={style}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!species.length && (\r\n            <ul>\r\n              {species.map((el, i) => (\r\n                <li key={ i * 9}>\r\n                  <NavLink to={`/species/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : speciesSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as vehiclesSelectors from '../../../redux/vehicles/vehiclesSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nconst style = {\r\n  position: 'relative',\r\n  display : 'block'\r\n}\r\n\r\nconst SpeciesList = ({vehicles, loading}) => {\r\n  return (\r\n    <div style={style}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!vehicles.length && (\r\n            <ul>\r\n              {vehicles.map((el, i) => (\r\n                <li key={ i * 9}>\r\n                  <NavLink to={`/vehicles/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : vehiclesSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as starshipsSelectors from '../../../redux/starships/starshipsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nconst style = {\r\n  position: 'relative',\r\n  display : 'block'\r\n}\r\n\r\nconst SpeciesList = ({starships, loading}) => {\r\n  console.log(starships)\r\n  return (\r\n    <div style={style}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!starships.length && (\r\n            <ul>\r\n              {starships.map((el, i) => (\r\n                <li key={ i * 9}>\r\n                  <NavLink to={`/starships/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : starshipsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport * as filmsSelectors from '../../../redux/films/filmsSelectors'\r\nimport * as planetsSelectors from '../../../redux/planets/planetsSelectors'\r\nimport * as starshipsSelectors\r\n  from '../../../redux/starships/starshipsSelectors'\r\nimport * as vehiclesSelectors from '../../../redux/vehicles/vehiclesSelectors'\r\nimport * as speciesSelectors from '../../../redux/species/speciesSelectors'\r\nimport FilmsList from \"../../Films/FilmsList/FilmsList\";\r\nimport PlanetsList from \"../../Planets/PlanetsList/PlanetsList\";\r\nimport StarshipsList from \"../../Starships/StarshipsList/StarshipsList\";\r\nimport VehiclesList from \"../../Vehicles/VehiclesList/VehiclesList\";\r\nimport SpeciesList from '../../Species/SpeciesList/SpeciesList'\r\n\r\n\r\n\r\nconst DetailPeople = ({\r\n                        name,\r\n                        height,\r\n                        mass,\r\n                        hair_color,\r\n                        skin_color,\r\n                        eye_color,\r\n                        birth_year,\r\n                        gender,\r\n                        allFilms,\r\n                        allPlanets,\r\n                        allStarships,\r\n                        allVehicles,\r\n                        allSpecies,\r\n                        films,\r\n                      }) => {\r\n\r\n  const history = useHistory()\r\n\r\n  const handlerBack = () => {\r\n    history.goBack()\r\n  }\r\n\r\n  const arrId = films.map(el => Number(el.split('/')[5]))\r\n  const film = allFilms.filter(el => {\r\n    return arrId.includes(el.episode_id)\r\n  })\r\n\r\n  return (<div>\r\n      <p>Name : {name}</p>\r\n      <p>height : {height}</p>\r\n      <p>mass : {mass}</p>\r\n      <p>hair_color : {hair_color}</p>\r\n      <p>skin_color : {skin_color}</p>\r\n      <p>eye_color : {eye_color}</p>\r\n      <p>birth_year : {birth_year}</p>\r\n      <p>gender : {gender}</p>\r\n\r\n    {/*FILMS*/}\r\n    {!!allFilms.length && (\r\n      <div>\r\n        <h2>films</h2>\r\n        <FilmsList film={film}/>\r\n      </div>\r\n    )}\r\n\r\n      {/*PLANETS*/}\r\n      {!!allPlanets.length && (\r\n        <div>\r\n        <h2>homeworld</h2>\r\n        <PlanetsList planets={allPlanets}/>\r\n        </div>\r\n      )}\r\n\r\n    {/*STARSHIPS*/}\r\n    {!!allStarships.length && (\r\n      <div>\r\n        <h2>starships</h2>\r\n        <StarshipsList starships={allStarships}/>\r\n      </div>\r\n    )}\r\n\r\n    {/*VEHICLES*/}\r\n    {!!allVehicles.length && (\r\n      <div>\r\n        <h3>vehicles</h3>\r\n        <VehiclesList vehicles={allVehicles}/>\r\n      </div>\r\n    )}\r\n\r\n    {/*SPECIES*/}\r\n    {!!allSpecies.length && (\r\n      <div>\r\n        <h2>species</h2>\r\n        <SpeciesList species={allSpecies}/>\r\n      </div>\r\n    )}\r\n\r\n    <button\r\n      className=\"btn darken-4 right\"\r\n      onClick={handlerBack}\r\n    >\r\n      Back\r\n    </button>\r\n\r\n    </div>)\r\n}\r\n\r\nconst mSTP = state => ({\r\n  allFilms : filmsSelectors.getAllFilms(state),\r\n  allPlanets: planetsSelectors.getPlanets(state),\r\n  allStarships: starshipsSelectors.getStarships(state),\r\n  allVehicles: vehiclesSelectors.getAllVehicles(state),\r\n  allSpecies: speciesSelectors.getAllSpecies(state),\r\n})\r\n\r\nexport default connect(mSTP)(DetailPeople)\r\n\r\n","import React from 'react';\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as filmsSelectors from \"../../../redux/films/filmsSelectors\";\r\nimport * as peopleSelectors from \"../../../redux/people/peopleSelectors\";\r\nimport PeopleList from \"../../People/PeopleList/PeopleList\";\r\nimport FilmsList from \"../../Films/FilmsList/FilmsList\";\r\n\r\nconst DetailVehicles = ({\r\n                          name,\r\n                          model,\r\n                          manufacturer,\r\n                          cost_in_credits,\r\n                          length,\r\n                          max_atmosphering_speed,\r\n                          crew,\r\n                          passengers,\r\n                          cargo_capacity,\r\n                          consumables,\r\n                          vehicle_class,\r\n                          pilots,\r\n                          films,\r\n                          allFilms,\r\n                          allPeople\r\n                        }) => {\r\n\r\n  const history = useHistory()\r\n\r\n  const handlerBack = () => {\r\n    history.goBack()\r\n  }\r\n\r\n  const arrId = films.map(el => Number(el.split('/')[5]))\r\n  const film = allFilms.filter(el => {\r\n    return arrId.includes(el.episode_id)\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <p>Name : {name}</p>\r\n      <p>model : {model}</p>\r\n      <p>manufacturer : {manufacturer}</p>\r\n      <p>cost_in_credits : {cost_in_credits}</p>\r\n      <p>length : {length}</p>\r\n      <p>max_atmosphering_speed : {max_atmosphering_speed}</p>\r\n      <p>crew : {crew}</p>\r\n      <p>passengers : {passengers}</p>\r\n      <p>cargo_capacity : {cargo_capacity}</p>\r\n      <p>consumables : {consumables}</p>\r\n      <p>vehicle_class : {vehicle_class}</p>\r\n\r\n      {/*PILOTS*/}\r\n      {!!allPeople.length && (\r\n        <div>\r\n          <h2>pilots</h2>\r\n          <PeopleList people={allPeople}/>\r\n        </div>\r\n      )}\r\n\r\n      {/*FILMS*/}\r\n      {!!allFilms.length && (\r\n        <div>\r\n          <h2>films</h2>\r\n          <FilmsList film={film}/>\r\n        </div>\r\n      )}\r\n\r\n      <button\r\n        className=\"btn darken-4 right\"\r\n        onClick={handlerBack}\r\n      >\r\n        Back\r\n      </button>\r\n\r\n    </div>)\r\n}\r\nconst mSTP = state => ({\r\n  allFilms : filmsSelectors.getAllFilms(state),\r\n  allPeople : peopleSelectors.getPeople(state)\r\n})\r\n\r\nexport default connect(mSTP)(DetailVehicles)\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport DetailVehicles\r\n  from \"../components/Vehicles/DetailVehicles/DetailVehicles\";\r\nimport * as vehiclesSelectors from '../redux/vehicles/vehiclesSelectors'\r\nimport * as peopleOperations from \"../redux/people/peopleOperations\";\r\nimport * as planetsOperations from \"../redux/planets/planetsOperations\";\r\nimport * as starshipsOperation from \"../redux/starships/starshipsOperations\";\r\nimport * as vehiclesOperations from \"../redux/vehicles/vehiclesOperations\";\r\nimport * as speciesOperations from \"../redux/species/speciesOperations\";\r\nimport DetailPeople from \"../components/People/DetailPeople/DetailPeople\";\r\n\r\nconst DetailVehiclesPage = ({vehicles, fetchVehiclesById, fetchPeopleById}) => {\r\n  const vehiclesId = Number(useParams().id)\r\n\r\n  useEffect(() => {\r\n    fetchVehiclesById(vehiclesId)\r\n  }, [fetchVehiclesById])\r\n\r\n  if (vehicles[0]) {\r\n    vehicles[0].pilots.map(el => {\r\n      const count = Number(el.split('/')[5])\r\n      return fetchPeopleById(count)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!!vehicles.length &&   <DetailVehicles {...vehicles[0]}/>}\r\n    </div>)\r\n}\r\n\r\nconst mSTP = state => ({\r\n  vehicles : vehiclesSelectors.getAllVehicles(state)\r\n})\r\n\r\nconst mDTP = {\r\n  fetchPeopleById: peopleOperations.fetchPeopleById,\r\n  fetchPlanetsById: planetsOperations.fetchPlanetsById,\r\n  fetchStarshipsById: starshipsOperation.fetchStarshipsById,\r\n  fetchVehiclesById: vehiclesOperations.fetchVehiclesById,\r\n  fetchSpeciesById: speciesOperations.fetchSpeciesById,\r\n}\r\n\r\nexport default connect(mSTP, mDTP)(DetailVehiclesPage)\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export const getAllFilms = state => state.films.items\r\n\r\nexport const getLoading = state => state.films.loading\r\n","export const getPeople = state => state.people.items.sort((a, b) => {\r\n return a.name > b.name\r\n})\r\n\r\nexport const getLoading = state => state.people.loading\r\n\r\n\r\n//PAGINATION\r\nexport const paginationPeople = state => state.people.paginationPeople.results\r\n\r\nexport const peoplePrev = state => state.people.paginationPeople.previous\r\n\r\nexport const peopleNext = state => state.people.paginationPeople.next\r\n","export const getPlanets = state => state.planets.items\r\n\r\nexport const getLoading = state => state.planets.loading\r\n\r\n//PAGINATION\r\nexport const paginationPlanets = state => state.planets.paginationPlanets.results\r\n\r\nexport const planetsPrev = state => state.planets.paginationPlanets.previous\r\n\r\nexport const planetsNext = state => state.planets.paginationPlanets.next\r\n","export const getAllSpecies = state => state.species.items\r\n\r\nexport const getLoading = state => state.species.loading\r\n\r\n//PAGINATION\r\nexport const paginationSpecies = state => state.species.paginationSpecies.results\r\n\r\nexport const speciesPrev = state => state.species.paginationSpecies.previous\r\n\r\nexport const speciesNext = state => state.species.paginationSpecies.next\r\n"],"sourceRoot":""}