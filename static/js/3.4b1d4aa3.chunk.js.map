{"version":3,"sources":["redux/films/filmsSelectors.js","redux/species/speciesOperations.js","redux/species/speciesActions.js","redux/people/peopleSelectors.js","redux/planets/planetsSelectors.js","redux/vehicles/vehiclesOperations.js","redux/vehicles/vehiclesActions.js","redux/starships/starshipsOperations.js","redux/starships/starshipsActions.js","redux/species/speciesSelectors.js","redux/starships/starshipsSelectors.js","redux/vehicles/vehiclesSelectors.js","components/detail.module.css","components/People/PeopleList/PeopleList.js","components/Films/FilmsList/FilmsList.js","components/Planets/PlanetsList/PlanetsList.js","components/Species/SpeciesList/SpeciesList.js","components/Vehicles/VehiclesList/VehiclesList.js","components/Starships/StarshipsList/StarshipsList.js","components/People/DetailPeople/DetailPeople.js","components/Vehicles/DetailVehicles/DetailVehicles.js","pages/DetailVehiclesPage.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/list.module.css","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","redux/planets/planetsOperations.js","redux/planets/planetsActions.js","redux/people/peopleOperations.js","redux/people/peopleActions.js"],"names":["getAllFilms","state","films","items","getLoading","loading","fetchSpeciesById","count","dispatch","URL","type","ActionType","FETCH_SPECIES_BY_ID_REQUEST","axios","get","then","response","species","data","id","FETCH_SPECIES_BY_ID_SUCCESS","payload","catch","error","console","log","message","FETCH_SPECIES_BY_ID_ERROR","fetchSpeciesByIdError","searchSpecies","name","SEARCH_SPECIES_REQUEST","results","SEARCH_SPECIES_SUCCESS","SEARCH_SPECIES_ERROR","searchSpeciesError","fetchPaginationSpecies","page","FETCH_PAGINATION_SPECIES_REQUEST","FETCH_PAGINATION_SPECIES_SUCCESS","getPeople","people","sort","a","b","peopleSearch","search","paginationPeople","peoplePrev","previous","peopleNext","next","getPlanets","planets","planetsSeach","paginationPlanets","planetsPrev","planetsNext","fetchVehiclesById","FETCH_VEHICLES_BY_ID_REQUEST","vehicles","FETCH_VEHICLES_BY_ID_SUCCESS","FETCH_VEHICLES_BY_ID_ERROR","fetchVehiclesByIdError","searchVehicles","SEARCH_VEHICLES_REQUEST","SEARCH_VEHICLES_SUCCESS","SEARCH_VEHICLES_ERROR","searchVehiclesError","fetchPaginationVehicles","FETCH_PAGINATION_VEHICLES_REQUEST","FETCH_PAGINATION_VEHICLES_SUCCESS","fetchStarshipsById","FETCH_STARSHIPS_BY_ID_REQUEST","FETCH_STARSHIPS_BY_ID_SUCCESS","FETCH_STARSHIPS_BY_ID_ERROR","fetchStarshipsByIdError","searchStarships","SEARCH_STARSHIPS_REQUEST","starships","SEARCH_STARSHIPS_SUCCESS","SEARCH_STARSHIPS_ERROR","searchStarshipsError","fetchPaginationStarships","FETCH_PAGINATION_STARSHIPS_REQUEST","FETCH_PAGINATION_STARSHIPS_SUCCESS","getAllSpecies","speciesSearch","paginationSpecies","speciesPrev","speciesNext","getStarships","starshipsSearch","paginationStarships","starshipsPrev","starshipsNext","getAllVehicles","vehiclesSearch","paginationVehicles","vehiclesPrev","vehiclesNext","module","exports","connect","peopleSelectors","className","css","container","length","list","map","el","i","item","key","link","to","filmsSelectors","film","episode_id","title","planetsSelectors","speciesSelectors","vehiclesSelectors","starshipsSelectors","allFilms","allPlanets","allStarships","allVehicles","allSpecies","height","mass","hair_color","skin_color","eye_color","birth_year","gender","history","useHistory","arrId","Number","split","filter","includes","desc","p","button","onClick","goBack","allPeople","model","manufacturer","cost_in_credits","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","vehicle_class","pilots","mDTP","fetchPeopleById","peopleOperations","fetchPlanetsById","planetsOperations","starshipsOperation","vehiclesOperations","speciesOperations","vehiclesId","useParams","useEffect","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","FETCH_PLANETS_BY_ID_REQUEST","FETCH_PLANETS_BY_ID_SUCCESS","FETCH_PLANETS_BY_ID_ERROR","fetchPlanetsByIdError","searchPlanets","SEARCH_PLANETS_REQUEST","SEARCH_PLANETS_SUCCESS","SEARCH_PLANETS_ERROR","searchPlanetsError","fetchPaginationPlanets","FETCH_PAGINATION_PLANETS_REQUEST","FETCH_PAGINATION_PLANETS_SUCCESS","FETCH_PEOPLE_BY_ID_REQUEST","FETCH_PEOPLE_BY_ID_SUCCESS","FETCH_PEOPLE_BY_ID_ERROR","fetchPeopleByIdError","searchPeople","SEARCH_PEOPLE_REQUEST","SEARCH_PEOPLE_SUCCESS","SEARCH_PEOPLE_ERROR","searchPeopleError","fetchPaginationPeople","FETCH_PAGINATION_PEOPLE_REQUEST","FETCH_PAGINATION_PEOPLE_SUCCESS"],"mappings":"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","file":"static/js/3.4b1d4aa3.chunk.js","sourcesContent":["export const getAllFilms = state => state.films.items\r\n\r\nexport const getLoading = state => state.films.loading\r\n","import axios from 'axios';\r\nimport {\r\n  fetchSpeciesByIdRequest,\r\n  fetchSpeciesByIdSuccess,\r\n  fetchSpeciesByIdError,\r\n  fetchPaginationSpeciesRequest,\r\n  fetchPaginationSpeciesSuccess,\r\n  searchSpeciesRequest,\r\n  searchSpeciesSuccess,\r\n  searchSpeciesError\r\n} from './speciesActions';\r\n\r\nexport const fetchSpeciesById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/species/${count}`\r\n  dispatch(fetchSpeciesByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchSpeciesByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchSpeciesByIdError(error));\r\n    });\r\n};\r\n\r\n//SEARCH\r\nexport const searchSpecies = (name) => dispatch => {\r\n  const URL = `https://swapi.co/api/species/?search=${name}`;\r\n  dispatch(searchSpeciesRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(searchSpeciesSuccess(response.data.results));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(searchSpeciesError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationSpecies = page => dispatch => {\r\n  dispatch(fetchPaginationSpeciesRequest())\r\n  const URL = `https://swapi.co/api/species/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationSpeciesSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n// FETCH SPECIES\r\nexport const fetchSpeciesByIdRequest = () => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_REQUEST,\r\n});\r\n\r\nexport const fetchSpeciesByIdSuccess = species => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_SUCCESS,\r\n  payload : {\r\n    species,\r\n  }\r\n});\r\n\r\nexport const fetchSpeciesByIdError = error => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// SPECIES SEARCH\r\nexport const searchSpeciesRequest = () => ({\r\n  type: ActionType.SEARCH_SPECIES_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const searchSpeciesSuccess = species => ({\r\n  type: ActionType.SEARCH_SPECIES_SUCCESS,\r\n  payload : species\r\n});\r\n\r\nexport const searchSpeciesError = error => ({\r\n  type: ActionType.SEARCH_SPECIES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationSpeciesRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationSpeciesSuccess = species => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_SUCCESS,\r\n  payload : species\r\n});\r\n\r\nexport const fetchPaginationSpeciesError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","export const getPeople = state => state.people.items.sort((a, b) => {\r\n return a.name > b.name\r\n})\r\n\r\nexport const getLoading = state => state.people.loading\r\n\r\n//SEARCH\r\nexport const peopleSearch = state => state.people.search\r\n\r\n\r\n//PAGINATION\r\nexport const paginationPeople = state => state.people.paginationPeople.results\r\n\r\nexport const peoplePrev = state => state.people.paginationPeople.previous\r\n\r\nexport const peopleNext = state => state.people.paginationPeople.next\r\n","export const getPlanets = state => state.planets.items\r\n\r\nexport const getLoading = state => state.planets.loading\r\n\r\n//SEARCH\r\nexport const planetsSeach = state => state.planets.search\r\n\r\n//PAGINATION\r\nexport const paginationPlanets = state => state.planets.paginationPlanets.results\r\n\r\nexport const planetsPrev = state => state.planets.paginationPlanets.previous\r\n\r\nexport const planetsNext = state => state.planets.paginationPlanets.next\r\n","import axios from 'axios';\r\nimport {\r\n  fetchVehiclesByIdRequest,\r\n  fetchVehiclesByIdSuccess,\r\n  fetchVehiclesByIdError,\r\n  fetchPaginationVehiclesRequest,\r\n  fetchPaginationVehiclesSuccess,\r\n  searchVehiclesRequest,\r\n  searchVehiclesSuccess,\r\n  searchVehiclesError\r\n} from './vehiclesActions';\r\n\r\nexport const fetchVehiclesById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/vehicles/${count}`\r\n  dispatch(fetchVehiclesByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchVehiclesByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchVehiclesByIdError(error));\r\n    });\r\n};\r\n\r\n//SEARCH\r\nexport const searchVehicles = (name) => dispatch => {\r\n  const URL = `https://swapi.co/api/vehicles/?search=${name}`;\r\n  dispatch(searchVehiclesRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(searchVehiclesSuccess(response.data.results));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(searchVehiclesError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationVehicles = page => dispatch => {\r\n  dispatch(fetchPaginationVehiclesRequest())\r\n  const URL = `https://swapi.co/api/vehicles/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationVehiclesSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n//FETCH VEHICLES\r\nexport const fetchVehiclesByIdRequest = () => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_REQUEST,\r\n});\r\n\r\nexport const fetchVehiclesByIdSuccess = vehicles => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_SUCCESS,\r\n  payload : {\r\n    vehicles,\r\n  }\r\n});\r\n\r\nexport const fetchVehiclesByIdError = error => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// VEHICLES SEARCH\r\nexport const searchVehiclesRequest = () => ({\r\n  type: ActionType.SEARCH_VEHICLES_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const searchVehiclesSuccess = vehicles => ({\r\n  type: ActionType.SEARCH_VEHICLES_SUCCESS,\r\n  payload : vehicles\r\n});\r\n\r\nexport const searchVehiclesError = error => ({\r\n  type: ActionType.SEARCH_VEHICLES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationVehiclesRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationVehiclesSuccess = vehicles => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_SUCCESS,\r\n  payload : vehicles\r\n});\r\n\r\nexport const fetchPaginationVehiclesError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  fetchStarshipsByIdRequest,\r\n  fetchStarshipsByIdSuccess,\r\n  fetchStarshipsByIdError,\r\n  fetchPaginationStarshipsRequest,\r\n  fetchPaginationStarshipsSuccess,\r\n  searchStarshipsError,\r\n  searchStarshipsSuccess,\r\n  searchStarshipsRequest\r\n} from './starshipsActions';\r\n\r\n\r\nexport const fetchStarshipsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/starships/${count}`\r\n  dispatch(fetchStarshipsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchStarshipsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchStarshipsByIdError(error));\r\n    });\r\n};\r\n\r\n\r\n//SEARCH\r\nexport const searchStarships = (name) => dispatch => {\r\n  const URL = `https://swapi.co/api/starships/?search=${name}`;\r\n  dispatch(searchStarshipsRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(searchStarshipsSuccess(response.data.results));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(searchStarshipsError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationStarships = page => dispatch => {\r\n  dispatch(fetchPaginationStarshipsRequest())\r\n  const URL = `https://swapi.co/api/starships/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationStarshipsSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n// FECTH STARSHIPS\r\nexport const fetchStarshipsByIdRequest = () => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchStarshipsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchStarshipsByIdError = error => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// STARSHIPS SEARCH\r\nexport const searchStarshipsRequest = () => ({\r\n  type: ActionType.SEARCH_STARSHIPS_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const searchStarshipsSuccess = starships => ({\r\n  type: ActionType.SEARCH_STARSHIPS_SUCCESS,\r\n  payload : starships\r\n});\r\n\r\nexport const searchStarshipsError = error => ({\r\n  type: ActionType.SEARCH_STARSHIPS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationStarshipsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationStarshipsSuccess = starships => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_SUCCESS,\r\n  payload : starships\r\n});\r\n\r\nexport const fetchPaginationStarshipsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","export const getAllSpecies = state => state.species.items\r\n\r\nexport const getLoading = state => state.species.loading\r\n\r\n//SEARCH\r\nexport const speciesSearch = state => state.species.search\r\n\r\n//PAGINATION\r\nexport const paginationSpecies = state => state.species.paginationSpecies.results\r\n\r\nexport const speciesPrev = state => state.species.paginationSpecies.previous\r\n\r\nexport const speciesNext = state => state.species.paginationSpecies.next\r\n","export const getStarships = state => state.starships.items\r\n\r\nexport const getLoading = state => state.starships.loading\r\n\r\n//SEARCH\r\nexport const starshipsSearch = state => state.starships.search\r\n\r\n//PAGINATION\r\nexport const paginationStarships = state => state.starships.paginationStarships.results\r\n\r\nexport const starshipsPrev = state => state.starships.paginationStarships.previous\r\n\r\nexport const starshipsNext = state => state.starships.paginationStarships.next\r\n","export const getAllVehicles = state => state.vehicles.items\r\n\r\nexport const getLoading = state => state.vehicles.loading\r\n\r\n//SEARCH\r\nexport const vehiclesSearch = state => state.vehicles.search\r\n\r\n//PAGINATION\r\nexport const paginationVehicles = state => state.vehicles.paginationVehicles.results\r\n\r\nexport const vehiclesPrev = state => state.vehicles.paginationVehicles.previous\r\n\r\nexport const vehiclesNext = state => state.vehicles.paginationVehicles.next\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"detail_container__BC9SV\",\"desc\":\"detail_desc__AcYHn\",\"p\":\"detail_p__2pKXO\",\"i\":\"detail_i__2pxcA\",\"title\":\"detail_title__3WL5J\",\"button\":\"detail_button__1z1Ze\"};","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as peopleSelectors from '../../../redux/people/peopleSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\nimport css from \"../../list.module.css\";\r\n\r\nconst SpeciesList = ({people, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!people.length && (\r\n            <ul className={css.list}>\r\n              {people.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={ i * 9}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/people/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : peopleSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as filmsSelectors from '../../../redux/films/filmsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nimport css from '../../list.module.css'\r\n\r\nconst SpeciesList = ({film, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!film.length && (\r\n            <ul className={css.list}>\r\n              {film.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={el.episode_id}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/films/${el.episode_id}`}>{el.title}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : filmsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as planetsSelectors from '../../../redux/planets/planetsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\nimport css from \"../../list.module.css\";\r\n\r\nconst SpeciesList = ({planets, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!planets.length && (\r\n            <ul className={css.list}>\r\n              {planets.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={ i * 9}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/planets/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : planetsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as speciesSelectors from '../../../redux/species/speciesSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\nimport css from \"../../list.module.css\";\r\n\r\nconst SpeciesList = ({species, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!species.length && (\r\n            <ul className={css.list}>\r\n              {species.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={ i * 9}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/species/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : speciesSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as vehiclesSelectors from '../../../redux/vehicles/vehiclesSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\nimport css from \"../../list.module.css\";\r\n\r\nconst SpeciesList = ({vehicles, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!vehicles.length && (\r\n            <ul className={css.list}>\r\n              {vehicles.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={ i * 9}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/vehicles/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : vehiclesSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as starshipsSelectors from '../../../redux/starships/starshipsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nimport css from \"../../list.module.css\";\r\n\r\nconst SpeciesList = ({starships, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!starships.length && (\r\n            <ul className={css.list}>\r\n              {starships.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={ i * 9}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/starships/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : starshipsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport * as filmsSelectors from '../../../redux/films/filmsSelectors'\r\nimport * as planetsSelectors from '../../../redux/planets/planetsSelectors'\r\nimport * as starshipsSelectors\r\n  from '../../../redux/starships/starshipsSelectors'\r\nimport * as vehiclesSelectors from '../../../redux/vehicles/vehiclesSelectors'\r\nimport * as speciesSelectors from '../../../redux/species/speciesSelectors'\r\nimport FilmsList from \"../../Films/FilmsList/FilmsList\";\r\nimport PlanetsList from \"../../Planets/PlanetsList/PlanetsList\";\r\nimport StarshipsList from \"../../Starships/StarshipsList/StarshipsList\";\r\nimport VehiclesList from \"../../Vehicles/VehiclesList/VehiclesList\";\r\nimport SpeciesList from '../../Species/SpeciesList/SpeciesList'\r\n\r\nimport css from '../../detail.module.css'\r\n\r\nconst DetailPeople = ({\r\n                        name,\r\n                        height,\r\n                        mass,\r\n                        hair_color,\r\n                        skin_color,\r\n                        eye_color,\r\n                        birth_year,\r\n                        gender,\r\n                        allFilms,\r\n                        allPlanets,\r\n                        allStarships,\r\n                        allVehicles,\r\n                        allSpecies,\r\n                        films,\r\n                      }) => {\r\n\r\n  const history = useHistory()\r\n\r\n  const handlerBack = () => {\r\n    history.goBack()\r\n  }\r\n\r\n  const arrId = films.map(el => Number(el.split('/')[5]))\r\n  const film = allFilms.filter(el => {\r\n    return arrId.includes(el.episode_id)\r\n  })\r\n\r\n  return (\r\n     <div className={css.container}>\r\n       <div className={css.desc}>\r\n      <p className={css.p}>Name:</p>\r\n      <p className={css.i}>{name}</p>\r\n       </div>\r\n       <div className={css.desc}>\r\n      <p className={css.p}>height:</p>\r\n      <p className={css.i}>{height}</p>\r\n       </div>\r\n       <div className={css.desc}>\r\n      <p className={css.p}>hair color:</p>\r\n      <p className={css.i}>{hair_color}</p>\r\n       </div>\r\n       <div className={css.desc}>\r\n      <p className={css.p}>mass:</p>\r\n      <p className={css.i}>{mass}</p>\r\n       </div>\r\n       <div className={css.desc}>\r\n      <p className={css.p}>skin color:</p>\r\n      <p className={css.i}>{skin_color}</p>\r\n       </div>\r\n       <div className={css.desc}>\r\n      <p className={css.p}>eye color:</p>\r\n      <p className={css.i}>{eye_color}</p>\r\n       </div>\r\n       <div className={css.desc}>\r\n      <p className={css.p}>birth year:</p>\r\n      <p className={css.i}>{birth_year}</p>\r\n       </div>\r\n       <div className={css.desc}>\r\n      <p className={css.p}>gender:</p>\r\n      <p className={css.i}>{gender}</p>\r\n       </div>\r\n\r\n    {/*FILMS*/}\r\n    {!!allFilms.length && (\r\n      <div>\r\n        <h2 className={css.title}>films</h2>\r\n        <FilmsList film={film}/>\r\n      </div>\r\n    )}\r\n\r\n      {/*PLANETS*/}\r\n      {!!allPlanets.length && (\r\n        <div>\r\n        <h2 className={css.title}>homeworld</h2>\r\n        <PlanetsList planets={allPlanets}/>\r\n        </div>\r\n      )}\r\n\r\n    {/*STARSHIPS*/}\r\n    {!!allStarships.length && (\r\n      <div>\r\n        <h2 className={css.title}>starships</h2>\r\n        <StarshipsList starships={allStarships}/>\r\n      </div>\r\n    )}\r\n\r\n    {/*VEHICLES*/}\r\n    {!!allVehicles.length && (\r\n      <div>\r\n        <h2 className={css.title}>vehicles</h2>\r\n        <VehiclesList vehicles={allVehicles}/>\r\n      </div>\r\n    )}\r\n\r\n    {/*SPECIES*/}\r\n    {!!allSpecies.length && (\r\n      <div>\r\n        <h2 className={css.title}>species</h2>\r\n        <SpeciesList species={allSpecies}/>\r\n      </div>\r\n    )}\r\n\r\n    <button\r\n      className={css.button}\r\n      onClick={handlerBack}\r\n    >\r\n      Back\r\n    </button>\r\n\r\n    </div>)\r\n}\r\n\r\nconst mSTP = state => ({\r\n  allFilms : filmsSelectors.getAllFilms(state),\r\n  allPlanets: planetsSelectors.getPlanets(state),\r\n  allStarships: starshipsSelectors.getStarships(state),\r\n  allVehicles: vehiclesSelectors.getAllVehicles(state),\r\n  allSpecies: speciesSelectors.getAllSpecies(state),\r\n})\r\n\r\nexport default connect(mSTP)(DetailPeople)\r\n\r\n","import React from 'react';\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as filmsSelectors from \"../../../redux/films/filmsSelectors\";\r\nimport * as peopleSelectors from \"../../../redux/people/peopleSelectors\";\r\nimport PeopleList from \"../../People/PeopleList/PeopleList\";\r\nimport FilmsList from \"../../Films/FilmsList/FilmsList\";\r\n\r\nimport css from '../../detail.module.css'\r\n\r\nconst DetailVehicles = ({\r\n                          name,\r\n                          model,\r\n                          manufacturer,\r\n                          cost_in_credits,\r\n                          length,\r\n                          max_atmosphering_speed,\r\n                          crew,\r\n                          passengers,\r\n                          cargo_capacity,\r\n                          consumables,\r\n                          vehicle_class,\r\n                          pilots,\r\n                          films,\r\n                          allFilms,\r\n                          allPeople\r\n                        }) => {\r\n\r\n  const history = useHistory()\r\n\r\n  const handlerBack = () => {\r\n    history.goBack()\r\n  }\r\n\r\n  const arrId = films.map(el => Number(el.split('/')[5]))\r\n  const film = allFilms.filter(el => {\r\n    return arrId.includes(el.episode_id)\r\n  })\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>Name:</p>\r\n      <p className={css.i}>{name}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>model:</p>\r\n      <p className={css.i}>{model}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>manufacturer:</p>\r\n      <p className={css.i}>{manufacturer}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>cost in credits:</p>\r\n      <p className={css.i}>{cost_in_credits}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>length:</p>\r\n      <p className={css.i}>{length}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>max atmosphering speed:</p>\r\n      <p className={css.i}>{max_atmosphering_speed}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>crew:</p>\r\n      <p className={css.i}>{crew}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>passengers:</p>\r\n      <p className={css.i}>{passengers}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>cargo capacity:</p>\r\n      <p className={css.i}>{cargo_capacity}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>consumables:</p>\r\n      <p className={css.i}>{consumables}</p>\r\n      </div>\r\n      <div className={css.desc}>\r\n      <p className={css.p}>vehicle class:</p>\r\n      <p className={css.i}>{vehicle_class}</p>\r\n      </div>\r\n\r\n      {/*PILOTS*/}\r\n      {!!allPeople.length && (\r\n        <div>\r\n          <h2 className={css.title}>pilots</h2>\r\n          <PeopleList people={allPeople}/>\r\n        </div>\r\n      )}\r\n\r\n      {/*FILMS*/}\r\n      {!!allFilms.length && (\r\n        <div>\r\n          <h2 className={css.title}>films</h2>\r\n          <FilmsList film={film}/>\r\n        </div>\r\n      )}\r\n\r\n      <button\r\n        className={css.button}\r\n        onClick={handlerBack}\r\n      >\r\n        Back\r\n      </button>\r\n\r\n    </div>)\r\n}\r\nconst mSTP = state => ({\r\n  allFilms : filmsSelectors.getAllFilms(state),\r\n  allPeople : peopleSelectors.getPeople(state)\r\n})\r\n\r\nexport default connect(mSTP)(DetailVehicles)\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport DetailVehicles\r\n  from \"../components/Vehicles/DetailVehicles/DetailVehicles\";\r\nimport * as vehiclesSelectors from '../redux/vehicles/vehiclesSelectors'\r\nimport * as peopleOperations from \"../redux/people/peopleOperations\";\r\nimport * as planetsOperations from \"../redux/planets/planetsOperations\";\r\nimport * as starshipsOperation from \"../redux/starships/starshipsOperations\";\r\nimport * as vehiclesOperations from \"../redux/vehicles/vehiclesOperations\";\r\nimport * as speciesOperations from \"../redux/species/speciesOperations\";\r\nimport DetailPeople from \"../components/People/DetailPeople/DetailPeople\";\r\n\r\nconst DetailVehiclesPage = ({vehicles, fetchVehiclesById, fetchPeopleById}) => {\r\n  const vehiclesId = Number(useParams().id)\r\n\r\n  useEffect(() => {\r\n    fetchVehiclesById(vehiclesId)\r\n  }, [fetchVehiclesById])\r\n\r\n  if (vehicles[0]) {\r\n    vehicles[0].pilots.map(el => {\r\n      const count = Number(el.split('/')[5])\r\n      return fetchPeopleById(count)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!!vehicles.length &&   <DetailVehicles {...vehicles[0]}/>}\r\n    </div>)\r\n}\r\n\r\nconst mSTP = state => ({\r\n  vehicles : vehiclesSelectors.getAllVehicles(state)\r\n})\r\n\r\nconst mDTP = {\r\n  fetchPeopleById: peopleOperations.fetchPeopleById,\r\n  fetchPlanetsById: planetsOperations.fetchPlanetsById,\r\n  fetchStarshipsById: starshipsOperation.fetchStarshipsById,\r\n  fetchVehiclesById: vehiclesOperations.fetchVehiclesById,\r\n  fetchSpeciesById: speciesOperations.fetchSpeciesById,\r\n}\r\n\r\nexport default connect(mSTP, mDTP)(DetailVehiclesPage)\r\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"list_container__1Bq0D\",\"list\":\"list_list__1pvkh\",\"item\":\"list_item__3HMYw\",\"link\":\"list_link__2mIHv\"};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import axios from 'axios';\r\nimport {\r\n  fetchPlanetsByIdRequest,\r\n  fetchPlanetsByIdSuccess,\r\n  fetchPlanetsByIdError,\r\n  fetchPaginationPlanetsRequest,\r\n  fetchPaginationPlanetsSuccess,\r\n  searchPlanetsRequest,\r\n  searchPlanetsSuccess,\r\n  searchPlanetsError\r\n} from './planetsActions';\r\n\r\n\r\n\r\nexport const fetchPlanetsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/planets/${count}`\r\n  dispatch(fetchPlanetsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPlanetsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchPlanetsByIdError(error));\r\n    });\r\n};\r\n\r\n//SEARCH\r\nexport const searchPlanets = (name) => dispatch => {\r\n  const URL = `https://swapi.co/api/planets/?search=${name}`;\r\n  dispatch(searchPlanetsRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      console.log(response.data)\r\n      dispatch(searchPlanetsSuccess(response.data.results));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(searchPlanetsError(error));\r\n    });\r\n};\r\n\r\n// PAGINATION\r\nexport const fetchPaginationPlanets = page => dispatch => {\r\n  dispatch(fetchPaginationPlanetsRequest())\r\n  const URL = `https://swapi.co/api/planets/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPlanetsSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n//FETCH PLANETS BY ID\r\nexport const fetchPlanetsByIdRequest = () => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPlanetsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchPlanetsByIdError = error => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// PLANETS SEARCH\r\nexport const searchPlanetsRequest = () => ({\r\n  type: ActionType.SEARCH_PLANETS_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const searchPlanetsSuccess = planets => ({\r\n  type: ActionType.SEARCH_PLANETS_SUCCESS,\r\n  payload : planets\r\n});\r\n\r\nexport const searchPlanetsError = error => ({\r\n  type: ActionType.SEARCH_PLANETS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPlanetsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationPlanetsSuccess = planets => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_SUCCESS,\r\n  payload : planets\r\n});\r\n\r\nexport const fetchPaginationPlanetsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n","import axios from 'axios';\r\nimport {\r\n  fetchPeopleByIdRequest,\r\n  fetchPeopleByIdSuccess,\r\n  fetchPeopleByIdError,\r\n  fetchPaginationPeopleRequest,\r\n  fetchPaginationPeopleSuccess,\r\n  searchPeopleRequest,\r\n  searchPeopleSuccess, searchPeopleError\r\n} from './peopleActions';\r\n\r\n\r\nexport const fetchPeopleById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/people/${count}`\r\n  dispatch(fetchPeopleByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPeopleByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchPeopleByIdError(error));\r\n    });\r\n};\r\n\r\n//SEARCH\r\nexport const searchPeople = (name) => dispatch => {\r\n  const URL = `https://swapi.co/api/people/?search=${name}`;\r\n  dispatch(searchPeopleRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(searchPeopleSuccess(response.data.results));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(searchPeopleError(error));\r\n    });\r\n};\r\n\r\n\r\n//FETCH PAGINATION\r\nexport const fetchPaginationPeople = page => dispatch => {\r\n  dispatch(fetchPaginationPeopleRequest())\r\n  const URL = `https://swapi.co/api/people/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPeopleSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n// FETCH BY ID\r\nexport const fetchPeopleByIdRequest = () => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPeopleByIdSuccess = people => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_SUCCESS,\r\n  payload : {\r\n    people,\r\n  }\r\n});\r\n\r\nexport const fetchPeopleByIdError = error => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// PEOPLE SEARCH\r\nexport const searchPeopleRequest = () => ({\r\n  type: ActionType.SEARCH_PEOPLE_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const searchPeopleSuccess = people => ({\r\n  type: ActionType.SEARCH_PEOPLE_SUCCESS,\r\n  payload : people\r\n});\r\n\r\nexport const searchPeopleError = error => ({\r\n  type: ActionType.SEARCH_PEOPLE_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPeopleRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPaginationPeopleSuccess = people => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_SUCCESS,\r\n  payload : people\r\n});\r\n\r\nexport const fetchPaginationPeopleError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n"],"sourceRoot":""}