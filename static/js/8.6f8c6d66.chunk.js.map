{"version":3,"sources":["redux/people/peopleOperations.js","redux/people/peopleActions.js","redux/planets/planetsOperations.js","redux/planets/planetsActions.js","components/People/PeopleList/PeopleList.js","components/Films/FilmsList/FilmsList.js","components/Planets/DetailPlanets/DetailPlanets.js","pages/DetailPlanetsPage.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","redux/films/filmsSelectors.js","redux/people/peopleSelectors.js","redux/planets/planetsSelectors.js"],"names":["fetchPeopleById","count","dispatch","URL","type","ActionType","FETCH_PEOPLE_BY_ID_REQUEST","payload","axios","get","then","response","people","data","id","FETCH_PEOPLE_BY_ID_SUCCESS","catch","error","FETCH_PEOPLE_BY_ID_ERROR","fetchPeopleByIdError","fetchPaginationPeople","page","FETCH_PAGINATION_PEOPLE_REQUEST","FETCH_PAGINATION_PEOPLE_SUCCESS","fetchPlanetsById","FETCH_PLANETS_BY_ID_REQUEST","planets","FETCH_PLANETS_BY_ID_SUCCESS","FETCH_PLANETS_BY_ID_ERROR","fetchPlanetsByIdError","fetchPaginationPlanets","FETCH_PAGINATION_PLANETS_REQUEST","FETCH_PAGINATION_PLANETS_SUCCESS","style","position","display","connect","state","loading","peopleSelectors","length","map","el","i","key","to","name","filmsSelectors","film","episode_id","title","allFilms","allPeople","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","residents","history","useHistory","arrId","Number","split","filter","includes","FilmsList","PeopleList","className","onClick","goBack","mDTP","planetsOperations","peopleOperations","planetsSelectors","planetsId","useParams","useEffect","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","getAllFilms","items","getLoading","getPeople","sort","a","b","paginationPeople","results","peoplePrev","previous","peopleNext","next","getPlanets","paginationPlanets","planetsPrev","planetsNext"],"mappings":"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","file":"static/js/8.6f8c6d66.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  fetchPeopleByIdRequest,\r\n  fetchPeopleByIdSuccess,\r\n  fetchPeopleByIdError,\r\n  fetchPaginationPeopleRequest,\r\n  fetchPaginationPeopleSuccess\r\n} from './peopleActions';\r\n\r\n\r\nexport const fetchPeopleById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/people/${count}`\r\n  dispatch(fetchPeopleByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPeopleByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchPeopleByIdError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationPeople = page => dispatch => {\r\n  dispatch(fetchPaginationPeopleRequest())\r\n  const URL = `https://swapi.co/api/people/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPeopleSuccess(response.data)))\r\n}","import {ActionType} from '../actionType'\r\n\r\n\r\n// FETCH BY ID\r\nexport const fetchPeopleByIdRequest = () => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPeopleByIdSuccess = people => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_SUCCESS,\r\n  payload : {\r\n    people,\r\n  }\r\n});\r\n\r\nexport const fetchPeopleByIdError = error => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPeopleRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPaginationPeopleSuccess = people => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_SUCCESS,\r\n  payload : people\r\n});\r\n\r\nexport const fetchPaginationPeopleError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  fetchPlanetsByIdRequest,\r\n  fetchPlanetsByIdSuccess,\r\n  fetchPlanetsByIdError,\r\n  fetchPaginationPlanetsRequest,\r\n  fetchPaginationPlanetsSuccess\r\n} from './planetsActions';\r\n\r\n\r\n\r\nexport const fetchPlanetsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/planets/${count}`\r\n  dispatch(fetchPlanetsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPlanetsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchPlanetsByIdError(error));\r\n    });\r\n};\r\n\r\n//\r\nexport const fetchPaginationPlanets = page => dispatch => {\r\n  dispatch(fetchPaginationPlanetsRequest())\r\n  const URL = `https://swapi.co/api/planets/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPlanetsSuccess(response.data)))\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchPlanetsByIdRequest = () => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPlanetsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchPlanetsByIdError = error => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPlanetsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationPlanetsSuccess = planets => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_SUCCESS,\r\n  payload : planets\r\n});\r\n\r\nexport const fetchPaginationPlanetsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as peopleSelectors from '../../../redux/people/peopleSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nconst style = {\r\n  position: 'relative',\r\n  display : 'block'\r\n}\r\n\r\nconst SpeciesList = ({people, loading}) => {\r\n  return (\r\n    <div style={style}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!people.length && (\r\n            <ul>\r\n              {people.map((el, i) => (\r\n                <li key={ i * 9}>\r\n                  <NavLink to={`/people/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : peopleSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as filmsSelectors from '../../../redux/films/filmsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nconst style = {\r\n  position: 'relative',\r\n  display : 'block'\r\n}\r\n\r\nconst SpeciesList = ({film, loading}) => {\r\n  return (\r\n    <div style={style}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!film.length && (\r\n            <ul>\r\n              {film.map((el, i) => (\r\n                <li key={el.episode_id}>\r\n                  <NavLink to={`/films/${el.episode_id}`}>{el.title}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : filmsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport * as filmsSelectors from '../../../redux/films/filmsSelectors'\r\nimport * as peopleSelectors from '../../../redux/people/peopleSelectors'\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, useHistory} from \"react-router-dom\";\r\nimport FilmsList from \"../../Films/FilmsList/FilmsList\";\r\nimport PeopleList from \"../../People/PeopleList/PeopleList\";\r\n\r\nconst DetailPlanets = ({\r\n                         name,\r\n                         rotation_period,\r\n                         orbital_period,\r\n                         diameter,\r\n                         climate,\r\n                         gravity,\r\n                         terrain,\r\n                         surface_water,\r\n                         population,\r\n                         residents,\r\n                         films,\r\n                         allFilms,\r\n                         allPeople\r\n                       }) => {\r\n\r\n  const history = useHistory()\r\n\r\n  const handlerBack = () => {\r\n    history.goBack()\r\n  }\r\n\r\n  const arrId = films.map(el => Number(el.split('/')[5]))\r\n  const film = allFilms.filter(el => {\r\n    return arrId.includes(el.episode_id)\r\n  })\r\n\r\n  return (<div>\r\n    <p>Name : {name}</p>\r\n    <p>rotation_period : {rotation_period}</p>\r\n    <p>orbital_period : {orbital_period}</p>\r\n    <p>diameter : {diameter}</p>\r\n    <p>climate : {climate}</p>\r\n    <p>gravity : {gravity}</p>\r\n    <p>terrain : {terrain}</p>\r\n    <p>surface_water : {surface_water}</p>\r\n    <p>population : {population}</p>\r\n\r\n    {/*FILMS*/}\r\n    {!!allFilms.length && (\r\n      <div>\r\n        <h2>films</h2>\r\n        <FilmsList film={film}/>\r\n      </div>\r\n    )}\r\n\r\n    {/*RESIDENTS*/}\r\n    {!!allPeople.length && (\r\n      <div>\r\n        <h2>residents</h2>\r\n        <PeopleList people={allPeople}/>\r\n      </div>\r\n    )}\r\n\r\n    <button\r\n      className=\"btn darken-4 right\"\r\n      onClick={handlerBack}\r\n    >\r\n      Back\r\n    </button>\r\n\r\n  </div>)\r\n}\r\n\r\nconst mSTP = state => ({\r\n  allFilms : filmsSelectors.getAllFilms(state),\r\n  allPeople : peopleSelectors.getPeople(state)\r\n})\r\n\r\nexport default connect(mSTP)(DetailPlanets);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport * as planetsSelectors from '../redux/planets/planetsSelectors'\r\nimport * as planetsOperations from '../redux/planets/planetsOperations'\r\nimport * as peopleOperations from \"../redux/people/peopleOperations\";\r\nimport DetailPlanets from \"../components/Planets/DetailPlanets/DetailPlanets\";\r\n\r\nconst DetailPlanetsPage = ({planets, fetchPlanetsById, fetchPeopleById}) => {\r\n  const planetsId = Number(useParams().id)\r\n\r\n  useEffect(() => {\r\n      fetchPlanetsById(planetsId)\r\n  }, [])\r\n\r\n\r\n  if (planets[0]) {\r\n    planets[0].residents.map(el => {\r\n      const count = Number(el.split('/')[5])\r\n      return fetchPeopleById(count)\r\n    })\r\n  }\r\n\r\n  return (<div>\r\n    {!!planets.length && (\r\n    <DetailPlanets {...planets[0]}/>\r\n    )}\r\n    </div>)\r\n}\r\n\r\nconst mSTP = state => ({\r\n  planets : planetsSelectors.getPlanets(state)\r\n})\r\n\r\nconst mDTP = {\r\n  fetchPlanetsById : planetsOperations.fetchPlanetsById,\r\n  fetchPeopleById: peopleOperations.fetchPeopleById,\r\n}\r\n\r\nexport default connect(mSTP, mDTP)(DetailPlanetsPage);","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export const getAllFilms = state => state.films.items\r\n\r\nexport const getLoading = state => state.films.loading\r\n","export const getPeople = state => state.people.items.sort((a, b) => {\r\n return a.name > b.name\r\n})\r\n\r\nexport const getLoading = state => state.people.loading\r\n\r\n\r\n//PAGINATION\r\nexport const paginationPeople = state => state.people.paginationPeople.results\r\n\r\nexport const peoplePrev = state => state.people.paginationPeople.previous\r\n\r\nexport const peopleNext = state => state.people.paginationPeople.next\r\n","export const getPlanets = state => state.planets.items\r\n\r\nexport const getLoading = state => state.planets.loading\r\n\r\n//PAGINATION\r\nexport const paginationPlanets = state => state.planets.paginationPlanets.results\r\n\r\nexport const planetsPrev = state => state.planets.paginationPlanets.previous\r\n\r\nexport const planetsNext = state => state.planets.paginationPlanets.next\r\n"],"sourceRoot":""}