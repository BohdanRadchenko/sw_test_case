{"version":3,"sources":["redux/species/speciesSelectors.js","redux/starships/starshipsSelectors.js","redux/vehicles/vehiclesSelectors.js","redux/people/peopleOperations.js","redux/people/peopleActions.js","redux/planets/planetsOperations.js","redux/planets/planetsActions.js","redux/species/speciesOperations.js","redux/species/speciesActions.js","components/People/PeopleList/PeopleList.js","redux/starships/starshipsOperations.js","redux/starships/starshipsActions.js","redux/vehicles/vehiclesOperations.js","redux/vehicles/vehiclesActions.js","components/Planets/PlanetsList/PlanetsList.js","components/Species/SpeciesList/SpeciesList.js","components/Vehicles/VehiclesList/VehiclesList.js","components/Starships/StarshipsList/StarshipsList.js","components/Films/DetailFilms/DetailFilms.module.css","components/Films/DetailFilms/DetailFilms.js","pages/DetailFilmsPage.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/list.module.css","redux/films/filmsSelectors.js","redux/people/peopleSelectors.js","redux/planets/planetsSelectors.js"],"names":["getAllSpecies","state","species","items","getLoading","loading","paginationSpecies","results","speciesPrev","previous","speciesNext","next","getStarships","starships","paginationStarships","starshipsPrev","starshipsNext","getAllVehicles","vehicles","paginationVehicles","vehiclesPrev","vehiclesNext","fetchPeopleById","count","dispatch","URL","type","ActionType","FETCH_PEOPLE_BY_ID_REQUEST","payload","axios","get","then","response","people","data","id","FETCH_PEOPLE_BY_ID_SUCCESS","catch","error","console","log","message","FETCH_PEOPLE_BY_ID_ERROR","fetchPeopleByIdError","fetchPaginationPeople","page","FETCH_PAGINATION_PEOPLE_REQUEST","FETCH_PAGINATION_PEOPLE_SUCCESS","fetchPlanetsById","FETCH_PLANETS_BY_ID_REQUEST","planets","FETCH_PLANETS_BY_ID_SUCCESS","FETCH_PLANETS_BY_ID_ERROR","fetchPlanetsByIdError","fetchPaginationPlanets","FETCH_PAGINATION_PLANETS_REQUEST","FETCH_PAGINATION_PLANETS_SUCCESS","fetchSpeciesById","FETCH_SPECIES_BY_ID_REQUEST","FETCH_SPECIES_BY_ID_SUCCESS","FETCH_SPECIES_BY_ID_ERROR","fetchSpeciesByIdError","fetchPaginationSpecies","FETCH_PAGINATION_SPECIES_REQUEST","FETCH_PAGINATION_SPECIES_SUCCESS","connect","peopleSelectors","className","css","container","length","list","map","el","i","item","key","link","to","name","fetchStarshipsById","FETCH_STARSHIPS_BY_ID_REQUEST","FETCH_STARSHIPS_BY_ID_SUCCESS","FETCH_STARSHIPS_BY_ID_ERROR","fetchStarshipsByIdError","fetchPaginationStarships","FETCH_PAGINATION_STARSHIPS_REQUEST","FETCH_PAGINATION_STARSHIPS_SUCCESS","fetchVehiclesById","FETCH_VEHICLES_BY_ID_REQUEST","FETCH_VEHICLES_BY_ID_SUCCESS","FETCH_VEHICLES_BY_ID_ERROR","fetchVehiclesByIdError","fetchPaginationVehicles","FETCH_PAGINATION_VEHICLES_REQUEST","FETCH_PAGINATION_VEHICLES_SUCCESS","planetsSelectors","speciesSelectors","vehiclesSelectors","starshipsSelectors","module","exports","filmsSelectors","allPlanets","allStarships","allVehicles","allSpecies","title","opening_crawl","director","producer","release_date","characters","history","useHistory","Loaders","p","PeopleList","PlanetsList","StarshipsList","VehiclesList","SpeciesList","button","onClick","goBack","DetailFilmsPage","films","filmId","Number","useParams","film","filter","episode_id","split","mDTP","peopleOperations","planetsOperations","starshipsOperation","vehiclesOperations","speciesOperations","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","getAllFilms","getPeople","sort","a","b","paginationPeople","peoplePrev","peopleNext","getPlanets","paginationPlanets","planetsPrev","planetsNext"],"mappings":"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","file":"static/js/5.86b76454.chunk.js","sourcesContent":["export const getAllSpecies = state => state.species.items\r\n\r\nexport const getLoading = state => state.species.loading\r\n\r\n//PAGINATION\r\nexport const paginationSpecies = state => state.species.paginationSpecies.results\r\n\r\nexport const speciesPrev = state => state.species.paginationSpecies.previous\r\n\r\nexport const speciesNext = state => state.species.paginationSpecies.next\r\n","export const getStarships = state => state.starships.items\r\n\r\nexport const getLoading = state => state.starships.loading\r\n\r\n//PAGINATION\r\nexport const paginationStarships = state => state.starships.paginationStarships.results\r\n\r\nexport const starshipsPrev = state => state.starships.paginationStarships.previous\r\n\r\nexport const starshipsNext = state => state.starships.paginationStarships.next\r\n","export const getAllVehicles = state => state.vehicles.items\r\n\r\nexport const getLoading = state => state.vehicles.loading\r\n\r\n//PAGINATION\r\nexport const paginationVehicles = state => state.vehicles.paginationVehicles.results\r\n\r\nexport const vehiclesPrev = state => state.vehicles.paginationVehicles.previous\r\n\r\nexport const vehiclesNext = state => state.vehicles.paginationVehicles.next\r\n","import axios from 'axios';\r\nimport {\r\n  fetchPeopleByIdRequest,\r\n  fetchPeopleByIdSuccess,\r\n  fetchPeopleByIdError,\r\n  fetchPaginationPeopleRequest,\r\n  fetchPaginationPeopleSuccess\r\n} from './peopleActions';\r\n\r\n\r\nexport const fetchPeopleById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/people/${count}`\r\n  dispatch(fetchPeopleByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPeopleByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchPeopleByIdError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationPeople = page => dispatch => {\r\n  dispatch(fetchPaginationPeopleRequest())\r\n  const URL = `https://swapi.co/api/people/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPeopleSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n\r\n// FETCH BY ID\r\nexport const fetchPeopleByIdRequest = () => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPeopleByIdSuccess = people => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_SUCCESS,\r\n  payload : {\r\n    people,\r\n  }\r\n});\r\n\r\nexport const fetchPeopleByIdError = error => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPeopleRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPaginationPeopleSuccess = people => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_SUCCESS,\r\n  payload : people\r\n});\r\n\r\nexport const fetchPaginationPeopleError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  fetchPlanetsByIdRequest,\r\n  fetchPlanetsByIdSuccess,\r\n  fetchPlanetsByIdError,\r\n  fetchPaginationPlanetsRequest,\r\n  fetchPaginationPlanetsSuccess\r\n} from './planetsActions';\r\n\r\n\r\n\r\nexport const fetchPlanetsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/planets/${count}`\r\n  dispatch(fetchPlanetsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPlanetsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchPlanetsByIdError(error));\r\n    });\r\n};\r\n\r\n//\r\nexport const fetchPaginationPlanets = page => dispatch => {\r\n  dispatch(fetchPaginationPlanetsRequest())\r\n  const URL = `https://swapi.co/api/planets/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPlanetsSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchPlanetsByIdRequest = () => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPlanetsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchPlanetsByIdError = error => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPlanetsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationPlanetsSuccess = planets => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_SUCCESS,\r\n  payload : planets\r\n});\r\n\r\nexport const fetchPaginationPlanetsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n","import axios from 'axios';\r\nimport {\r\n  fetchSpeciesByIdRequest,\r\n  fetchSpeciesByIdSuccess,\r\n  fetchSpeciesByIdError,\r\n  fetchPaginationSpeciesRequest,\r\n  fetchPaginationSpeciesSuccess\r\n} from './speciesActions';\r\n\r\nexport const fetchSpeciesById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/species/${count}`\r\n  dispatch(fetchSpeciesByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchSpeciesByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchSpeciesByIdError(error));\r\n    });\r\n};\r\nexport const fetchPaginationSpecies = page => dispatch => {\r\n  dispatch(fetchPaginationSpeciesRequest())\r\n  const URL = `https://swapi.co/api/species/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationSpeciesSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchSpeciesByIdRequest = () => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_REQUEST,\r\n});\r\n\r\nexport const fetchSpeciesByIdSuccess = species => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_SUCCESS,\r\n  payload : {\r\n    species,\r\n  }\r\n});\r\n\r\nexport const fetchSpeciesByIdError = error => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationSpeciesRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationSpeciesSuccess = species => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_SUCCESS,\r\n  payload : species\r\n});\r\n\r\nexport const fetchPaginationSpeciesError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as peopleSelectors from '../../../redux/people/peopleSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\nimport css from \"../../list.module.css\";\r\n\r\nconst SpeciesList = ({people, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!people.length && (\r\n            <ul className={css.list}>\r\n              {people.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={ i * 9}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/people/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : peopleSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import axios from 'axios';\r\nimport {\r\n  fetchStarshipsByIdRequest,\r\n  fetchStarshipsByIdSuccess,\r\n  fetchStarshipsByIdError,\r\n  fetchPaginationStarshipsRequest,\r\n  fetchPaginationStarshipsSuccess\r\n} from './starshipsActions';\r\n\r\nexport const fetchStarshipsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/starships/${count}`\r\n  dispatch(fetchStarshipsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchStarshipsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchStarshipsByIdError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationStarships = page => dispatch => {\r\n  dispatch(fetchPaginationStarshipsRequest())\r\n  const URL = `https://swapi.co/api/starships/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationStarshipsSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchStarshipsByIdRequest = () => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchStarshipsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchStarshipsByIdError = error => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationStarshipsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationStarshipsSuccess = starships => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_SUCCESS,\r\n  payload : starships\r\n});\r\n\r\nexport const fetchPaginationStarshipsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  fetchVehiclesByIdRequest,\r\n  fetchVehiclesByIdSuccess,\r\n  fetchVehiclesByIdError,\r\n  fetchPaginationVehiclesRequest, fetchPaginationVehiclesSuccess\r\n} from './vehiclesActions';\r\n\r\nexport const fetchVehiclesById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/vehicles/${count}`\r\n  dispatch(fetchVehiclesByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchVehiclesByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchVehiclesByIdError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationVehicles = page => dispatch => {\r\n  dispatch(fetchPaginationVehiclesRequest())\r\n  const URL = `https://swapi.co/api/vehicles/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationVehiclesSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchVehiclesByIdRequest = () => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_REQUEST,\r\n});\r\n\r\nexport const fetchVehiclesByIdSuccess = vehicles => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_SUCCESS,\r\n  payload : {\r\n    vehicles,\r\n  }\r\n});\r\n\r\nexport const fetchVehiclesByIdError = error => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationVehiclesRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationVehiclesSuccess = vehicles => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_SUCCESS,\r\n  payload : vehicles\r\n});\r\n\r\nexport const fetchPaginationVehiclesError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as planetsSelectors from '../../../redux/planets/planetsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\nimport css from \"../../list.module.css\";\r\n\r\nconst SpeciesList = ({planets, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!planets.length && (\r\n            <ul className={css.list}>\r\n              {planets.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={ i * 9}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/planets/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : planetsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as speciesSelectors from '../../../redux/species/speciesSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\nimport css from \"../../list.module.css\";\r\n\r\nconst SpeciesList = ({species, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!species.length && (\r\n            <ul className={css.list}>\r\n              {species.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={ i * 9}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/species/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : speciesSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as vehiclesSelectors from '../../../redux/vehicles/vehiclesSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\nimport css from \"../../list.module.css\";\r\n\r\nconst SpeciesList = ({vehicles, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!vehicles.length && (\r\n            <ul className={css.list}>\r\n              {vehicles.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={ i * 9}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/vehicles/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : vehiclesSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as starshipsSelectors from '../../../redux/starships/starshipsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nimport css from \"../../list.module.css\";\r\n\r\nconst style = {\r\n  position: 'relative',\r\n  display : 'block'\r\n}\r\n\r\nconst SpeciesList = ({starships, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!starships.length && (\r\n            <ul className={css.list}>\r\n              {starships.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={ i * 9}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/starships/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : starshipsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DetailFilms_container__2uPXh\",\"p\":\"DetailFilms_p__1BeWU\",\"title\":\"DetailFilms_title__2hPds\",\"button\":\"DetailFilms_button__2lEnt\"};","import React from 'react'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport * as filmsSelectors from '../../../redux/films/filmsSelectors'\r\nimport * as peopleSelectors from '../../../redux/people/peopleSelectors'\r\nimport * as planetsSelectors from '../../../redux/planets/planetsSelectors'\r\nimport * as starshipsSelectors from '../../../redux/starships/starshipsSelectors'\r\nimport * as speciesSelectors from '../../../redux/species/speciesSelectors'\r\nimport * as vehiclesSelectors from '../../../redux/vehicles/vehiclesSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\nimport SpeciesList from \"../../Species/SpeciesList/SpeciesList\";\r\nimport VehiclesList from \"../../Vehicles/VehiclesList/VehiclesList\";\r\nimport StarshipsList from \"../../Starships/StarshipsList/StarshipsList\";\r\nimport PlanetsList from \"../../Planets/PlanetsList/PlanetsList\";\r\nimport PeopleList from \"../../People/PeopleList/PeopleList\";\r\n\r\nimport css from './DetailFilms.module.css'\r\n\r\nconst DetailFilms = ({\r\n  people,\r\n  allPlanets,\r\n  allStarships,\r\n  allVehicles,\r\n  allSpecies,\r\n  title,\r\n  opening_crawl,\r\n  director,\r\n  producer,\r\n  release_date,\r\n  characters,\r\n  planets,\r\n  starships,\r\n  vehicles,\r\n  species,\r\n  loading\r\n}) => {\r\n\r\n  const history = useHistory()\r\n\r\n  const handlerBack = () => {\r\n    history.goBack()\r\n  }\r\n\r\n  if(loading) {\r\n    return <Loaders/>\r\n  }\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <p  className={css.p}>Title: <span>{title}</span> </p>\r\n      <p  className={css.p}>Decription: <span>{opening_crawl}</span> </p>\r\n      <p  className={css.p}>Director: {director}</p>\r\n      <p  className={css.p}>Producer: {producer}</p>\r\n      <p  className={css.p}>Release Date: {release_date}</p>\r\n\r\n      {/*CHARACTERS*/}\r\n      {!!characters.length && (\r\n        <div>\r\n          <h2 className={css.title}>characters</h2>\r\n          <PeopleList people={people}/>\r\n        </div>\r\n      )}\r\n\r\n      {/*PLANETS*/}\r\n      {!!planets.length && (\r\n        <div>\r\n          <h2 className={css.title}>planets</h2>\r\n          <PlanetsList planets={allPlanets}/>\r\n        </div>\r\n      )}\r\n\r\n      {/*STARSHIPS*/}\r\n      {!!starships.length && (\r\n        <div>\r\n          <h2 className={css.title}>starships</h2>\r\n          <StarshipsList starships={allStarships}/>\r\n        </div>\r\n      )}\r\n\r\n      {/*VEHICLES*/}\r\n      {!!vehicles.length && (\r\n        <div>\r\n          <h2 className={css.title}>vehicles</h2>\r\n          <VehiclesList vehicles={allVehicles}/>\r\n        </div>\r\n      )}\r\n\r\n      {/*SPECIES*/}\r\n      {!!species.length && (\r\n        <div>\r\n          <h2 className={css.title}>species</h2>\r\n          <SpeciesList species={allSpecies}/>\r\n        </div>\r\n      )}\r\n\r\n      <button\r\n        className={css.button}\r\n        onClick={handlerBack}\r\n      >\r\n        Back\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : filmsSelectors.getLoading(state),\r\n  people : peopleSelectors.getPeople(state),\r\n  allPlanets : planetsSelectors.getPlanets(state),\r\n  allStarships : starshipsSelectors.getStarships(state),\r\n  allVehicles : vehiclesSelectors.getAllVehicles(state),\r\n  allSpecies : speciesSelectors.getAllSpecies(state),\r\n})\r\n\r\nexport default connect(mSTP)(DetailFilms)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport * as filmsSelectors from '../redux/films/filmsSelectors'\r\nimport * as peopleOperations from '../redux/people/peopleOperations'\r\nimport * as planetsOperations from '../redux/planets/planetsOperations'\r\nimport * as starshipsOperation from '../redux/starships/starshipsOperations'\r\nimport * as vehiclesOperations from '../redux/vehicles/vehiclesOperations'\r\nimport * as speciesOperations from '../redux/species/speciesOperations'\r\nimport DetailFilms from '../components/Films/DetailFilms/DetailFilms'\r\n\r\nexport const DetailFilmsPage = ({\r\n  films,\r\n  fetchPeopleById,\r\n  fetchPlanetsById,\r\n  fetchStarshipsById,\r\n  fetchVehiclesById,\r\n  fetchSpeciesById\r\n}) => {\r\n  const filmId = Number(useParams().id)\r\n  const film = films.filter(el => el.episode_id === filmId)[0]\r\n\r\n  if (film) {\r\n    film.characters.map(el => {\r\n      const count = Number(el.split('/')[5])\r\n      return fetchPeopleById(count)\r\n    })\r\n    film.planets.map(el => {\r\n      const count = Number(el.split('/')[5])\r\n      return fetchPlanetsById(count)\r\n    })\r\n    film.starships.map(el => {\r\n      const count = Number(el.split('/')[5])\r\n      return fetchStarshipsById(count)\r\n    })\r\n    film.vehicles.map(el => {\r\n      const count = Number(el.split('/')[5])\r\n      return fetchVehiclesById(count)\r\n    })\r\n    film.species.map(el => {\r\n      const count = Number(el.split('/')[5])\r\n      return fetchSpeciesById(count)\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {film &&  <DetailFilms {...film}/>}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  films: filmsSelectors.getAllFilms(state)\r\n})\r\n\r\nconst mDTP = {\r\n  fetchPeopleById: peopleOperations.fetchPeopleById,\r\n  fetchPlanetsById: planetsOperations.fetchPlanetsById,\r\n  fetchStarshipsById: starshipsOperation.fetchStarshipsById,\r\n  fetchVehiclesById: vehiclesOperations.fetchVehiclesById,\r\n  fetchSpeciesById: speciesOperations.fetchSpeciesById,\r\n}\r\n\r\nexport default connect(mSTP, mDTP)(DetailFilmsPage)","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"list_container__1Bq0D\",\"list\":\"list_list__1pvkh\",\"item\":\"list_item__3HMYw\",\"link\":\"list_link__2mIHv\"};","export const getAllFilms = state => state.films.items\r\n\r\nexport const getLoading = state => state.films.loading\r\n","export const getPeople = state => state.people.items.sort((a, b) => {\r\n return a.name > b.name\r\n})\r\n\r\nexport const getLoading = state => state.people.loading\r\n\r\n\r\n//PAGINATION\r\nexport const paginationPeople = state => state.people.paginationPeople.results\r\n\r\nexport const peoplePrev = state => state.people.paginationPeople.previous\r\n\r\nexport const peopleNext = state => state.people.paginationPeople.next\r\n","export const getPlanets = state => state.planets.items\r\n\r\nexport const getLoading = state => state.planets.loading\r\n\r\n//PAGINATION\r\nexport const paginationPlanets = state => state.planets.paginationPlanets.results\r\n\r\nexport const planetsPrev = state => state.planets.paginationPlanets.previous\r\n\r\nexport const planetsNext = state => state.planets.paginationPlanets.next\r\n"],"sourceRoot":""}