{"version":3,"sources":["redux/species/speciesSelectors.js","redux/starships/starshipsSelectors.js","redux/people/peopleOperations.js","redux/people/peopleActions.js","redux/planets/planetsOperations.js","redux/planets/planetsActions.js","redux/species/speciesOperations.js","redux/species/speciesActions.js","components/People/PeopleList/PeopleList.js","components/Films/FilmsList/FilmsList.js","redux/starships/starshipsOperations.js","redux/starships/starshipsActions.js","redux/vehicles/vehiclesOperations.js","redux/vehicles/vehiclesActions.js","components/Starships/DetailStarships/DetailStarships.module.css","components/Starships/DetailStarships/DetailStarships.js","pages/DetailStarshipsPage.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/list.module.css","redux/films/filmsSelectors.js","redux/people/peopleSelectors.js"],"names":["getAllSpecies","state","species","items","getLoading","loading","paginationSpecies","results","speciesPrev","previous","speciesNext","next","getStarships","starships","paginationStarships","starshipsPrev","starshipsNext","fetchPeopleById","count","dispatch","URL","type","ActionType","FETCH_PEOPLE_BY_ID_REQUEST","payload","axios","get","then","response","people","data","id","FETCH_PEOPLE_BY_ID_SUCCESS","catch","error","console","log","message","FETCH_PEOPLE_BY_ID_ERROR","fetchPeopleByIdError","fetchPaginationPeople","page","FETCH_PAGINATION_PEOPLE_REQUEST","FETCH_PAGINATION_PEOPLE_SUCCESS","fetchPlanetsById","FETCH_PLANETS_BY_ID_REQUEST","planets","FETCH_PLANETS_BY_ID_SUCCESS","FETCH_PLANETS_BY_ID_ERROR","fetchPlanetsByIdError","fetchPaginationPlanets","FETCH_PAGINATION_PLANETS_REQUEST","FETCH_PAGINATION_PLANETS_SUCCESS","fetchSpeciesById","FETCH_SPECIES_BY_ID_REQUEST","FETCH_SPECIES_BY_ID_SUCCESS","FETCH_SPECIES_BY_ID_ERROR","fetchSpeciesByIdError","fetchPaginationSpecies","FETCH_PAGINATION_SPECIES_REQUEST","FETCH_PAGINATION_SPECIES_SUCCESS","connect","peopleSelectors","className","css","container","length","list","map","el","i","item","key","link","to","name","filmsSelectors","film","episode_id","title","fetchStarshipsById","FETCH_STARSHIPS_BY_ID_REQUEST","FETCH_STARSHIPS_BY_ID_SUCCESS","FETCH_STARSHIPS_BY_ID_ERROR","fetchStarshipsByIdError","fetchPaginationStarships","FETCH_PAGINATION_STARSHIPS_REQUEST","FETCH_PAGINATION_STARSHIPS_SUCCESS","fetchVehiclesById","FETCH_VEHICLES_BY_ID_REQUEST","vehicles","FETCH_VEHICLES_BY_ID_SUCCESS","FETCH_VEHICLES_BY_ID_ERROR","fetchVehiclesByIdError","fetchPaginationVehicles","FETCH_PAGINATION_VEHICLES_REQUEST","FETCH_PAGINATION_VEHICLES_SUCCESS","module","exports","allFilms","allPeople","model","manufacturer","cost_in_credits","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","hyperdrive_rating","MGLT","starship_class","films","pilots","history","useHistory","arrId","Number","split","filter","includes","p","PeopleList","FilmsList","button","onClick","goBack","mDTP","peopleOperations","planetsOperations","starshipsOperation","vehiclesOperations","speciesOperations","starshipsSelectors","starshipsId","useParams","useEffect","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","getAllFilms","getPeople","sort","a","b","paginationPeople","peoplePrev","peopleNext"],"mappings":"0FAAA,0KAAO,IAAMA,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,OAEvCC,EAAa,SAAAH,GAAK,OAAIA,EAAMC,QAAQG,SAGpCC,EAAoB,SAAAL,GAAK,OAAIA,EAAMC,QAAQI,kBAAkBC,SAE7DC,EAAc,SAAAP,GAAK,OAAIA,EAAMC,QAAQI,kBAAkBG,UAEvDC,EAAc,SAAAT,GAAK,OAAIA,EAAMC,QAAQI,kBAAkBK,O,iCCTpE,0KAAO,IAAMC,EAAe,SAAAX,GAAK,OAAIA,EAAMY,UAAUV,OAExCC,EAAa,SAAAH,GAAK,OAAIA,EAAMY,UAAUR,SAGtCS,EAAsB,SAAAb,GAAK,OAAIA,EAAMY,UAAUC,oBAAoBP,SAEnEQ,EAAgB,SAAAd,GAAK,OAAIA,EAAMY,UAAUC,oBAAoBL,UAE7DO,EAAgB,SAAAf,GAAK,OAAIA,EAAMY,UAAUC,oBAAoBH,O,yICCnE,IAAMM,EAAkB,SAACC,GAAD,OAAW,SAAAC,GAC1C,IAAMC,EAAG,sCAAkCF,GACzCC,ECR2C,CAC3CE,KAAMC,IAAWC,2BACjBC,QAAU,KDOVC,IACGC,IAAIN,GACJO,MAAK,SAAAC,GCN4B,IAAAC,EDOhCV,GCPgCU,EDOA,eAAID,EAASE,KAAd,CAAoBC,GAAKb,ICPb,CAC/CG,KAAMC,IAAWU,2BACjBR,QAAU,CACRK,gBDMCI,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,SAClBlB,ECJ8B,SAAAe,GAAK,MAAK,CAC5Cb,KAAMC,IAAWgB,yBACjBd,QAAU,CACRU,UDCWK,CAAqBL,SAIvBM,EAAwB,SAAAC,GAAI,OAAI,SAAAtB,GAC3CA,ECDiD,CACjDE,KAAMC,IAAWoB,gCACjBlB,QAAU,KDAV,IAAMJ,EAAG,4CAAwCqB,GACjDhB,IACGC,IAAIN,GACJO,MAAK,SAAAC,GAAQ,OAAIT,GCAsBU,EDAgBD,EAASE,KCAd,CACrDT,KAAMC,IAAWqB,gCACjBnB,QAAUK,KAFgC,IAAAA,KDCvCI,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,e,yIEpBjB,IAAMO,EAAmB,SAAC1B,GAAD,OAAW,SAAAC,GAC3C,IAAMC,EAAG,uCAAmCF,GAC1CC,ECX4C,CAC5CE,KAAMC,IAAWuB,4BACjBrB,QAAU,KDUVC,IACGC,IAAIN,GACJO,MAAK,SAAAC,GCT6B,IAAAkB,EDUjC3B,GCViC2B,EDUA,eAAIlB,EAASE,KAAd,CAAoBC,GAAKb,ICVZ,CACjDG,KAAMC,IAAWyB,4BACjBvB,QAAU,CACRsB,iBDSCb,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,SAClBlB,ECP+B,SAAAe,GAAK,MAAK,CAC7Cb,KAAMC,IAAW0B,0BACjBxB,QAAU,CACRU,UDIWe,CAAsBf,SAKxBgB,EAAyB,SAAAT,GAAI,OAAI,SAAAtB,GAC5CA,ECLkD,CAClDE,KAAMC,IAAW6B,iCACjB3B,QAAU,KDIV,IAAMJ,EAAG,6CAAyCqB,GAClDhB,IACGC,IAAIN,GACJO,MAAK,SAAAC,GAAQ,OAAIT,GCJuB2B,EDIgBlB,EAASE,KCJb,CACvDT,KAAMC,IAAW8B,iCACjB5B,QAAUsB,KAFiC,IAAAA,KDKxCb,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,e,yIExBjB,IAAMgB,EAAmB,SAACnC,GAAD,OAAW,SAAAC,GAC3C,IAAMC,EAAG,uCAAmCF,GAC1CC,ECT4C,CAC5CE,KAAMC,IAAWgC,8BDSjB7B,IACGC,IAAIN,GACJO,MAAK,SAAAC,GCR6B,IAAA1B,EDSjCiB,GCTiCjB,EDSA,eAAI0B,EAASE,KAAd,CAAoBC,GAAKb,ICTZ,CACjDG,KAAMC,IAAWiC,4BACjB/B,QAAU,CACRtB,iBDQC+B,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,SAClBlB,ECN+B,SAAAe,GAAK,MAAK,CAC7Cb,KAAMC,IAAWkC,0BACjBhC,QAAU,CACRU,UDGWuB,CAAsBvB,SAGxBwB,EAAyB,SAAAjB,GAAI,OAAI,SAAAtB,GAC5CA,ECFkD,CAClDE,KAAMC,IAAWqC,iCACjBnC,QAAU,KDCV,IAAMJ,EAAG,6CAAyCqB,GAClDhB,IACGC,IAAIN,GACJO,MAAK,SAAAC,GAAQ,OAAIT,GCDuBjB,EDCgB0B,EAASE,KCDb,CACvDT,KAAMC,IAAWsC,iCACjBpC,QAAUtB,KAFiC,IAAAA,KDExC+B,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,e,iCE7BxB,oEAoCewB,iBAJF,SAAA5D,GAAK,MAAK,CACrBI,QAAUyD,IAA2B7D,MAGxB4D,EA7BK,SAAC,GAAuB,IAAtBhC,EAAqB,EAArBA,OAAQxB,EAAa,EAAbA,QAC5B,OACE,yBAAK0D,UAAWC,IAAIC,WACjB5D,GAAW,kBAAC,IAAD,OACVA,GACA,sCACKwB,EAAOqC,QACR,wBAAIH,UAAWC,IAAIG,MAChBtC,EAAOuC,KAAI,SAACC,EAAIC,GAAL,OACV,wBACEP,UAAWC,IAAIO,KACfC,IAAU,EAAJF,GACN,kBAAC,IAAD,CACEP,UAAWC,IAAIS,KACfC,GAAE,kBAAaL,EAAGtC,KAAOsC,EAAGM,iB,iCCrBhD,oEAqCed,iBAJF,SAAA5D,GAAK,MAAK,CACrBI,QAAUuE,IAA0B3E,MAGvB4D,EA7BK,SAAC,GAAqB,IAApBgB,EAAmB,EAAnBA,KAAMxE,EAAa,EAAbA,QAC1B,OACE,yBAAK0D,UAAWC,IAAIC,WACjB5D,GAAW,kBAAC,IAAD,OACVA,GACA,sCACKwE,EAAKX,QACN,wBAAIH,UAAWC,IAAIG,MAChBU,EAAKT,KAAI,SAACC,EAAIC,GAAL,OACR,wBACEP,UAAWC,IAAIO,KACfC,IAAKH,EAAGS,YACR,kBAAC,IAAD,CACEf,UAAWC,IAAIS,KACfC,GAAE,iBAAYL,EAAGS,aAAeT,EAAGU,kB,yICbhD,IAAMC,EAAqB,SAAC9D,GAAD,OAAW,SAAAC,GAC7C,IAAMC,EAAG,yCAAqCF,GAC5CC,ECT8C,CAC9CE,KAAMC,IAAW2D,8BACjBzD,QAAU,KDQVC,IACGC,IAAIN,GACJO,MAAK,SAAAC,GCP+B,IAAAkB,EDQnC3B,GCRmC2B,EDQA,eAAIlB,EAASE,KAAd,CAAoBC,GAAKb,ICRZ,CACnDG,KAAMC,IAAW4D,8BACjB1D,QAAU,CACRsB,iBDOCb,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,SAClBlB,ECLiC,SAAAe,GAAK,MAAK,CAC/Cb,KAAMC,IAAW6D,4BACjB3D,QAAU,CACRU,UDEWkD,CAAwBlD,SAI1BmD,EAA2B,SAAA5C,GAAI,OAAI,SAAAtB,GAC9CA,ECDoD,CACpDE,KAAMC,IAAWgE,mCACjB9D,QAAU,KDAV,IAAMJ,EAAG,+CAA2CqB,GACpDhB,IACGC,IAAIN,GACJO,MAAK,SAAAC,GAAQ,OAAIT,GCAyBN,EDAgBe,EAASE,KCAX,CAC3DT,KAAMC,IAAWiE,mCACjB/D,QAAUX,KAFmC,IAAAA,KDC1CoB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,e,yIEtBjB,IAAMmD,EAAoB,SAACtE,GAAD,OAAW,SAAAC,GAC5C,IAAMC,EAAG,wCAAoCF,GAC3CC,ECR6C,CAC7CE,KAAMC,IAAWmE,+BDQjBhE,IACGC,IAAIN,GACJO,MAAK,SAAAC,GCP8B,IAAA8D,EDQlCvE,GCRkCuE,EDQA,eAAI9D,EAASE,KAAd,CAAoBC,GAAKb,ICRX,CACnDG,KAAMC,IAAWqE,6BACjBnE,QAAU,CACRkE,kBDOCzD,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,SAClBlB,ECLgC,SAAAe,GAAK,MAAK,CAC9Cb,KAAMC,IAAWsE,2BACjBpE,QAAU,CACRU,UDEW2D,CAAuB3D,SAIzB4D,EAA0B,SAAArD,GAAI,OAAI,SAAAtB,GAC7CA,ECFmD,CACnDE,KAAMC,IAAWyE,kCACjBvE,QAAU,KDCV,IAAMJ,EAAG,8CAA0CqB,GACnDhB,IACGC,IAAIN,GACJO,MAAK,SAAAC,GAAQ,OAAIT,GCDwBuE,EDCgB9D,EAASE,KCDZ,CACzDT,KAAMC,IAAW0E,kCACjBxE,QAAUkE,KAFkC,IAAAA,KDEzCzD,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,e,oBE5BxB4D,EAAOC,QAAU,CAAC,UAAY,mCAAmC,EAAI,2BAA2B,MAAQ,+BAA+B,OAAS,kC,gICwFjIrC,eALF,SAAA5D,GAAK,MAAK,CACrBkG,SAAWvB,IAA2B3E,GACtCmG,UAAYtC,IAA0B7D,MAGzB4D,EA9ES,SAAC,GAkBlB,IAjBoBc,EAiBrB,EAjBqBA,KACA0B,EAgBrB,EAhBqBA,MACAC,EAerB,EAfqBA,aACAC,EAcrB,EAdqBA,gBACArC,EAarB,EAbqBA,OACAsC,EAYrB,EAZqBA,uBACAC,EAWrB,EAXqBA,KACAC,EAUrB,EAVqBA,WACAC,EASrB,EATqBA,eACAC,EAQrB,EARqBA,YACAC,EAOrB,EAPqBA,kBACAC,EAMrB,EANqBA,KACAC,EAKrB,EALqBA,eAEAC,GAGrB,EAJqBC,OAIrB,EAHqBD,OACAZ,EAErB,EAFqBA,UACAD,EACrB,EADqBA,SAGnBe,EAAUC,cAMVC,EAAQJ,EAAM5C,KAAI,SAAAC,GAAE,OAAIgD,OAAOhD,EAAGiD,MAAM,KAAK,OAC7CzC,EAAOsB,EAASoB,QAAO,SAAAlD,GAC3B,OAAO+C,EAAMI,SAASnD,EAAGS,eAG3B,OACE,yBAAKf,UAAWC,IAAIC,WAClB,uBAAGF,UAAWC,IAAIyD,GAAlB,UAA6B9C,GAC7B,uBAAGZ,UAAWC,IAAIyD,GAAlB,WAA8BpB,GAC9B,uBAAGtC,UAAWC,IAAIyD,GAAlB,kBAAqCnB,GACrC,uBAAGvC,UAAWC,IAAIyD,GAAlB,qBAAwClB,GACxC,uBAAGxC,UAAWC,IAAIyD,GAAlB,YAA+BvD,GAC/B,uBAAGH,UAAWC,IAAIyD,GAAlB,4BAA+CjB,GAC/C,uBAAGzC,UAAWC,IAAIyD,GAAlB,UAA6BhB,GAC7B,uBAAG1C,UAAWC,IAAIyD,GAAlB,gBAAmCf,GACnC,uBAAG3C,UAAWC,IAAIyD,GAAlB,oBAAuCd,GACvC,uBAAG5C,UAAWC,IAAIyD,GAAlB,iBAAoCb,GACpC,uBAAG7C,UAAWC,IAAIyD,GAAlB,uBAA0CZ,GAC1C,uBAAG9C,UAAWC,IAAIyD,GAAlB,UAA6BX,GAC7B,uBAAG/C,UAAWC,IAAIyD,GAAlB,oBAAuCV,KAGpCX,EAAUlC,QACX,6BACE,wBAAIH,UAAWC,IAAIe,OAAnB,UACA,kBAAC2C,EAAA,EAAD,CAAY7F,OAAQuE,OAKrBD,EAASjC,QACV,6BACE,wBAAIH,UAAWC,IAAIe,OAAnB,SACA,kBAAC4C,EAAA,EAAD,CAAW9C,KAAMA,KAIrB,4BACEd,UAAWC,IAAI4D,OACfC,QA3Cc,WAClBX,EAAQY,WAwCN,Y,+DCrCAC,EAAO,CACX9G,gBAAiB+G,IACjBpF,iBAAkBqF,IAClBjD,mBAAoBkD,IACpB1C,kBAAmB2C,IACnB9E,iBAAkB+E,KAGLvE,uBAZF,SAAA5D,GAAK,MAAK,CACrBY,UAAYwH,IAAgCpI,MAWjB8H,EAAdlE,EAhCa,SAAC,GAAsD,IAArDhD,EAAoD,EAApDA,UAAWmE,EAAyC,EAAzCA,mBAAoB/D,EAAqB,EAArBA,gBACrDqH,EAAcjB,OAAOkB,cAAYxG,IAavC,OAXAyG,qBAAU,WACRxD,EAAmBsD,KAClB,IAECzH,EAAU,IACZA,EAAU,GAAGoG,OAAO7C,KAAI,SAAAC,GACtB,IAAMnD,EAAQmG,OAAOhD,EAAGiD,MAAM,KAAK,IACnC,OAAOrG,EAAgBC,MAInB,6BACLL,EAAU,IAAM,kBAAC,EAAoBA,EAAU,S,gCC5BrC,SAAS4H,EAAgBC,EAAKlE,EAAKmE,GAYhD,OAXInE,KAAOkE,EACTE,OAAOC,eAAeH,EAAKlE,EAAK,CAC9BmE,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIlE,GAAOmE,EAGND,ECVT,SAASO,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQ/B,QAAO,SAAUgC,GACrD,OAAOX,OAAOY,yBAAyBN,EAAQK,GAAKT,eAEtDM,EAAKK,KAAKC,MAAMN,EAAME,GAGxB,OAAOF,EAGM,SAASO,EAAeC,GACrC,IAAK,IAAItF,EAAI,EAAGA,EAAIuF,UAAU3F,OAAQI,IAAK,CACzC,IAAIwF,EAAyB,MAAhBD,UAAUvF,GAAauF,UAAUvF,GAAK,GAE/CA,EAAI,EACN2E,EAAQL,OAAOkB,IAAS,GAAMC,SAAQ,SAAUvF,GAC9C,EAAeoF,EAAQpF,EAAKsF,EAAOtF,OAE5BoE,OAAOoB,0BAChBpB,OAAOqB,iBAAiBL,EAAQhB,OAAOoB,0BAA0BF,IAEjEb,EAAQL,OAAOkB,IAASC,SAAQ,SAAUvF,GACxCoE,OAAOC,eAAee,EAAQpF,EAAKoE,OAAOY,yBAAyBM,EAAQtF,OAKjF,OAAOoF,EAjCT,mC,mBCCA3D,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,qB,gCCDjH,oEAAO,IAAMgE,EAAc,SAAAjK,GAAK,OAAIA,EAAM+G,MAAM7G,OAEnCC,EAAa,SAAAH,GAAK,OAAIA,EAAM+G,MAAM3G,U,gCCF/C,0KAAO,IAAM8J,EAAY,SAAAlK,GAAK,OAAIA,EAAM4B,OAAO1B,MAAMiK,MAAK,SAACC,EAAGC,GAC7D,OAAOD,EAAE1F,KAAO2F,EAAE3F,SAGNvE,EAAa,SAAAH,GAAK,OAAIA,EAAM4B,OAAOxB,SAInCkK,EAAmB,SAAAtK,GAAK,OAAIA,EAAM4B,OAAO0I,iBAAiBhK,SAE1DiK,EAAa,SAAAvK,GAAK,OAAIA,EAAM4B,OAAO0I,iBAAiB9J,UAEpDgK,EAAa,SAAAxK,GAAK,OAAIA,EAAM4B,OAAO0I,iBAAiB5J","file":"static/js/7.53666b8a.chunk.js","sourcesContent":["export const getAllSpecies = state => state.species.items\r\n\r\nexport const getLoading = state => state.species.loading\r\n\r\n//PAGINATION\r\nexport const paginationSpecies = state => state.species.paginationSpecies.results\r\n\r\nexport const speciesPrev = state => state.species.paginationSpecies.previous\r\n\r\nexport const speciesNext = state => state.species.paginationSpecies.next\r\n","export const getStarships = state => state.starships.items\r\n\r\nexport const getLoading = state => state.starships.loading\r\n\r\n//PAGINATION\r\nexport const paginationStarships = state => state.starships.paginationStarships.results\r\n\r\nexport const starshipsPrev = state => state.starships.paginationStarships.previous\r\n\r\nexport const starshipsNext = state => state.starships.paginationStarships.next\r\n","import axios from 'axios';\r\nimport {\r\n  fetchPeopleByIdRequest,\r\n  fetchPeopleByIdSuccess,\r\n  fetchPeopleByIdError,\r\n  fetchPaginationPeopleRequest,\r\n  fetchPaginationPeopleSuccess\r\n} from './peopleActions';\r\n\r\n\r\nexport const fetchPeopleById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/people/${count}`\r\n  dispatch(fetchPeopleByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPeopleByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchPeopleByIdError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationPeople = page => dispatch => {\r\n  dispatch(fetchPaginationPeopleRequest())\r\n  const URL = `https://swapi.co/api/people/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPeopleSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n\r\n// FETCH BY ID\r\nexport const fetchPeopleByIdRequest = () => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPeopleByIdSuccess = people => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_SUCCESS,\r\n  payload : {\r\n    people,\r\n  }\r\n});\r\n\r\nexport const fetchPeopleByIdError = error => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPeopleRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPaginationPeopleSuccess = people => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_SUCCESS,\r\n  payload : people\r\n});\r\n\r\nexport const fetchPaginationPeopleError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  fetchPlanetsByIdRequest,\r\n  fetchPlanetsByIdSuccess,\r\n  fetchPlanetsByIdError,\r\n  fetchPaginationPlanetsRequest,\r\n  fetchPaginationPlanetsSuccess\r\n} from './planetsActions';\r\n\r\n\r\n\r\nexport const fetchPlanetsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/planets/${count}`\r\n  dispatch(fetchPlanetsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPlanetsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchPlanetsByIdError(error));\r\n    });\r\n};\r\n\r\n//\r\nexport const fetchPaginationPlanets = page => dispatch => {\r\n  dispatch(fetchPaginationPlanetsRequest())\r\n  const URL = `https://swapi.co/api/planets/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPlanetsSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchPlanetsByIdRequest = () => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPlanetsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchPlanetsByIdError = error => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPlanetsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationPlanetsSuccess = planets => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_SUCCESS,\r\n  payload : planets\r\n});\r\n\r\nexport const fetchPaginationPlanetsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n","import axios from 'axios';\r\nimport {\r\n  fetchSpeciesByIdRequest,\r\n  fetchSpeciesByIdSuccess,\r\n  fetchSpeciesByIdError,\r\n  fetchPaginationSpeciesRequest,\r\n  fetchPaginationSpeciesSuccess\r\n} from './speciesActions';\r\n\r\nexport const fetchSpeciesById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/species/${count}`\r\n  dispatch(fetchSpeciesByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchSpeciesByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchSpeciesByIdError(error));\r\n    });\r\n};\r\nexport const fetchPaginationSpecies = page => dispatch => {\r\n  dispatch(fetchPaginationSpeciesRequest())\r\n  const URL = `https://swapi.co/api/species/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationSpeciesSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchSpeciesByIdRequest = () => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_REQUEST,\r\n});\r\n\r\nexport const fetchSpeciesByIdSuccess = species => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_SUCCESS,\r\n  payload : {\r\n    species,\r\n  }\r\n});\r\n\r\nexport const fetchSpeciesByIdError = error => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationSpeciesRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationSpeciesSuccess = species => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_SUCCESS,\r\n  payload : species\r\n});\r\n\r\nexport const fetchPaginationSpeciesError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as peopleSelectors from '../../../redux/people/peopleSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\nimport css from \"../../list.module.css\";\r\n\r\nconst SpeciesList = ({people, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!people.length && (\r\n            <ul className={css.list}>\r\n              {people.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={ i * 9}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/people/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : peopleSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as filmsSelectors from '../../../redux/films/filmsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nimport css from '../../list.module.css'\r\n\r\nconst SpeciesList = ({film, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!film.length && (\r\n            <ul className={css.list}>\r\n              {film.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={el.episode_id}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/films/${el.episode_id}`}>{el.title}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : filmsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import axios from 'axios';\r\nimport {\r\n  fetchStarshipsByIdRequest,\r\n  fetchStarshipsByIdSuccess,\r\n  fetchStarshipsByIdError,\r\n  fetchPaginationStarshipsRequest,\r\n  fetchPaginationStarshipsSuccess\r\n} from './starshipsActions';\r\n\r\nexport const fetchStarshipsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/starships/${count}`\r\n  dispatch(fetchStarshipsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchStarshipsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchStarshipsByIdError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationStarships = page => dispatch => {\r\n  dispatch(fetchPaginationStarshipsRequest())\r\n  const URL = `https://swapi.co/api/starships/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationStarshipsSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchStarshipsByIdRequest = () => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchStarshipsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchStarshipsByIdError = error => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationStarshipsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationStarshipsSuccess = starships => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_SUCCESS,\r\n  payload : starships\r\n});\r\n\r\nexport const fetchPaginationStarshipsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  fetchVehiclesByIdRequest,\r\n  fetchVehiclesByIdSuccess,\r\n  fetchVehiclesByIdError,\r\n  fetchPaginationVehiclesRequest, fetchPaginationVehiclesSuccess\r\n} from './vehiclesActions';\r\n\r\nexport const fetchVehiclesById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/vehicles/${count}`\r\n  dispatch(fetchVehiclesByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchVehiclesByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchVehiclesByIdError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationVehicles = page => dispatch => {\r\n  dispatch(fetchPaginationVehiclesRequest())\r\n  const URL = `https://swapi.co/api/vehicles/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationVehiclesSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchVehiclesByIdRequest = () => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_REQUEST,\r\n});\r\n\r\nexport const fetchVehiclesByIdSuccess = vehicles => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_SUCCESS,\r\n  payload : {\r\n    vehicles,\r\n  }\r\n});\r\n\r\nexport const fetchVehiclesByIdError = error => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationVehiclesRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationVehiclesSuccess = vehicles => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_SUCCESS,\r\n  payload : vehicles\r\n});\r\n\r\nexport const fetchPaginationVehiclesError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DetailStarships_container__6A2gj\",\"p\":\"DetailStarships_p__3YuBp\",\"title\":\"DetailStarships_title__3aT8O\",\"button\":\"DetailStarships_button__Jbazb\"};","import React  from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport * as peopleSelectors from '../../../redux/people/peopleSelectors'\r\nimport * as filmsSelectors from \"../../../redux/films/filmsSelectors\";\r\nimport PeopleList from \"../../People/PeopleList/PeopleList\";\r\nimport FilmsList from \"../../Films/FilmsList/FilmsList\";\r\n\r\nimport css from './DetailStarships.module.css'\r\n\r\n\r\nconst DetailStarships = ({\r\n                           name,\r\n                           model,\r\n                           manufacturer,\r\n                           cost_in_credits,\r\n                           length,\r\n                           max_atmosphering_speed,\r\n                           crew,\r\n                           passengers,\r\n                           cargo_capacity,\r\n                           consumables,\r\n                           hyperdrive_rating,\r\n                           MGLT,\r\n                           starship_class,\r\n                           pilots,\r\n                           films,\r\n                           allPeople,\r\n                           allFilms,\r\n}) => {\r\n\r\n  const history = useHistory()\r\n\r\n  const handlerBack = () => {\r\n    history.goBack()\r\n  }\r\n\r\n  const arrId = films.map(el => Number(el.split('/')[5]))\r\n  const film = allFilms.filter(el => {\r\n    return arrId.includes(el.episode_id)\r\n  })\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <p className={css.p}>Name : {name}</p>\r\n      <p className={css.p}>model : {model}</p>\r\n      <p className={css.p}>manufacturer : {manufacturer}</p>\r\n      <p className={css.p}>cost_in_credits : {cost_in_credits}</p>\r\n      <p className={css.p}>length : {length}</p>\r\n      <p className={css.p}>max_atmosphering_speed : {max_atmosphering_speed}</p>\r\n      <p className={css.p}>crew : {crew}</p>\r\n      <p className={css.p}>passengers : {passengers}</p>\r\n      <p className={css.p}>cargo_capacity : {cargo_capacity}</p>\r\n      <p className={css.p}>consumables : {consumables}</p>\r\n      <p className={css.p}>hyperdrive_rating : {hyperdrive_rating}</p>\r\n      <p className={css.p}>MGLT : {MGLT}</p>\r\n      <p className={css.p}>starship_class : {starship_class}</p>\r\n\r\n      {/*PILOTS*/}\r\n      {!!allPeople.length && (\r\n        <div>\r\n          <h2 className={css.title}>pilots</h2>\r\n          <PeopleList people={allPeople}/>\r\n        </div>\r\n      )}\r\n\r\n      {/*FILMS*/}\r\n      {!!allFilms.length && (\r\n        <div>\r\n          <h2 className={css.title}>films</h2>\r\n          <FilmsList film={film}/>\r\n        </div>\r\n      )}\r\n\r\n      <button\r\n        className={css.button}\r\n        onClick={handlerBack}\r\n      >\r\n        Back\r\n      </button>\r\n\r\n    </div>)\r\n}\r\n\r\nconst mSTP = state => ({\r\n  allFilms : filmsSelectors.getAllFilms(state),\r\n  allPeople : peopleSelectors.getPeople(state)\r\n})\r\n\r\nexport default connect(mSTP)(DetailStarships);\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport DetailStarships\r\n  from \"../components/Starships/DetailStarships/DetailStarships\";\r\nimport * as speciesSelectors from '../redux/species/speciesSelectors'\r\nimport * as starshipsSelectors from '../redux/starships/starshipsSelectors'\r\nimport * as peopleOperations from \"../redux/people/peopleOperations\";\r\nimport * as planetsOperations from \"../redux/planets/planetsOperations\";\r\nimport * as starshipsOperation from \"../redux/starships/starshipsOperations\";\r\nimport * as vehiclesOperations from \"../redux/vehicles/vehiclesOperations\";\r\nimport * as speciesOperations from \"../redux/species/speciesOperations\";\r\n\r\nconst DetailStarshipsPage = ({starships, fetchStarshipsById, fetchPeopleById}) => {\r\n  const starshipsId = Number(useParams().id)\r\n\r\n  useEffect(() => {\r\n    fetchStarshipsById(starshipsId)\r\n  }, [])\r\n\r\n  if (starships[0]) {\r\n    starships[0].pilots.map(el => {\r\n      const count = Number(el.split('/')[5])\r\n      return fetchPeopleById(count)\r\n    })\r\n  }\r\n\r\n  return (<div>\r\n    {starships[0] && <DetailStarships {...starships[0]}/>}\r\n    </div>)\r\n}\r\n\r\n\r\nconst mSTP = state => ({\r\n  starships : starshipsSelectors.getStarships(state)\r\n})\r\n\r\nconst mDTP = {\r\n  fetchPeopleById: peopleOperations.fetchPeopleById,\r\n  fetchPlanetsById: planetsOperations.fetchPlanetsById,\r\n  fetchStarshipsById: starshipsOperation.fetchStarshipsById,\r\n  fetchVehiclesById: vehiclesOperations.fetchVehiclesById,\r\n  fetchSpeciesById: speciesOperations.fetchSpeciesById,\r\n}\r\n\r\nexport default connect(mSTP, mDTP)(DetailStarshipsPage);","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"list_container__1Bq0D\",\"list\":\"list_list__1pvkh\",\"item\":\"list_item__3HMYw\",\"link\":\"list_link__2mIHv\"};","export const getAllFilms = state => state.films.items\r\n\r\nexport const getLoading = state => state.films.loading\r\n","export const getPeople = state => state.people.items.sort((a, b) => {\r\n return a.name > b.name\r\n})\r\n\r\nexport const getLoading = state => state.people.loading\r\n\r\n\r\n//PAGINATION\r\nexport const paginationPeople = state => state.people.paginationPeople.results\r\n\r\nexport const peoplePrev = state => state.people.paginationPeople.previous\r\n\r\nexport const peopleNext = state => state.people.paginationPeople.next\r\n"],"sourceRoot":""}