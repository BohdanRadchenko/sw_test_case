{"version":3,"sources":["redux/species/speciesSelectors.js","redux/starships/starshipsSelectors.js","redux/vehicles/vehiclesSelectors.js","redux/people/peopleOperations.js","redux/people/peopleActions.js","redux/planets/planetsOperations.js","redux/planets/planetsActions.js","redux/species/speciesOperations.js","redux/species/speciesActions.js","components/People/PeopleList/PeopleList.js","components/Films/FilmsList/FilmsList.js","components/Planets/PlanetsList/PlanetsList.js","components/Vehicles/DetailVehicles/DetailVehicles.module.css","components/Vehicles/DetailVehicles/DetailVehicles.js","components/Species/DetailSpecies.js/DetailSpacies.module.css","components/Species/DetailSpecies.js/DetailSpecies.js","pages/DetailSpeciesPage.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/list.module.css","redux/films/filmsSelectors.js","redux/people/peopleSelectors.js","redux/planets/planetsSelectors.js"],"names":["getAllSpecies","state","species","items","getLoading","loading","paginationSpecies","results","speciesPrev","previous","speciesNext","next","getStarships","starships","paginationStarships","starshipsPrev","starshipsNext","getAllVehicles","vehicles","paginationVehicles","vehiclesPrev","vehiclesNext","fetchPeopleById","count","dispatch","URL","type","ActionType","FETCH_PEOPLE_BY_ID_REQUEST","payload","axios","get","then","response","people","data","id","FETCH_PEOPLE_BY_ID_SUCCESS","catch","error","console","log","message","FETCH_PEOPLE_BY_ID_ERROR","fetchPeopleByIdError","fetchPaginationPeople","page","FETCH_PAGINATION_PEOPLE_REQUEST","FETCH_PAGINATION_PEOPLE_SUCCESS","fetchPlanetsById","FETCH_PLANETS_BY_ID_REQUEST","planets","FETCH_PLANETS_BY_ID_SUCCESS","FETCH_PLANETS_BY_ID_ERROR","fetchPlanetsByIdError","fetchPaginationPlanets","FETCH_PAGINATION_PLANETS_REQUEST","FETCH_PAGINATION_PLANETS_SUCCESS","fetchSpeciesById","FETCH_SPECIES_BY_ID_REQUEST","FETCH_SPECIES_BY_ID_SUCCESS","FETCH_SPECIES_BY_ID_ERROR","fetchSpeciesByIdError","fetchPaginationSpecies","FETCH_PAGINATION_SPECIES_REQUEST","FETCH_PAGINATION_SPECIES_SUCCESS","connect","peopleSelectors","className","css","container","length","list","map","el","i","item","key","link","to","name","filmsSelectors","film","episode_id","title","planetsSelectors","module","exports","allFilms","allPeople","model","manufacturer","cost_in_credits","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","vehicle_class","films","pilots","history","useHistory","arrId","Number","split","filter","includes","p","button","onClick","goBack","allPlanets","allStarships","starshipsSelectors","allVehicles","vehiclesSelectors","allSpecies","speciesSelectors","classification","designation","average_height","skin_colors","hair_colors","eye_colors","average_lifespan","language","PlanetsList","PeopleList","mDTP","speciesOperations","planetsOperations","peopleOperations","speciesId","useParams","homeworld","useEffect","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","getAllFilms","getPeople","sort","a","b","paginationPeople","peoplePrev","peopleNext","getPlanets","paginationPlanets","planetsPrev","planetsNext"],"mappings":"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","file":"static/js/6.18174af5.chunk.js","sourcesContent":["export const getAllSpecies = state => state.species.items\r\n\r\nexport const getLoading = state => state.species.loading\r\n\r\n//PAGINATION\r\nexport const paginationSpecies = state => state.species.paginationSpecies.results\r\n\r\nexport const speciesPrev = state => state.species.paginationSpecies.previous\r\n\r\nexport const speciesNext = state => state.species.paginationSpecies.next\r\n","export const getStarships = state => state.starships.items\r\n\r\nexport const getLoading = state => state.starships.loading\r\n\r\n//PAGINATION\r\nexport const paginationStarships = state => state.starships.paginationStarships.results\r\n\r\nexport const starshipsPrev = state => state.starships.paginationStarships.previous\r\n\r\nexport const starshipsNext = state => state.starships.paginationStarships.next\r\n","export const getAllVehicles = state => state.vehicles.items\r\n\r\nexport const getLoading = state => state.vehicles.loading\r\n\r\n//PAGINATION\r\nexport const paginationVehicles = state => state.vehicles.paginationVehicles.results\r\n\r\nexport const vehiclesPrev = state => state.vehicles.paginationVehicles.previous\r\n\r\nexport const vehiclesNext = state => state.vehicles.paginationVehicles.next\r\n","import axios from 'axios';\r\nimport {\r\n  fetchPeopleByIdRequest,\r\n  fetchPeopleByIdSuccess,\r\n  fetchPeopleByIdError,\r\n  fetchPaginationPeopleRequest,\r\n  fetchPaginationPeopleSuccess\r\n} from './peopleActions';\r\n\r\n\r\nexport const fetchPeopleById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/people/${count}`\r\n  dispatch(fetchPeopleByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPeopleByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchPeopleByIdError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationPeople = page => dispatch => {\r\n  dispatch(fetchPaginationPeopleRequest())\r\n  const URL = `https://swapi.co/api/people/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPeopleSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n\r\n// FETCH BY ID\r\nexport const fetchPeopleByIdRequest = () => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPeopleByIdSuccess = people => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_SUCCESS,\r\n  payload : {\r\n    people,\r\n  }\r\n});\r\n\r\nexport const fetchPeopleByIdError = error => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPeopleRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPaginationPeopleSuccess = people => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_SUCCESS,\r\n  payload : people\r\n});\r\n\r\nexport const fetchPaginationPeopleError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  fetchPlanetsByIdRequest,\r\n  fetchPlanetsByIdSuccess,\r\n  fetchPlanetsByIdError,\r\n  fetchPaginationPlanetsRequest,\r\n  fetchPaginationPlanetsSuccess\r\n} from './planetsActions';\r\n\r\n\r\n\r\nexport const fetchPlanetsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/planets/${count}`\r\n  dispatch(fetchPlanetsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPlanetsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchPlanetsByIdError(error));\r\n    });\r\n};\r\n\r\n//\r\nexport const fetchPaginationPlanets = page => dispatch => {\r\n  dispatch(fetchPaginationPlanetsRequest())\r\n  const URL = `https://swapi.co/api/planets/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPlanetsSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchPlanetsByIdRequest = () => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPlanetsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchPlanetsByIdError = error => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPlanetsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationPlanetsSuccess = planets => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_SUCCESS,\r\n  payload : planets\r\n});\r\n\r\nexport const fetchPaginationPlanetsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n","import axios from 'axios';\r\nimport {\r\n  fetchSpeciesByIdRequest,\r\n  fetchSpeciesByIdSuccess,\r\n  fetchSpeciesByIdError,\r\n  fetchPaginationSpeciesRequest,\r\n  fetchPaginationSpeciesSuccess\r\n} from './speciesActions';\r\n\r\nexport const fetchSpeciesById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/species/${count}`\r\n  dispatch(fetchSpeciesByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchSpeciesByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchSpeciesByIdError(error));\r\n    });\r\n};\r\nexport const fetchPaginationSpecies = page => dispatch => {\r\n  dispatch(fetchPaginationSpeciesRequest())\r\n  const URL = `https://swapi.co/api/species/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationSpeciesSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchSpeciesByIdRequest = () => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_REQUEST,\r\n});\r\n\r\nexport const fetchSpeciesByIdSuccess = species => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_SUCCESS,\r\n  payload : {\r\n    species,\r\n  }\r\n});\r\n\r\nexport const fetchSpeciesByIdError = error => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationSpeciesRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationSpeciesSuccess = species => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_SUCCESS,\r\n  payload : species\r\n});\r\n\r\nexport const fetchPaginationSpeciesError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as peopleSelectors from '../../../redux/people/peopleSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\nimport css from \"../../list.module.css\";\r\n\r\nconst SpeciesList = ({people, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!people.length && (\r\n            <ul className={css.list}>\r\n              {people.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={ i * 9}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/people/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : peopleSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as filmsSelectors from '../../../redux/films/filmsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nimport css from '../../list.module.css'\r\n\r\nconst SpeciesList = ({film, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!film.length && (\r\n            <ul className={css.list}>\r\n              {film.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={el.episode_id}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/films/${el.episode_id}`}>{el.title}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : filmsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as planetsSelectors from '../../../redux/planets/planetsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\nimport css from \"../../list.module.css\";\r\n\r\nconst SpeciesList = ({planets, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!planets.length && (\r\n            <ul className={css.list}>\r\n              {planets.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={ i * 9}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/planets/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : planetsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DetailVehicles_container__3oFKy\",\"p\":\"DetailVehicles_p__1zI0W\",\"title\":\"DetailVehicles_title__3YKak\",\"button\":\"DetailVehicles_button__3_Tyz\"};","import React from 'react';\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as filmsSelectors from \"../../../redux/films/filmsSelectors\";\r\nimport * as peopleSelectors from \"../../../redux/people/peopleSelectors\";\r\nimport PeopleList from \"../../People/PeopleList/PeopleList\";\r\nimport FilmsList from \"../../Films/FilmsList/FilmsList\";\r\n\r\nimport css from './DetailVehicles.module.css'\r\n\r\nconst DetailVehicles = ({\r\n                          name,\r\n                          model,\r\n                          manufacturer,\r\n                          cost_in_credits,\r\n                          length,\r\n                          max_atmosphering_speed,\r\n                          crew,\r\n                          passengers,\r\n                          cargo_capacity,\r\n                          consumables,\r\n                          vehicle_class,\r\n                          pilots,\r\n                          films,\r\n                          allFilms,\r\n                          allPeople\r\n                        }) => {\r\n\r\n  const history = useHistory()\r\n\r\n  const handlerBack = () => {\r\n    history.goBack()\r\n  }\r\n\r\n  const arrId = films.map(el => Number(el.split('/')[5]))\r\n  const film = allFilms.filter(el => {\r\n    return arrId.includes(el.episode_id)\r\n  })\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <p className={css.p}>Name : {name}</p>\r\n      <p className={css.p}>model : {model}</p>\r\n      <p className={css.p}>manufacturer : {manufacturer}</p>\r\n      <p className={css.p}>cost_in_credits : {cost_in_credits}</p>\r\n      <p className={css.p}>length : {length}</p>\r\n      <p className={css.p}>max_atmosphering_speed : {max_atmosphering_speed}</p>\r\n      <p className={css.p}>crew : {crew}</p>\r\n      <p className={css.p}>passengers : {passengers}</p>\r\n      <p className={css.p}>cargo_capacity : {cargo_capacity}</p>\r\n      <p className={css.p}>consumables : {consumables}</p>\r\n      <p className={css.p}>vehicle_class : {vehicle_class}</p>\r\n\r\n      {/*PILOTS*/}\r\n      {!!allPeople.length && (\r\n        <div>\r\n          <h2 className={css.title}>pilots</h2>\r\n          <PeopleList people={allPeople}/>\r\n        </div>\r\n      )}\r\n\r\n      {/*FILMS*/}\r\n      {!!allFilms.length && (\r\n        <div>\r\n          <h2 className={css.title}>films</h2>\r\n          <FilmsList film={film}/>\r\n        </div>\r\n      )}\r\n\r\n      <button\r\n        className={css.button}\r\n        onClick={handlerBack}\r\n      >\r\n        Back\r\n      </button>\r\n\r\n    </div>)\r\n}\r\nconst mSTP = state => ({\r\n  allFilms : filmsSelectors.getAllFilms(state),\r\n  allPeople : peopleSelectors.getPeople(state)\r\n})\r\n\r\nexport default connect(mSTP)(DetailVehicles)\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DetailSpacies_container__3tiBn\",\"p\":\"DetailSpacies_p__1xois\",\"title\":\"DetailSpacies_title__3xDmy\",\"button\":\"DetailSpacies_button__o_8I2\"};","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport * as filmsSelectors from \"../../../redux/films/filmsSelectors\";\r\nimport * as planetsSelectors from \"../../../redux/planets/planetsSelectors\";\r\nimport * as starshipsSelectors\r\n  from \"../../../redux/starships/starshipsSelectors\";\r\nimport * as vehiclesSelectors from \"../../../redux/vehicles/vehiclesSelectors\";\r\nimport * as speciesSelectors from \"../../../redux/species/speciesSelectors\";\r\nimport * as peopleSelectors from \"../../../redux/people/peopleSelectors\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport PlanetsList from \"../../Planets/PlanetsList/PlanetsList\";\r\nimport PeopleList from \"../../People/PeopleList/PeopleList\";\r\n\r\nimport css from './DetailSpacies.module.css'\r\n\r\nconst DetailSpecies = ({\r\n                         allPeople,\r\n                         allPlanets,\r\n                         name,\r\n                         classification,\r\n                         designation,\r\n                         average_height,\r\n                         skin_colors,\r\n                         hair_colors,\r\n                         eye_colors,\r\n                         average_lifespan,\r\n                         language,\r\n                         people,\r\n                         films,\r\n                       }) => {\r\n\r\n  const history = useHistory()\r\n\r\n  const handlerBack = () => {\r\n    history.goBack()\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={css.container}>\r\n    <p className={css.p}>Name : {name}</p>\r\n    <p className={css.p}>classification : {classification}</p>\r\n    <p className={css.p}>designation : {designation}</p>\r\n    <p className={css.p}>average_height : {average_height}</p>\r\n    <p className={css.p}>skin_colors : {skin_colors}</p>\r\n    <p className={css.p}>hair_colors : {hair_colors}</p>\r\n    <p className={css.p}>eye_colors : {eye_colors}</p>\r\n    <p className={css.p}>average_lifespan : {average_lifespan}</p>\r\n    <p className={css.p}>language : {language}</p>\r\n\r\n      {/*PLANETS*/}\r\n      {!!allPlanets.length && (\r\n        <div>\r\n          <h2 className={css.title}>homeworld</h2>\r\n          <PlanetsList planets={allPlanets}/>\r\n        </div>\r\n      )}\r\n\r\n      {/*PEOPLE*/}\r\n      {!!allPeople.length && (\r\n        <div>\r\n          <h2 className={css.title}>people</h2>\r\n          <PeopleList people={allPeople}/>\r\n        </div>\r\n      )}\r\n\r\n      <button\r\n        className={css.button}\r\n        onClick={handlerBack}\r\n      >\r\n        Back\r\n      </button>\r\n\r\n    </div>)\r\n}\r\n\r\nconst mSTP = state => ({\r\n  allFilms : filmsSelectors.getAllFilms(state),\r\n  allPlanets: planetsSelectors.getPlanets(state),\r\n  allStarships: starshipsSelectors.getStarships(state),\r\n  allVehicles: vehiclesSelectors.getAllVehicles(state),\r\n  allSpecies: speciesSelectors.getAllSpecies(state),\r\n  allPeople : peopleSelectors.getPeople(state),\r\n})\r\n\r\nexport default connect(mSTP)(DetailSpecies);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport * as speciesSelectors from '../redux/species/speciesSelectors'\r\nimport * as speciesOperations from '../redux/species/speciesOperations'\r\nimport DetailSpecies\r\n  from \"../components/Species/DetailSpecies.js/DetailSpecies\";\r\nimport * as planetsOperations from \"../redux/planets/planetsOperations\";\r\nimport * as peopleOperations from \"../redux/people/peopleOperations\";\r\nimport DetailVehicles\r\n  from \"../components/Vehicles/DetailVehicles/DetailVehicles\";\r\n\r\nconst DetailSpeciesPage = ({\r\n                             species,\r\n                             fetchSpeciesById,\r\n                             fetchPlanetsById,\r\n                             fetchPeopleById\r\n                           }) => {\r\n  const speciesId = Number(useParams().id)\r\n\r\n\r\n  if(species[0]) {\r\n    if (species[0].homeworld) {\r\n    const count = Number(species[0].homeworld.split('/')[5])\r\n    fetchPlanetsById(count)\r\n    }\r\n\r\n    species[0].people.map(el => {\r\n      const count = Number(el.split('/')[5])\r\n      return fetchPeopleById(count)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!!!species.length) {\r\n      fetchSpeciesById(speciesId)\r\n    }\r\n  }, [fetchSpeciesById, species.length, speciesId])\r\n\r\n\r\n  return (\r\n    <div>\r\n      {species[0] && <DetailSpecies {...species[0]}/>}\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  species : speciesSelectors.getAllSpecies(state)\r\n})\r\n\r\nconst mDTP = {\r\n  fetchSpeciesById : speciesOperations.fetchSpeciesById,\r\n  fetchPlanetsById: planetsOperations.fetchPlanetsById,\r\n  fetchPeopleById: peopleOperations.fetchPeopleById,\r\n}\r\n\r\nexport default connect(mSTP, mDTP)(DetailSpeciesPage);\r\n\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"list_container__1Bq0D\",\"list\":\"list_list__1pvkh\",\"item\":\"list_item__3HMYw\",\"link\":\"list_link__2mIHv\"};","export const getAllFilms = state => state.films.items\r\n\r\nexport const getLoading = state => state.films.loading\r\n","export const getPeople = state => state.people.items.sort((a, b) => {\r\n return a.name > b.name\r\n})\r\n\r\nexport const getLoading = state => state.people.loading\r\n\r\n\r\n//PAGINATION\r\nexport const paginationPeople = state => state.people.paginationPeople.results\r\n\r\nexport const peoplePrev = state => state.people.paginationPeople.previous\r\n\r\nexport const peopleNext = state => state.people.paginationPeople.next\r\n","export const getPlanets = state => state.planets.items\r\n\r\nexport const getLoading = state => state.planets.loading\r\n\r\n//PAGINATION\r\nexport const paginationPlanets = state => state.planets.paginationPlanets.results\r\n\r\nexport const planetsPrev = state => state.planets.paginationPlanets.previous\r\n\r\nexport const planetsNext = state => state.planets.paginationPlanets.next\r\n"],"sourceRoot":""}