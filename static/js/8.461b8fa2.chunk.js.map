{"version":3,"sources":["redux/people/peopleOperations.js","redux/people/peopleActions.js","redux/planets/planetsOperations.js","redux/planets/planetsActions.js","components/People/PeopleList/PeopleList.js","components/Films/FilmsList/FilmsList.js","components/Vehicles/DetailVehicles/DetailVehicles.module.css","components/Planets/DetailPlanets/DetailPlanets.js","pages/DetailPlanetsPage.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/list.module.css","redux/films/filmsSelectors.js","redux/people/peopleSelectors.js","redux/planets/planetsSelectors.js"],"names":["fetchPeopleById","count","dispatch","URL","type","ActionType","FETCH_PEOPLE_BY_ID_REQUEST","payload","axios","get","then","response","people","data","id","FETCH_PEOPLE_BY_ID_SUCCESS","catch","error","console","log","message","FETCH_PEOPLE_BY_ID_ERROR","fetchPeopleByIdError","fetchPaginationPeople","page","FETCH_PAGINATION_PEOPLE_REQUEST","FETCH_PAGINATION_PEOPLE_SUCCESS","fetchPlanetsById","FETCH_PLANETS_BY_ID_REQUEST","planets","FETCH_PLANETS_BY_ID_SUCCESS","FETCH_PLANETS_BY_ID_ERROR","fetchPlanetsByIdError","fetchPaginationPlanets","FETCH_PAGINATION_PLANETS_REQUEST","FETCH_PAGINATION_PLANETS_SUCCESS","connect","state","loading","peopleSelectors","className","css","container","length","list","map","el","i","item","key","link","to","name","filmsSelectors","film","episode_id","title","module","exports","allFilms","allPeople","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","residents","history","useHistory","arrId","Number","split","filter","includes","p","FilmsList","PeopleList","button","onClick","goBack","mDTP","planetsOperations","peopleOperations","planetsSelectors","planetsId","useParams","useEffect","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","getAllFilms","items","getLoading","getPeople","sort","a","b","paginationPeople","results","peoplePrev","previous","peopleNext","next","getPlanets","paginationPlanets","planetsPrev","planetsNext"],"mappings":"kMAUO,IAAMA,EAAkB,SAACC,GAAD,OAAW,SAAAC,GAC1C,IAAMC,EAAG,sCAAkCF,GACzCC,ECR2C,CAC3CE,KAAMC,IAAWC,2BACjBC,QAAU,KDOVC,IACGC,IAAIN,GACJO,MAAK,SAAAC,GCN4B,IAAAC,EDOhCV,GCPgCU,EDOA,eAAID,EAASE,KAAd,CAAoBC,GAAKb,ICPb,CAC/CG,KAAMC,IAAWU,2BACjBR,QAAU,CACRK,gBDMCI,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,SAClBlB,ECJ8B,SAAAe,GAAK,MAAK,CAC5Cb,KAAMC,IAAWgB,yBACjBd,QAAU,CACRU,UDCWK,CAAqBL,SAIvBM,EAAwB,SAAAC,GAAI,OAAI,SAAAtB,GAC3CA,ECDiD,CACjDE,KAAMC,IAAWoB,gCACjBlB,QAAU,KDAV,IAAMJ,EAAG,4CAAwCqB,GACjDhB,IACGC,IAAIN,GACJO,MAAK,SAAAC,GAAQ,OAAIT,GCAsBU,EDAgBD,EAASE,KCAd,CACrDT,KAAMC,IAAWqB,gCACjBnB,QAAUK,KAFgC,IAAAA,KDCvCI,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,e,yIEpBjB,IAAMO,EAAmB,SAAC1B,GAAD,OAAW,SAAAC,GAC3C,IAAMC,EAAG,uCAAmCF,GAC1CC,ECX4C,CAC5CE,KAAMC,IAAWuB,4BACjBrB,QAAU,KDUVC,IACGC,IAAIN,GACJO,MAAK,SAAAC,GCT6B,IAAAkB,EDUjC3B,GCViC2B,EDUA,eAAIlB,EAASE,KAAd,CAAoBC,GAAKb,ICVZ,CACjDG,KAAMC,IAAWyB,4BACjBvB,QAAU,CACRsB,iBDSCb,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,SAClBlB,ECP+B,SAAAe,GAAK,MAAK,CAC7Cb,KAAMC,IAAW0B,0BACjBxB,QAAU,CACRU,UDIWe,CAAsBf,SAKxBgB,EAAyB,SAAAT,GAAI,OAAI,SAAAtB,GAC5CA,ECLkD,CAClDE,KAAMC,IAAW6B,iCACjB3B,QAAU,KDIV,IAAMJ,EAAG,6CAAyCqB,GAClDhB,IACGC,IAAIN,GACJO,MAAK,SAAAC,GAAQ,OAAIT,GCJuB2B,EDIgBlB,EAASE,KCJb,CACvDT,KAAMC,IAAW8B,iCACjB5B,QAAUsB,KAFiC,IAAAA,KDKxCb,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,e,iCEjCxB,oEAoCegB,iBAJF,SAAAC,GAAK,MAAK,CACrBC,QAAUC,IAA2BF,MAGxBD,EA7BK,SAAC,GAAuB,IAAtBxB,EAAqB,EAArBA,OAAQ0B,EAAa,EAAbA,QAC5B,OACE,yBAAKE,UAAWC,IAAIC,WACjBJ,GAAW,kBAAC,IAAD,OACVA,GACA,sCACK1B,EAAO+B,QACR,wBAAIH,UAAWC,IAAIG,MAChBhC,EAAOiC,KAAI,SAACC,EAAIC,GAAL,OACV,wBACEP,UAAWC,IAAIO,KACfC,IAAU,EAAJF,GACN,kBAAC,IAAD,CACEP,UAAWC,IAAIS,KACfC,GAAE,kBAAaL,EAAGhC,KAAOgC,EAAGM,iB,iCCrBhD,oEAqCehB,iBAJF,SAAAC,GAAK,MAAK,CACrBC,QAAUe,IAA0BhB,MAGvBD,EA7BK,SAAC,GAAqB,IAApBkB,EAAmB,EAAnBA,KAAMhB,EAAa,EAAbA,QAC1B,OACE,yBAAKE,UAAWC,IAAIC,WACjBJ,GAAW,kBAAC,IAAD,OACVA,GACA,sCACKgB,EAAKX,QACN,wBAAIH,UAAWC,IAAIG,MAChBU,EAAKT,KAAI,SAACC,EAAIC,GAAL,OACR,wBACEP,UAAWC,IAAIO,KACfC,IAAKH,EAAGS,YACR,kBAAC,IAAD,CACEf,UAAWC,IAAIS,KACfC,GAAE,iBAAYL,EAAGS,aAAeT,EAAGU,kB,oBCrBvDC,EAAOC,QAAU,CAAC,UAAY,kCAAkC,EAAI,0BAA0B,MAAQ,8BAA8B,OAAS,iC,0JC6E9HtB,eALF,SAAAC,GAAK,MAAK,CACrBsB,SAAWN,IAA2BhB,GACtCuB,UAAYrB,IAA0BF,MAGzBD,EArEO,SAAC,GAcO,IAbLgB,EAaI,EAbJA,KACAS,EAYI,EAZJA,gBACAC,EAWI,EAXJA,eACAC,EAUI,EAVJA,SACAC,EASI,EATJA,QACAC,EAQI,EARJA,QACAC,EAOI,EAPJA,QACAC,EAMI,EANJA,cACAC,EAKI,EALJA,WAEAC,GAGI,EAJJC,UAII,EAHJD,OACAV,EAEI,EAFJA,SACAC,EACI,EADJA,UAGjBW,EAAUC,cAMVC,EAAQJ,EAAMxB,KAAI,SAAAC,GAAE,OAAI4B,OAAO5B,EAAG6B,MAAM,KAAK,OAC7CrB,EAAOK,EAASiB,QAAO,SAAA9B,GAC3B,OAAO2B,EAAMI,SAAS/B,EAAGS,eAG3B,OAAQ,yBAAKf,UAAWC,IAAIC,WAC1B,uBAAGF,UAAWC,IAAIqC,GAAlB,UAA6B1B,GAC7B,uBAAGZ,UAAWC,IAAIqC,GAAlB,qBAAwCjB,GACxC,uBAAGrB,UAAWC,IAAIqC,GAAlB,oBAAuChB,GACvC,uBAAGtB,UAAWC,IAAIqC,GAAlB,cAAiCf,GACjC,uBAAGvB,UAAWC,IAAIqC,GAAlB,aAAgCd,GAChC,uBAAGxB,UAAWC,IAAIqC,GAAlB,aAAgCb,GAChC,uBAAGzB,UAAWC,IAAIqC,GAAlB,aAAgCZ,GAChC,uBAAG1B,UAAWC,IAAIqC,GAAlB,mBAAsCX,GACtC,uBAAG3B,UAAWC,IAAIqC,GAAlB,gBAAmCV,KAGhCT,EAAShB,QACV,6BACE,wBAAIH,UAAWC,IAAIe,OAAnB,SACA,kBAACuB,EAAA,EAAD,CAAWzB,KAAMA,OAKlBM,EAAUjB,QACX,6BACE,wBAAIH,UAAWC,IAAIe,OAAnB,aACA,kBAACwB,EAAA,EAAD,CAAYpE,OAAQgD,KAIxB,4BACEpB,UAAWC,IAAIwC,OACfC,QAtCgB,WAClBX,EAAQY,WAmCR,YC7BEC,EAAO,CACXzD,iBAAmB0D,IACnBrF,gBAAiBsF,KAGJlD,uBATF,SAAAC,GAAK,MAAK,CACrBR,QAAU0D,IAA4BlD,MAQX+C,EAAdhD,EA/BW,SAAC,GAAkD,IAAjDP,EAAgD,EAAhDA,QAASF,EAAuC,EAAvCA,iBAAkB3B,EAAqB,EAArBA,gBAC/CwF,EAAYd,OAAOe,cAAY3E,IAcrC,OAZA4E,qBAAU,WACN/D,EAAiB6D,KAClB,IAGC3D,EAAQ,IACVA,EAAQ,GAAGyC,UAAUzB,KAAI,SAAAC,GACvB,IAAM7C,EAAQyE,OAAO5B,EAAG6B,MAAM,KAAK,IACnC,OAAO3E,EAAgBC,MAInB,+BACH4B,EAAQc,QACX,kBAAC,EAAkBd,EAAQ,S,gCCzBhB,SAAS8D,EAAgBC,EAAK3C,EAAK4C,GAYhD,OAXI5C,KAAO2C,EACTE,OAAOC,eAAeH,EAAK3C,EAAK,CAC9B4C,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAI3C,GAAO4C,EAGND,ECVT,SAASO,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQ5B,QAAO,SAAU6B,GACrD,OAAOX,OAAOY,yBAAyBN,EAAQK,GAAKT,eAEtDM,EAAKK,KAAKC,MAAMN,EAAME,GAGxB,OAAOF,EAGM,SAASO,EAAeC,GACrC,IAAK,IAAI/D,EAAI,EAAGA,EAAIgE,UAAUpE,OAAQI,IAAK,CACzC,IAAIiE,EAAyB,MAAhBD,UAAUhE,GAAagE,UAAUhE,GAAK,GAE/CA,EAAI,EACNoD,EAAQL,OAAOkB,IAAS,GAAMC,SAAQ,SAAUhE,GAC9C,EAAe6D,EAAQ7D,EAAK+D,EAAO/D,OAE5B6C,OAAOoB,0BAChBpB,OAAOqB,iBAAiBL,EAAQhB,OAAOoB,0BAA0BF,IAEjEb,EAAQL,OAAOkB,IAASC,SAAQ,SAAUhE,GACxC6C,OAAOC,eAAee,EAAQ7D,EAAK6C,OAAOY,yBAAyBM,EAAQ/D,OAKjF,OAAO6D,EAjCT,mC,mBCCArD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,qB,gCCDjH,oEAAO,IAAM0D,EAAc,SAAA/E,GAAK,OAAIA,EAAMgC,MAAMgD,OAEnCC,EAAa,SAAAjF,GAAK,OAAIA,EAAMgC,MAAM/B,U,gCCF/C,0KAAO,IAAMiF,EAAY,SAAAlF,GAAK,OAAIA,EAAMzB,OAAOyG,MAAMG,MAAK,SAACC,EAAGC,GAC7D,OAAOD,EAAErE,KAAOsE,EAAEtE,SAGNkE,EAAa,SAAAjF,GAAK,OAAIA,EAAMzB,OAAO0B,SAInCqF,EAAmB,SAAAtF,GAAK,OAAIA,EAAMzB,OAAO+G,iBAAiBC,SAE1DC,EAAa,SAAAxF,GAAK,OAAIA,EAAMzB,OAAO+G,iBAAiBG,UAEpDC,EAAa,SAAA1F,GAAK,OAAIA,EAAMzB,OAAO+G,iBAAiBK,O,gCCZjE,0KAAO,IAAMC,EAAa,SAAA5F,GAAK,OAAIA,EAAMR,QAAQwF,OAEpCC,EAAa,SAAAjF,GAAK,OAAIA,EAAMR,QAAQS,SAGpC4F,EAAoB,SAAA7F,GAAK,OAAIA,EAAMR,QAAQqG,kBAAkBN,SAE7DO,EAAc,SAAA9F,GAAK,OAAIA,EAAMR,QAAQqG,kBAAkBJ,UAEvDM,EAAc,SAAA/F,GAAK,OAAIA,EAAMR,QAAQqG,kBAAkBF","file":"static/js/8.461b8fa2.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  fetchPeopleByIdRequest,\r\n  fetchPeopleByIdSuccess,\r\n  fetchPeopleByIdError,\r\n  fetchPaginationPeopleRequest,\r\n  fetchPaginationPeopleSuccess\r\n} from './peopleActions';\r\n\r\n\r\nexport const fetchPeopleById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/people/${count}`\r\n  dispatch(fetchPeopleByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPeopleByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchPeopleByIdError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationPeople = page => dispatch => {\r\n  dispatch(fetchPaginationPeopleRequest())\r\n  const URL = `https://swapi.co/api/people/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPeopleSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n\r\n// FETCH BY ID\r\nexport const fetchPeopleByIdRequest = () => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPeopleByIdSuccess = people => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_SUCCESS,\r\n  payload : {\r\n    people,\r\n  }\r\n});\r\n\r\nexport const fetchPeopleByIdError = error => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPeopleRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPaginationPeopleSuccess = people => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_SUCCESS,\r\n  payload : people\r\n});\r\n\r\nexport const fetchPaginationPeopleError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  fetchPlanetsByIdRequest,\r\n  fetchPlanetsByIdSuccess,\r\n  fetchPlanetsByIdError,\r\n  fetchPaginationPlanetsRequest,\r\n  fetchPaginationPlanetsSuccess\r\n} from './planetsActions';\r\n\r\n\r\n\r\nexport const fetchPlanetsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/planets/${count}`\r\n  dispatch(fetchPlanetsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPlanetsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchPlanetsByIdError(error));\r\n    });\r\n};\r\n\r\n//\r\nexport const fetchPaginationPlanets = page => dispatch => {\r\n  dispatch(fetchPaginationPlanetsRequest())\r\n  const URL = `https://swapi.co/api/planets/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPlanetsSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchPlanetsByIdRequest = () => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPlanetsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchPlanetsByIdError = error => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPlanetsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationPlanetsSuccess = planets => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_SUCCESS,\r\n  payload : planets\r\n});\r\n\r\nexport const fetchPaginationPlanetsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as peopleSelectors from '../../../redux/people/peopleSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\nimport css from \"../../list.module.css\";\r\n\r\nconst SpeciesList = ({people, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!people.length && (\r\n            <ul className={css.list}>\r\n              {people.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={ i * 9}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/people/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : peopleSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as filmsSelectors from '../../../redux/films/filmsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nimport css from '../../list.module.css'\r\n\r\nconst SpeciesList = ({film, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!film.length && (\r\n            <ul className={css.list}>\r\n              {film.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={el.episode_id}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/films/${el.episode_id}`}>{el.title}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : filmsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DetailVehicles_container__3oFKy\",\"p\":\"DetailVehicles_p__1zI0W\",\"title\":\"DetailVehicles_title__3YKak\",\"button\":\"DetailVehicles_button__3_Tyz\"};","import React from 'react';\r\nimport * as filmsSelectors from '../../../redux/films/filmsSelectors'\r\nimport * as peopleSelectors from '../../../redux/people/peopleSelectors'\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, useHistory} from \"react-router-dom\";\r\nimport FilmsList from \"../../Films/FilmsList/FilmsList\";\r\nimport PeopleList from \"../../People/PeopleList/PeopleList\";\r\nimport css from \"../../Vehicles/DetailVehicles/DetailVehicles.module.css\";\r\n\r\nconst DetailPlanets = ({\r\n                         name,\r\n                         rotation_period,\r\n                         orbital_period,\r\n                         diameter,\r\n                         climate,\r\n                         gravity,\r\n                         terrain,\r\n                         surface_water,\r\n                         population,\r\n                         residents,\r\n                         films,\r\n                         allFilms,\r\n                         allPeople\r\n                       }) => {\r\n\r\n  const history = useHistory()\r\n\r\n  const handlerBack = () => {\r\n    history.goBack()\r\n  }\r\n\r\n  const arrId = films.map(el => Number(el.split('/')[5]))\r\n  const film = allFilms.filter(el => {\r\n    return arrId.includes(el.episode_id)\r\n  })\r\n\r\n  return (<div className={css.container}>\r\n    <p className={css.p}>Name : {name}</p>\r\n    <p className={css.p}>rotation_period : {rotation_period}</p>\r\n    <p className={css.p}>orbital_period : {orbital_period}</p>\r\n    <p className={css.p}>diameter : {diameter}</p>\r\n    <p className={css.p}>climate : {climate}</p>\r\n    <p className={css.p}>gravity : {gravity}</p>\r\n    <p className={css.p}>terrain : {terrain}</p>\r\n    <p className={css.p}>surface_water : {surface_water}</p>\r\n    <p className={css.p}>population : {population}</p>\r\n\r\n    {/*FILMS*/}\r\n    {!!allFilms.length && (\r\n      <div>\r\n        <h2 className={css.title}>films</h2>\r\n        <FilmsList film={film}/>\r\n      </div>\r\n    )}\r\n\r\n    {/*RESIDENTS*/}\r\n    {!!allPeople.length && (\r\n      <div>\r\n        <h2 className={css.title}>residents</h2>\r\n        <PeopleList people={allPeople}/>\r\n      </div>\r\n    )}\r\n\r\n    <button\r\n      className={css.button}\r\n      onClick={handlerBack}\r\n    >\r\n      Back\r\n    </button>\r\n\r\n  </div>)\r\n}\r\n\r\nconst mSTP = state => ({\r\n  allFilms : filmsSelectors.getAllFilms(state),\r\n  allPeople : peopleSelectors.getPeople(state)\r\n})\r\n\r\nexport default connect(mSTP)(DetailPlanets);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport * as planetsSelectors from '../redux/planets/planetsSelectors'\r\nimport * as planetsOperations from '../redux/planets/planetsOperations'\r\nimport * as peopleOperations from \"../redux/people/peopleOperations\";\r\nimport DetailPlanets from \"../components/Planets/DetailPlanets/DetailPlanets\";\r\n\r\nconst DetailPlanetsPage = ({planets, fetchPlanetsById, fetchPeopleById}) => {\r\n  const planetsId = Number(useParams().id)\r\n\r\n  useEffect(() => {\r\n      fetchPlanetsById(planetsId)\r\n  }, [])\r\n\r\n\r\n  if (planets[0]) {\r\n    planets[0].residents.map(el => {\r\n      const count = Number(el.split('/')[5])\r\n      return fetchPeopleById(count)\r\n    })\r\n  }\r\n\r\n  return (<div>\r\n    {!!planets.length && (\r\n    <DetailPlanets {...planets[0]}/>\r\n    )}\r\n    </div>)\r\n}\r\n\r\nconst mSTP = state => ({\r\n  planets : planetsSelectors.getPlanets(state)\r\n})\r\n\r\nconst mDTP = {\r\n  fetchPlanetsById : planetsOperations.fetchPlanetsById,\r\n  fetchPeopleById: peopleOperations.fetchPeopleById,\r\n}\r\n\r\nexport default connect(mSTP, mDTP)(DetailPlanetsPage);","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"list_container__1Bq0D\",\"list\":\"list_list__1pvkh\",\"item\":\"list_item__3HMYw\",\"link\":\"list_link__2mIHv\"};","export const getAllFilms = state => state.films.items\r\n\r\nexport const getLoading = state => state.films.loading\r\n","export const getPeople = state => state.people.items.sort((a, b) => {\r\n return a.name > b.name\r\n})\r\n\r\nexport const getLoading = state => state.people.loading\r\n\r\n\r\n//PAGINATION\r\nexport const paginationPeople = state => state.people.paginationPeople.results\r\n\r\nexport const peoplePrev = state => state.people.paginationPeople.previous\r\n\r\nexport const peopleNext = state => state.people.paginationPeople.next\r\n","export const getPlanets = state => state.planets.items\r\n\r\nexport const getLoading = state => state.planets.loading\r\n\r\n//PAGINATION\r\nexport const paginationPlanets = state => state.planets.paginationPlanets.results\r\n\r\nexport const planetsPrev = state => state.planets.paginationPlanets.previous\r\n\r\nexport const planetsNext = state => state.planets.paginationPlanets.next\r\n"],"sourceRoot":""}