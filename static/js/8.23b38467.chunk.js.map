{"version":3,"sources":["redux/species/speciesOperations.js","redux/species/speciesActions.js","redux/planets/planetsSelectors.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","redux/vehicles/vehiclesOperations.js","redux/vehicles/vehiclesActions.js","redux/starships/starshipsOperations.js","redux/starships/starshipsActions.js","redux/starships/starshipsSelectors.js","components/PaginationBar/PaginationBar.js","components/PaginationBar/PaginationBar.module.css","components/SearchForm/SearchForm.js","components/SearchForm/SearchForm.module.css","components/Starships/Starships.module.css","components/Starships/Starships.js","pages/StarshipsPage.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","redux/planets/planetsOperations.js","redux/planets/planetsActions.js","redux/people/peopleOperations.js","redux/people/peopleActions.js"],"names":["fetchSpeciesById","count","dispatch","URL","type","ActionType","FETCH_SPECIES_BY_ID_REQUEST","axios","get","then","response","species","data","id","FETCH_SPECIES_BY_ID_SUCCESS","payload","catch","error","console","log","message","FETCH_SPECIES_BY_ID_ERROR","fetchSpeciesByIdError","searchSpecies","name","SEARCH_SPECIES_REQUEST","results","SEARCH_SPECIES_SUCCESS","SEARCH_SPECIES_ERROR","searchSpeciesError","fetchPaginationSpecies","page","FETCH_PAGINATION_SPECIES_REQUEST","FETCH_PAGINATION_SPECIES_SUCCESS","getPlanets","state","planets","items","getLoading","loading","planetsSeach","search","paginationPlanets","planetsPrev","previous","planetsNext","next","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","done","push","value","length","err","TypeError","fetchVehiclesById","FETCH_VEHICLES_BY_ID_REQUEST","vehicles","FETCH_VEHICLES_BY_ID_SUCCESS","FETCH_VEHICLES_BY_ID_ERROR","fetchVehiclesByIdError","searchVehicles","SEARCH_VEHICLES_REQUEST","SEARCH_VEHICLES_SUCCESS","SEARCH_VEHICLES_ERROR","searchVehiclesError","fetchPaginationVehicles","FETCH_PAGINATION_VEHICLES_REQUEST","FETCH_PAGINATION_VEHICLES_SUCCESS","fetchStarshipsById","FETCH_STARSHIPS_BY_ID_REQUEST","FETCH_STARSHIPS_BY_ID_SUCCESS","FETCH_STARSHIPS_BY_ID_ERROR","fetchStarshipsByIdError","searchStarships","SEARCH_STARSHIPS_REQUEST","starships","SEARCH_STARSHIPS_SUCCESS","SEARCH_STARSHIPS_ERROR","searchStarshipsError","fetchPaginationStarships","FETCH_PAGINATION_STARSHIPS_REQUEST","FETCH_PAGINATION_STARSHIPS_SUCCESS","getStarships","starshipsSearch","paginationStarships","starshipsPrev","starshipsNext","PaginationBar","handleButtonClick","prev","className","css","container","buttonWrapper","button","onClick","e","disabled","module","exports","mDTP","searchPeople","peopleOperations","searchPlanets","planetsOperations","speciesOperations","starshipsOperations","vehiclesOperations","connect","component","useState","searchValue","setSearchValue","form","onSubmit","placeholder","input","onChange","target","preventDefault","handleSearchChange","starshipsOperation","withRouter","starshipsSelectors","history","setCount","useEffect","handleMoreClick","el","url","split","SearchForm","list","map","key","item","Loaders","innerText","StarshipsPage","Starships","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","configurable","writable","fetchPlanetsById","FETCH_PLANETS_BY_ID_REQUEST","FETCH_PLANETS_BY_ID_SUCCESS","FETCH_PLANETS_BY_ID_ERROR","fetchPlanetsByIdError","SEARCH_PLANETS_REQUEST","SEARCH_PLANETS_SUCCESS","SEARCH_PLANETS_ERROR","searchPlanetsError","fetchPaginationPlanets","FETCH_PAGINATION_PLANETS_REQUEST","FETCH_PAGINATION_PLANETS_SUCCESS","fetchPeopleById","FETCH_PEOPLE_BY_ID_REQUEST","people","FETCH_PEOPLE_BY_ID_SUCCESS","FETCH_PEOPLE_BY_ID_ERROR","fetchPeopleByIdError","SEARCH_PEOPLE_REQUEST","SEARCH_PEOPLE_SUCCESS","SEARCH_PEOPLE_ERROR","searchPeopleError","fetchPaginationPeople","FETCH_PAGINATION_PEOPLE_REQUEST","FETCH_PAGINATION_PEOPLE_SUCCESS"],"mappings":"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","file":"static/js/8.23b38467.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  fetchSpeciesByIdRequest,\r\n  fetchSpeciesByIdSuccess,\r\n  fetchSpeciesByIdError,\r\n  fetchPaginationSpeciesRequest,\r\n  fetchPaginationSpeciesSuccess,\r\n  searchSpeciesRequest,\r\n  searchSpeciesSuccess,\r\n  searchSpeciesError\r\n} from './speciesActions';\r\n\r\nexport const fetchSpeciesById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/species/${count}`\r\n  dispatch(fetchSpeciesByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchSpeciesByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchSpeciesByIdError(error));\r\n    });\r\n};\r\n\r\n//SEARCH\r\nexport const searchSpecies = (name) => dispatch => {\r\n  const URL = `https://swapi.co/api/species/?search=${name}`;\r\n  dispatch(searchSpeciesRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(searchSpeciesSuccess(response.data.results));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(searchSpeciesError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationSpecies = page => dispatch => {\r\n  dispatch(fetchPaginationSpeciesRequest())\r\n  const URL = `https://swapi.co/api/species/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationSpeciesSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n// FETCH SPECIES\r\nexport const fetchSpeciesByIdRequest = () => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_REQUEST,\r\n});\r\n\r\nexport const fetchSpeciesByIdSuccess = species => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_SUCCESS,\r\n  payload : {\r\n    species,\r\n  }\r\n});\r\n\r\nexport const fetchSpeciesByIdError = error => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// SPECIES SEARCH\r\nexport const searchSpeciesRequest = () => ({\r\n  type: ActionType.SEARCH_SPECIES_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const searchSpeciesSuccess = species => ({\r\n  type: ActionType.SEARCH_SPECIES_SUCCESS,\r\n  payload : species\r\n});\r\n\r\nexport const searchSpeciesError = error => ({\r\n  type: ActionType.SEARCH_SPECIES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationSpeciesRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationSpeciesSuccess = species => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_SUCCESS,\r\n  payload : species\r\n});\r\n\r\nexport const fetchPaginationSpeciesError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","export const getPlanets = state => state.planets.items\r\n\r\nexport const getLoading = state => state.planets.loading\r\n\r\n//SEARCH\r\nexport const planetsSeach = state => state.planets.search\r\n\r\n//PAGINATION\r\nexport const paginationPlanets = state => state.planets.paginationPlanets.results\r\n\r\nexport const planetsPrev = state => state.planets.paginationPlanets.previous\r\n\r\nexport const planetsNext = state => state.planets.paginationPlanets.next\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import axios from 'axios';\r\nimport {\r\n  fetchVehiclesByIdRequest,\r\n  fetchVehiclesByIdSuccess,\r\n  fetchVehiclesByIdError,\r\n  fetchPaginationVehiclesRequest,\r\n  fetchPaginationVehiclesSuccess,\r\n  searchVehiclesRequest,\r\n  searchVehiclesSuccess,\r\n  searchVehiclesError\r\n} from './vehiclesActions';\r\n\r\nexport const fetchVehiclesById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/vehicles/${count}`\r\n  dispatch(fetchVehiclesByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchVehiclesByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchVehiclesByIdError(error));\r\n    });\r\n};\r\n\r\n//SEARCH\r\nexport const searchVehicles = (name) => dispatch => {\r\n  const URL = `https://swapi.co/api/vehicles/?search=${name}`;\r\n  dispatch(searchVehiclesRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(searchVehiclesSuccess(response.data.results));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(searchVehiclesError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationVehicles = page => dispatch => {\r\n  dispatch(fetchPaginationVehiclesRequest())\r\n  const URL = `https://swapi.co/api/vehicles/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationVehiclesSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n//FETCH VEHICLES\r\nexport const fetchVehiclesByIdRequest = () => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_REQUEST,\r\n});\r\n\r\nexport const fetchVehiclesByIdSuccess = vehicles => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_SUCCESS,\r\n  payload : {\r\n    vehicles,\r\n  }\r\n});\r\n\r\nexport const fetchVehiclesByIdError = error => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// VEHICLES SEARCH\r\nexport const searchVehiclesRequest = () => ({\r\n  type: ActionType.SEARCH_VEHICLES_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const searchVehiclesSuccess = vehicles => ({\r\n  type: ActionType.SEARCH_VEHICLES_SUCCESS,\r\n  payload : vehicles\r\n});\r\n\r\nexport const searchVehiclesError = error => ({\r\n  type: ActionType.SEARCH_VEHICLES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationVehiclesRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationVehiclesSuccess = vehicles => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_SUCCESS,\r\n  payload : vehicles\r\n});\r\n\r\nexport const fetchPaginationVehiclesError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  fetchStarshipsByIdRequest,\r\n  fetchStarshipsByIdSuccess,\r\n  fetchStarshipsByIdError,\r\n  fetchPaginationStarshipsRequest,\r\n  fetchPaginationStarshipsSuccess,\r\n  searchStarshipsError,\r\n  searchStarshipsSuccess,\r\n  searchStarshipsRequest\r\n} from './starshipsActions';\r\n\r\n\r\nexport const fetchStarshipsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/starships/${count}`\r\n  dispatch(fetchStarshipsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchStarshipsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchStarshipsByIdError(error));\r\n    });\r\n};\r\n\r\n\r\n//SEARCH\r\nexport const searchStarships = (name) => dispatch => {\r\n  const URL = `https://swapi.co/api/starships/?search=${name}`;\r\n  dispatch(searchStarshipsRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(searchStarshipsSuccess(response.data.results));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(searchStarshipsError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationStarships = page => dispatch => {\r\n  dispatch(fetchPaginationStarshipsRequest())\r\n  const URL = `https://swapi.co/api/starships/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationStarshipsSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n// FECTH STARSHIPS\r\nexport const fetchStarshipsByIdRequest = () => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchStarshipsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchStarshipsByIdError = error => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// STARSHIPS SEARCH\r\nexport const searchStarshipsRequest = () => ({\r\n  type: ActionType.SEARCH_STARSHIPS_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const searchStarshipsSuccess = starships => ({\r\n  type: ActionType.SEARCH_STARSHIPS_SUCCESS,\r\n  payload : starships\r\n});\r\n\r\nexport const searchStarshipsError = error => ({\r\n  type: ActionType.SEARCH_STARSHIPS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationStarshipsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationStarshipsSuccess = starships => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_SUCCESS,\r\n  payload : starships\r\n});\r\n\r\nexport const fetchPaginationStarshipsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","export const getStarships = state => state.starships.items\r\n\r\nexport const getLoading = state => state.starships.loading\r\n\r\n//SEARCH\r\nexport const starshipsSearch = state => state.starships.search\r\n\r\n//PAGINATION\r\nexport const paginationStarships = state => state.starships.paginationStarships.results\r\n\r\nexport const starshipsPrev = state => state.starships.paginationStarships.previous\r\n\r\nexport const starshipsNext = state => state.starships.paginationStarships.next\r\n","import React from 'react';\r\nimport css from './PaginationBar.module.css'\r\n\r\nconst PaginationBar = ({handleButtonClick, next, prev}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      <div className={css.buttonWrapper}>\r\n    <button className={css.button} onClick={e => handleButtonClick(e)} disabled={!prev} >\r\n      prev\r\n    </button>\r\n\r\n    <button className={css.button} onClick={e => handleButtonClick(e)} disabled={!next} >\r\n        next\r\n    </button>\r\n      </div>\r\n    </div>)\r\n}\r\n\r\nexport default PaginationBar;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PaginationBar_container__2jgUk\",\"buttonWrapper\":\"PaginationBar_buttonWrapper__3oh5r\",\"button\":\"PaginationBar_button__8Nb_h\"};","import React, { useState } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport * as peopleOperations from '../../redux/people/peopleOperations'\r\nimport * as planetsOperations from '../../redux/planets/planetsOperations'\r\nimport * as speciesOperations from '../../redux/species/speciesOperations'\r\nimport * as starshipsOperations from '../../redux/starships/starshipsOperations'\r\nimport * as vehiclesOperations from '../../redux/vehicles/vehiclesOperations'\r\n\r\nimport css from './SearchForm.module.css'\r\n\r\nconst SearchForm = ({\r\n                      component,\r\n                      searchPeople,\r\n                      searchPlanets,\r\n                      searchSpecies,\r\n                      searchStarships,\r\n                      searchVehicles\r\n                    }) => {\r\n  const [searchValue, setSearchValue] = useState('')\r\n\r\n  const handleSearchChange = e => {\r\n    setSearchValue(e.target.value)\r\n    e.preventDefault()\r\n    if (component === 'people') {\r\n      searchPeople(searchValue)\r\n    }\r\n    if (component === 'planets') {\r\n      searchPlanets(searchValue)\r\n    }\r\n    if (component === 'species') {\r\n      searchSpecies(searchValue)\r\n    }\r\n    if (component === 'starships') {\r\n      searchStarships(searchValue)\r\n    }\r\n    if (component === 'vehicles') {\r\n      searchVehicles(searchValue)\r\n    }\r\n  }\r\n\r\n  const handleSearchSubmit = e => {\r\n    // e.preventDefault()\r\n    // if (component === 'people') {\r\n    //   searchPeople(searchValue)\r\n    // }\r\n    // if (component === 'planets') {\r\n    //   searchPlanets(searchValue)\r\n    // }\r\n    // if (component === 'species') {\r\n    //   searchSpecies(searchValue)\r\n    // }\r\n    // if (component === 'starships') {\r\n    //   searchStarships(searchValue)\r\n    // }\r\n    // if (component === 'vehicles') {\r\n    //   searchVehicles(searchValue)\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <form className={css.form} onSubmit={e => handleSearchSubmit(e)}>\r\n        <input\r\n          value={searchValue}\r\n          placeholder = {`Search...`}\r\n          className={css.input}\r\n          type=\"text\"\r\n          onChange={(e) => handleSearchChange(e)}/>\r\n          <button\r\n            className={css.button}\r\n            type='submit'\r\n            onClick={e =>  handleSearchSubmit(e)}>\r\n            search\r\n          </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mDTP = {\r\n  searchPeople : peopleOperations.searchPeople,\r\n  searchPlanets : planetsOperations.searchPlanets,\r\n  searchSpecies : speciesOperations.searchSpecies,\r\n  searchStarships : starshipsOperations.searchStarships,\r\n  searchVehicles : vehiclesOperations.searchVehicles,\r\n}\r\n\r\nexport default connect(null, mDTP)(SearchForm)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchForm_container__1jo9s\",\"form\":\"SearchForm_form__LqzlB\",\"input\":\"SearchForm_input__2ux4l\",\"button\":\"SearchForm_button__36yXT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Starships_container__2djNY\",\"list\":\"Starships_list__3K_qq\",\"item\":\"Starships_item__2kiDG\"};","import React, { useEffect, useState } from 'react';\r\nimport PaginationBar from \"../PaginationBar/PaginationBar\";\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Loaders } from \"../Loaders\";\r\nimport * as starshipsSelectors from '../../redux/starships/starshipsSelectors'\r\nimport * as starshipsOperation from '../../redux/starships/starshipsOperations'\r\n\r\nimport css from './Starships.module.css'\r\nimport SearchForm from \"../SearchForm/SearchForm\";\r\nimport * as planetsSelectors from \"../../redux/planets/planetsSelectors\";\r\n\r\nconst Species = ({fetchPaginationStarships, starships, prev, next, history, starshipsSearch}) => {\r\n  const [count, setCount] = useState(1)\r\n\r\n  useEffect(() => {\r\n    fetchPaginationStarships(count)\r\n  }, [count])\r\n\r\n  const handleButtonClick = (e) => {\r\n    if (e.target.innerText === 'next') {\r\n      setCount(count + 1)\r\n    }\r\n    if (e.target.innerText === 'prev') {\r\n      setCount(count - 1)\r\n    }\r\n  }\r\n\r\n  const handleMoreClick = el => {\r\n    const id = el.url.split('/')[5]\r\n    history.push(`${id}/`)\r\n  }\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <SearchForm component={'starships'}/>\r\n\r\n      {starshipsSearch.length !== 0 && (\r\n        <ul className={css.list}>\r\n          {starshipsSearch.map((el, i) =>\r\n            <li key={i}\r\n                onClick={() => handleMoreClick(el)}\r\n                className={css.item}>\r\n              <p>{el.name}</p>\r\n            </li>)}\r\n        </ul>\r\n      )}\r\n\r\n      {starshipsSearch.length === 0 && (\r\n        <>\r\n          {!starships && <Loaders/>}\r\n          {starships && (\r\n            <ul className={css.list}>\r\n              {starships.map((el, i) =>\r\n                <li key={i}\r\n                    className={css.item}\r\n                    onClick={() => handleMoreClick(el)}>\r\n                  <p>{el.name}</p>\r\n                </li>)}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n      <PaginationBar {...{handleButtonClick, next, prev}}/>\r\n    </div>\r\n  )}\r\n\r\nconst mSTP = state => ({\r\n  starships : starshipsSelectors.paginationStarships(state),\r\n  prev : starshipsSelectors.starshipsPrev(state),\r\n  next : starshipsSelectors.starshipsNext(state),\r\n  starshipsSearch : starshipsSelectors.starshipsSearch(state)\r\n\r\n})\r\n\r\nconst mDTP = {\r\n  fetchPaginationStarships : starshipsOperation.fetchPaginationStarships\r\n}\r\n\r\nexport default withRouter(connect(mSTP, mDTP)(Species));","import React from 'react'\r\nimport Starships from '../components/Starships/Starships'\r\n\r\nexport const StarshipsPage = () => {\r\n  return (\r\n    <Starships />\r\n  )\r\n}\r\n\r\nexport default StarshipsPage","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import axios from 'axios';\r\nimport {\r\n  fetchPlanetsByIdRequest,\r\n  fetchPlanetsByIdSuccess,\r\n  fetchPlanetsByIdError,\r\n  fetchPaginationPlanetsRequest,\r\n  fetchPaginationPlanetsSuccess,\r\n  searchPlanetsRequest,\r\n  searchPlanetsSuccess,\r\n  searchPlanetsError\r\n} from './planetsActions';\r\n\r\n\r\n\r\nexport const fetchPlanetsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/planets/${count}`\r\n  dispatch(fetchPlanetsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPlanetsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchPlanetsByIdError(error));\r\n    });\r\n};\r\n\r\n//SEARCH\r\nexport const searchPlanets = (name) => dispatch => {\r\n  const URL = `https://swapi.co/api/planets/?search=${name}`;\r\n  dispatch(searchPlanetsRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      console.log(response.data)\r\n      dispatch(searchPlanetsSuccess(response.data.results));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(searchPlanetsError(error));\r\n    });\r\n};\r\n\r\n// PAGINATION\r\nexport const fetchPaginationPlanets = page => dispatch => {\r\n  dispatch(fetchPaginationPlanetsRequest())\r\n  const URL = `https://swapi.co/api/planets/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPlanetsSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n//FETCH PLANETS BY ID\r\nexport const fetchPlanetsByIdRequest = () => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPlanetsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchPlanetsByIdError = error => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// PLANETS SEARCH\r\nexport const searchPlanetsRequest = () => ({\r\n  type: ActionType.SEARCH_PLANETS_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const searchPlanetsSuccess = planets => ({\r\n  type: ActionType.SEARCH_PLANETS_SUCCESS,\r\n  payload : planets\r\n});\r\n\r\nexport const searchPlanetsError = error => ({\r\n  type: ActionType.SEARCH_PLANETS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPlanetsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationPlanetsSuccess = planets => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_SUCCESS,\r\n  payload : planets\r\n});\r\n\r\nexport const fetchPaginationPlanetsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n","import axios from 'axios';\r\nimport {\r\n  fetchPeopleByIdRequest,\r\n  fetchPeopleByIdSuccess,\r\n  fetchPeopleByIdError,\r\n  fetchPaginationPeopleRequest,\r\n  fetchPaginationPeopleSuccess,\r\n  searchPeopleRequest,\r\n  searchPeopleSuccess, searchPeopleError\r\n} from './peopleActions';\r\n\r\n\r\nexport const fetchPeopleById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/people/${count}`\r\n  dispatch(fetchPeopleByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPeopleByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchPeopleByIdError(error));\r\n    });\r\n};\r\n\r\n//SEARCH\r\nexport const searchPeople = (name) => dispatch => {\r\n  const URL = `https://swapi.co/api/people/?search=${name}`;\r\n  dispatch(searchPeopleRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(searchPeopleSuccess(response.data.results));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(searchPeopleError(error));\r\n    });\r\n};\r\n\r\n\r\n//FETCH PAGINATION\r\nexport const fetchPaginationPeople = page => dispatch => {\r\n  dispatch(fetchPaginationPeopleRequest())\r\n  const URL = `https://swapi.co/api/people/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPeopleSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n// FETCH BY ID\r\nexport const fetchPeopleByIdRequest = () => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPeopleByIdSuccess = people => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_SUCCESS,\r\n  payload : {\r\n    people,\r\n  }\r\n});\r\n\r\nexport const fetchPeopleByIdError = error => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// PEOPLE SEARCH\r\nexport const searchPeopleRequest = () => ({\r\n  type: ActionType.SEARCH_PEOPLE_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const searchPeopleSuccess = people => ({\r\n  type: ActionType.SEARCH_PEOPLE_SUCCESS,\r\n  payload : people\r\n});\r\n\r\nexport const searchPeopleError = error => ({\r\n  type: ActionType.SEARCH_PEOPLE_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPeopleRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPaginationPeopleSuccess = people => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_SUCCESS,\r\n  payload : people\r\n});\r\n\r\nexport const fetchPaginationPeopleError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n"],"sourceRoot":""}