{"version":3,"sources":["redux/starships/starshipsSelectors.js","redux/vehicles/vehiclesSelectors.js","redux/people/peopleOperations.js","redux/people/peopleActions.js","redux/planets/planetsOperations.js","redux/planets/planetsActions.js","redux/species/speciesOperations.js","redux/species/speciesActions.js","components/People/PeopleList/PeopleList.js","components/Films/FilmsList/FilmsList.js","components/Planets/PlanetsList/PlanetsList.js","components/Vehicles/DetailVehicles/DetailVehicles.js","components/Species/DetailSpecies.js/DetailSpecies.js","pages/DetailSpeciesPage.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","redux/films/filmsSelectors.js","redux/people/peopleSelectors.js","redux/planets/planetsSelectors.js","redux/species/speciesSelectors.js"],"names":["getStarships","state","starships","items","getLoading","loading","paginationStarships","results","starshipsPrev","previous","starshipsNext","next","getAllVehicles","vehicles","paginationVehicles","vehiclesPrev","vehiclesNext","fetchPeopleById","count","dispatch","URL","type","ActionType","FETCH_PEOPLE_BY_ID_REQUEST","payload","axios","get","then","response","people","data","id","FETCH_PEOPLE_BY_ID_SUCCESS","catch","error","FETCH_PEOPLE_BY_ID_ERROR","fetchPeopleByIdError","fetchPaginationPeople","page","FETCH_PAGINATION_PEOPLE_REQUEST","FETCH_PAGINATION_PEOPLE_SUCCESS","fetchPlanetsById","FETCH_PLANETS_BY_ID_REQUEST","planets","FETCH_PLANETS_BY_ID_SUCCESS","FETCH_PLANETS_BY_ID_ERROR","fetchPlanetsByIdError","fetchPaginationPlanets","FETCH_PAGINATION_PLANETS_REQUEST","FETCH_PAGINATION_PLANETS_SUCCESS","fetchSpeciesById","FETCH_SPECIES_BY_ID_REQUEST","species","FETCH_SPECIES_BY_ID_SUCCESS","FETCH_SPECIES_BY_ID_ERROR","fetchSpeciesByIdError","fetchPaginationSpecies","FETCH_PAGINATION_SPECIES_REQUEST","FETCH_PAGINATION_SPECIES_SUCCESS","style","position","display","connect","peopleSelectors","length","map","el","i","key","to","name","filmsSelectors","film","episode_id","title","planetsSelectors","allFilms","allPeople","model","manufacturer","cost_in_credits","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","vehicle_class","films","pilots","history","useHistory","arrId","Number","split","filter","includes","className","onClick","goBack","allPlanets","allStarships","starshipsSelectors","allVehicles","vehiclesSelectors","allSpecies","speciesSelectors","classification","designation","average_height","skin_colors","hair_colors","eye_colors","average_lifespan","language","PlanetsList","PeopleList","mDTP","speciesOperations","planetsOperations","peopleOperations","speciesId","useParams","homeworld","useEffect","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","getAllFilms","getPeople","sort","a","b","paginationPeople","peoplePrev","peopleNext","getPlanets","paginationPlanets","planetsPrev","planetsNext","getAllSpecies","paginationSpecies","speciesPrev","speciesNext"],"mappings":"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","file":"static/js/6.87ade9c3.chunk.js","sourcesContent":["export const getStarships = state => state.starships.items\r\n\r\nexport const getLoading = state => state.starships.loading\r\n\r\n//PAGINATION\r\nexport const paginationStarships = state => state.starships.paginationStarships.results\r\n\r\nexport const starshipsPrev = state => state.starships.paginationStarships.previous\r\n\r\nexport const starshipsNext = state => state.starships.paginationStarships.next\r\n","export const getAllVehicles = state => state.vehicles.items\r\n\r\nexport const getLoading = state => state.vehicles.loading\r\n\r\n//PAGINATION\r\nexport const paginationVehicles = state => state.vehicles.paginationVehicles.results\r\n\r\nexport const vehiclesPrev = state => state.vehicles.paginationVehicles.previous\r\n\r\nexport const vehiclesNext = state => state.vehicles.paginationVehicles.next\r\n","import axios from 'axios';\r\nimport {\r\n  fetchPeopleByIdRequest,\r\n  fetchPeopleByIdSuccess,\r\n  fetchPeopleByIdError,\r\n  fetchPaginationPeopleRequest,\r\n  fetchPaginationPeopleSuccess\r\n} from './peopleActions';\r\n\r\n\r\nexport const fetchPeopleById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/people/${count}`\r\n  dispatch(fetchPeopleByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPeopleByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchPeopleByIdError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationPeople = page => dispatch => {\r\n  dispatch(fetchPaginationPeopleRequest())\r\n  const URL = `https://swapi.co/api/people/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPeopleSuccess(response.data)))\r\n}","import {ActionType} from '../actionType'\r\n\r\n\r\n// FETCH BY ID\r\nexport const fetchPeopleByIdRequest = () => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPeopleByIdSuccess = people => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_SUCCESS,\r\n  payload : {\r\n    people,\r\n  }\r\n});\r\n\r\nexport const fetchPeopleByIdError = error => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPeopleRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPaginationPeopleSuccess = people => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_SUCCESS,\r\n  payload : people\r\n});\r\n\r\nexport const fetchPaginationPeopleError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  fetchPlanetsByIdRequest,\r\n  fetchPlanetsByIdSuccess,\r\n  fetchPlanetsByIdError,\r\n  fetchPaginationPlanetsRequest,\r\n  fetchPaginationPlanetsSuccess\r\n} from './planetsActions';\r\n\r\n\r\n\r\nexport const fetchPlanetsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/planets/${count}`\r\n  dispatch(fetchPlanetsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPlanetsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchPlanetsByIdError(error));\r\n    });\r\n};\r\n\r\n//\r\nexport const fetchPaginationPlanets = page => dispatch => {\r\n  dispatch(fetchPaginationPlanetsRequest())\r\n  const URL = `https://swapi.co/api/planets/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPlanetsSuccess(response.data)))\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchPlanetsByIdRequest = () => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPlanetsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchPlanetsByIdError = error => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPlanetsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationPlanetsSuccess = planets => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_SUCCESS,\r\n  payload : planets\r\n});\r\n\r\nexport const fetchPaginationPlanetsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n","import axios from 'axios';\r\nimport {\r\n  fetchSpeciesByIdRequest,\r\n  fetchSpeciesByIdSuccess,\r\n  fetchSpeciesByIdError,\r\n  fetchPaginationSpeciesRequest,\r\n  fetchPaginationSpeciesSuccess\r\n} from './speciesActions';\r\n\r\nexport const fetchSpeciesById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/species/${count}`\r\n  dispatch(fetchSpeciesByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchSpeciesByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchSpeciesByIdError(error));\r\n    });\r\n};\r\nexport const fetchPaginationSpecies = page => dispatch => {\r\n  dispatch(fetchPaginationSpeciesRequest())\r\n  const URL = `https://swapi.co/api/species/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationSpeciesSuccess(response.data)))\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchSpeciesByIdRequest = () => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_REQUEST,\r\n});\r\n\r\nexport const fetchSpeciesByIdSuccess = species => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_SUCCESS,\r\n  payload : {\r\n    species,\r\n  }\r\n});\r\n\r\nexport const fetchSpeciesByIdError = error => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationSpeciesRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationSpeciesSuccess = species => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_SUCCESS,\r\n  payload : species\r\n});\r\n\r\nexport const fetchPaginationSpeciesError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as peopleSelectors from '../../../redux/people/peopleSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nconst style = {\r\n  position: 'relative',\r\n  display : 'block'\r\n}\r\n\r\nconst SpeciesList = ({people, loading}) => {\r\n  return (\r\n    <div style={style}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!people.length && (\r\n            <ul>\r\n              {people.map((el, i) => (\r\n                <li key={ i * 9}>\r\n                  <NavLink to={`/people/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : peopleSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as filmsSelectors from '../../../redux/films/filmsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nconst style = {\r\n  position: 'relative',\r\n  display : 'block'\r\n}\r\n\r\nconst SpeciesList = ({film, loading}) => {\r\n  return (\r\n    <div style={style}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!film.length && (\r\n            <ul>\r\n              {film.map((el, i) => (\r\n                <li key={el.episode_id}>\r\n                  <NavLink to={`/films/${el.episode_id}`}>{el.title}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : filmsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as planetsSelectors from '../../../redux/planets/planetsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nconst style = {\r\n  position: 'relative',\r\n  display : 'block'\r\n}\r\n\r\nconst SpeciesList = ({planets, loading}) => {\r\n  return (\r\n    <div style={style}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!planets.length && (\r\n            <ul>\r\n              {planets.map((el, i) => (\r\n                <li key={ i * 9}>\r\n                  <NavLink to={`/planets/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : planetsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as filmsSelectors from \"../../../redux/films/filmsSelectors\";\r\nimport * as peopleSelectors from \"../../../redux/people/peopleSelectors\";\r\nimport PeopleList from \"../../People/PeopleList/PeopleList\";\r\nimport FilmsList from \"../../Films/FilmsList/FilmsList\";\r\n\r\nconst DetailVehicles = ({\r\n                          name,\r\n                          model,\r\n                          manufacturer,\r\n                          cost_in_credits,\r\n                          length,\r\n                          max_atmosphering_speed,\r\n                          crew,\r\n                          passengers,\r\n                          cargo_capacity,\r\n                          consumables,\r\n                          vehicle_class,\r\n                          pilots,\r\n                          films,\r\n                          allFilms,\r\n                          allPeople\r\n                        }) => {\r\n\r\n  const history = useHistory()\r\n\r\n  const handlerBack = () => {\r\n    history.goBack()\r\n  }\r\n\r\n  const arrId = films.map(el => Number(el.split('/')[5]))\r\n  const film = allFilms.filter(el => {\r\n    return arrId.includes(el.episode_id)\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <p>Name : {name}</p>\r\n      <p>model : {model}</p>\r\n      <p>manufacturer : {manufacturer}</p>\r\n      <p>cost_in_credits : {cost_in_credits}</p>\r\n      <p>length : {length}</p>\r\n      <p>max_atmosphering_speed : {max_atmosphering_speed}</p>\r\n      <p>crew : {crew}</p>\r\n      <p>passengers : {passengers}</p>\r\n      <p>cargo_capacity : {cargo_capacity}</p>\r\n      <p>consumables : {consumables}</p>\r\n      <p>vehicle_class : {vehicle_class}</p>\r\n\r\n      {/*PILOTS*/}\r\n      {!!allPeople.length && (\r\n        <div>\r\n          <h2>pilots</h2>\r\n          <PeopleList people={allPeople}/>\r\n        </div>\r\n      )}\r\n\r\n      {/*FILMS*/}\r\n      {!!allFilms.length && (\r\n        <div>\r\n          <h2>films</h2>\r\n          <FilmsList film={film}/>\r\n        </div>\r\n      )}\r\n\r\n      <button\r\n        className=\"btn darken-4 right\"\r\n        onClick={handlerBack}\r\n      >\r\n        Back\r\n      </button>\r\n\r\n    </div>)\r\n}\r\nconst mSTP = state => ({\r\n  allFilms : filmsSelectors.getAllFilms(state),\r\n  allPeople : peopleSelectors.getPeople(state)\r\n})\r\n\r\nexport default connect(mSTP)(DetailVehicles)\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport * as filmsSelectors from \"../../../redux/films/filmsSelectors\";\r\nimport * as planetsSelectors from \"../../../redux/planets/planetsSelectors\";\r\nimport * as starshipsSelectors\r\n  from \"../../../redux/starships/starshipsSelectors\";\r\nimport * as vehiclesSelectors from \"../../../redux/vehicles/vehiclesSelectors\";\r\nimport * as speciesSelectors from \"../../../redux/species/speciesSelectors\";\r\nimport * as peopleSelectors from \"../../../redux/people/peopleSelectors\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport PlanetsList from \"../../Planets/PlanetsList/PlanetsList\";\r\nimport PeopleList from \"../../People/PeopleList/PeopleList\";\r\n\r\nconst DetailSpecies = ({\r\n                         allPeople,\r\n                         allPlanets,\r\n                         name,\r\n                         classification,\r\n                         designation,\r\n                         average_height,\r\n                         skin_colors,\r\n                         hair_colors,\r\n                         eye_colors,\r\n                         average_lifespan,\r\n                         language,\r\n                         people,\r\n                         films,\r\n                       }) => {\r\n\r\n  const history = useHistory()\r\n\r\n  const handlerBack = () => {\r\n    history.goBack()\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n    <p>Name : {name}</p>\r\n    <p>classification : {classification}</p>\r\n    <p>designation : {designation}</p>\r\n    <p>average_height : {average_height}</p>\r\n    <p>skin_colors : {skin_colors}</p>\r\n    <p>hair_colors : {hair_colors}</p>\r\n    <p>eye_colors : {eye_colors}</p>\r\n    <p>average_lifespan : {average_lifespan}</p>\r\n    <p>language : {language}</p>\r\n\r\n      {/*PLANETS*/}\r\n      {!!allPlanets.length && (\r\n        <div>\r\n          <h2>homeworld</h2>\r\n          <PlanetsList planets={allPlanets}/>\r\n        </div>\r\n      )}\r\n\r\n      {/*PEOPLE*/}\r\n      {!!allPeople.length && (\r\n        <div>\r\n          <h2>people</h2>\r\n          <PeopleList people={allPeople}/>\r\n        </div>\r\n      )}\r\n\r\n      <button\r\n        className=\"btn darken-4 right\"\r\n        onClick={handlerBack}\r\n      >\r\n        Back\r\n      </button>\r\n\r\n    </div>)\r\n}\r\n\r\nconst mSTP = state => ({\r\n  allFilms : filmsSelectors.getAllFilms(state),\r\n  allPlanets: planetsSelectors.getPlanets(state),\r\n  allStarships: starshipsSelectors.getStarships(state),\r\n  allVehicles: vehiclesSelectors.getAllVehicles(state),\r\n  allSpecies: speciesSelectors.getAllSpecies(state),\r\n  allPeople : peopleSelectors.getPeople(state),\r\n})\r\n\r\nexport default connect(mSTP)(DetailSpecies);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport * as speciesSelectors from '../redux/species/speciesSelectors'\r\nimport * as speciesOperations from '../redux/species/speciesOperations'\r\nimport DetailSpecies\r\n  from \"../components/Species/DetailSpecies.js/DetailSpecies\";\r\nimport * as planetsOperations from \"../redux/planets/planetsOperations\";\r\nimport * as peopleOperations from \"../redux/people/peopleOperations\";\r\nimport DetailVehicles\r\n  from \"../components/Vehicles/DetailVehicles/DetailVehicles\";\r\n\r\nconst DetailSpeciesPage = ({\r\n                             species,\r\n                             fetchSpeciesById,\r\n                             fetchPlanetsById,\r\n                             fetchPeopleById\r\n                           }) => {\r\n  const speciesId = Number(useParams().id)\r\n\r\n\r\n  if(species[0]) {\r\n    if (species[0].homeworld) {\r\n    const count = Number(species[0].homeworld.split('/')[5])\r\n    fetchPlanetsById(count)\r\n    }\r\n\r\n    species[0].people.map(el => {\r\n      const count = Number(el.split('/')[5])\r\n      return fetchPeopleById(count)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!!!species.length) {\r\n      fetchSpeciesById(speciesId)\r\n    }\r\n  }, [fetchSpeciesById, species.length, speciesId])\r\n\r\n\r\n  return (\r\n    <div>\r\n      {species[0] && <DetailSpecies {...species[0]}/>}\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  species : speciesSelectors.getAllSpecies(state)\r\n})\r\n\r\nconst mDTP = {\r\n  fetchSpeciesById : speciesOperations.fetchSpeciesById,\r\n  fetchPlanetsById: planetsOperations.fetchPlanetsById,\r\n  fetchPeopleById: peopleOperations.fetchPeopleById,\r\n}\r\n\r\nexport default connect(mSTP, mDTP)(DetailSpeciesPage);\r\n\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export const getAllFilms = state => state.films.items\r\n\r\nexport const getLoading = state => state.films.loading\r\n","export const getPeople = state => state.people.items.sort((a, b) => {\r\n return a.name > b.name\r\n})\r\n\r\nexport const getLoading = state => state.people.loading\r\n\r\n\r\n//PAGINATION\r\nexport const paginationPeople = state => state.people.paginationPeople.results\r\n\r\nexport const peoplePrev = state => state.people.paginationPeople.previous\r\n\r\nexport const peopleNext = state => state.people.paginationPeople.next\r\n","export const getPlanets = state => state.planets.items\r\n\r\nexport const getLoading = state => state.planets.loading\r\n\r\n//PAGINATION\r\nexport const paginationPlanets = state => state.planets.paginationPlanets.results\r\n\r\nexport const planetsPrev = state => state.planets.paginationPlanets.previous\r\n\r\nexport const planetsNext = state => state.planets.paginationPlanets.next\r\n","export const getAllSpecies = state => state.species.items\r\n\r\nexport const getLoading = state => state.species.loading\r\n\r\n//PAGINATION\r\nexport const paginationSpecies = state => state.species.paginationSpecies.results\r\n\r\nexport const speciesPrev = state => state.species.paginationSpecies.previous\r\n\r\nexport const speciesNext = state => state.species.paginationSpecies.next\r\n"],"sourceRoot":""}