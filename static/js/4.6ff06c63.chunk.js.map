{"version":3,"sources":["redux/species/speciesSelectors.js","redux/starships/starshipsSelectors.js","redux/vehicles/vehiclesSelectors.js","redux/people/peopleOperations.js","redux/people/peopleActions.js","redux/planets/planetsOperations.js","redux/planets/planetsActions.js","redux/species/speciesOperations.js","redux/species/speciesActions.js","components/Films/FilmsList/FilmsList.js","redux/starships/starshipsOperations.js","redux/starships/starshipsActions.js","redux/vehicles/vehiclesOperations.js","redux/vehicles/vehiclesActions.js","components/Planets/PlanetsList/PlanetsList.js","components/Species/SpeciesList/SpeciesList.js","components/Vehicles/VehiclesList/VehiclesList.js","components/Starships/StarshipsList/StarshipsList.js","components/People/DetailPeople/DetailPeople.js","components/People/DetailPeople/DetailPeople.module.css","pages/DetailPeoplePage.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/list.module.css","redux/films/filmsSelectors.js","redux/people/peopleSelectors.js","redux/planets/planetsSelectors.js"],"names":["getAllSpecies","state","species","items","getLoading","loading","paginationSpecies","results","speciesPrev","previous","speciesNext","next","getStarships","starships","paginationStarships","starshipsPrev","starshipsNext","getAllVehicles","vehicles","paginationVehicles","vehiclesPrev","vehiclesNext","fetchPeopleById","count","dispatch","URL","type","ActionType","FETCH_PEOPLE_BY_ID_REQUEST","payload","axios","get","then","response","people","data","id","FETCH_PEOPLE_BY_ID_SUCCESS","catch","error","console","log","message","FETCH_PEOPLE_BY_ID_ERROR","fetchPeopleByIdError","fetchPaginationPeople","page","FETCH_PAGINATION_PEOPLE_REQUEST","FETCH_PAGINATION_PEOPLE_SUCCESS","fetchPlanetsById","FETCH_PLANETS_BY_ID_REQUEST","planets","FETCH_PLANETS_BY_ID_SUCCESS","FETCH_PLANETS_BY_ID_ERROR","fetchPlanetsByIdError","fetchPaginationPlanets","FETCH_PAGINATION_PLANETS_REQUEST","FETCH_PAGINATION_PLANETS_SUCCESS","fetchSpeciesById","FETCH_SPECIES_BY_ID_REQUEST","FETCH_SPECIES_BY_ID_SUCCESS","FETCH_SPECIES_BY_ID_ERROR","fetchSpeciesByIdError","fetchPaginationSpecies","FETCH_PAGINATION_SPECIES_REQUEST","FETCH_PAGINATION_SPECIES_SUCCESS","connect","filmsSelectors","film","className","css","container","length","list","map","el","i","item","key","episode_id","link","to","title","fetchStarshipsById","FETCH_STARSHIPS_BY_ID_REQUEST","FETCH_STARSHIPS_BY_ID_SUCCESS","FETCH_STARSHIPS_BY_ID_ERROR","fetchStarshipsByIdError","fetchPaginationStarships","FETCH_PAGINATION_STARSHIPS_REQUEST","FETCH_PAGINATION_STARSHIPS_SUCCESS","fetchVehiclesById","FETCH_VEHICLES_BY_ID_REQUEST","FETCH_VEHICLES_BY_ID_SUCCESS","FETCH_VEHICLES_BY_ID_ERROR","fetchVehiclesByIdError","fetchPaginationVehicles","FETCH_PAGINATION_VEHICLES_REQUEST","FETCH_PAGINATION_VEHICLES_SUCCESS","planetsSelectors","name","speciesSelectors","vehiclesSelectors","starshipsSelectors","allFilms","allPlanets","allStarships","allVehicles","allSpecies","height","mass","hair_color","skin_color","eye_color","birth_year","gender","films","history","useHistory","arrId","Number","split","filter","includes","p","button","onClick","goBack","module","exports","mDTP","peopleOperations","planetsOperations","starshipsOperation","vehiclesOperations","speciesOperations","peopleSelectors","peopleId","useParams","character","useEffect","homeworld","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","getAllFilms","getPeople","sort","a","b","paginationPeople","peoplePrev","peopleNext","getPlanets","paginationPlanets","planetsPrev","planetsNext"],"mappings":"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","file":"static/js/4.6ff06c63.chunk.js","sourcesContent":["export const getAllSpecies = state => state.species.items\r\n\r\nexport const getLoading = state => state.species.loading\r\n\r\n//PAGINATION\r\nexport const paginationSpecies = state => state.species.paginationSpecies.results\r\n\r\nexport const speciesPrev = state => state.species.paginationSpecies.previous\r\n\r\nexport const speciesNext = state => state.species.paginationSpecies.next\r\n","export const getStarships = state => state.starships.items\r\n\r\nexport const getLoading = state => state.starships.loading\r\n\r\n//PAGINATION\r\nexport const paginationStarships = state => state.starships.paginationStarships.results\r\n\r\nexport const starshipsPrev = state => state.starships.paginationStarships.previous\r\n\r\nexport const starshipsNext = state => state.starships.paginationStarships.next\r\n","export const getAllVehicles = state => state.vehicles.items\r\n\r\nexport const getLoading = state => state.vehicles.loading\r\n\r\n//PAGINATION\r\nexport const paginationVehicles = state => state.vehicles.paginationVehicles.results\r\n\r\nexport const vehiclesPrev = state => state.vehicles.paginationVehicles.previous\r\n\r\nexport const vehiclesNext = state => state.vehicles.paginationVehicles.next\r\n","import axios from 'axios';\r\nimport {\r\n  fetchPeopleByIdRequest,\r\n  fetchPeopleByIdSuccess,\r\n  fetchPeopleByIdError,\r\n  fetchPaginationPeopleRequest,\r\n  fetchPaginationPeopleSuccess\r\n} from './peopleActions';\r\n\r\n\r\nexport const fetchPeopleById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/people/${count}`\r\n  dispatch(fetchPeopleByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPeopleByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchPeopleByIdError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationPeople = page => dispatch => {\r\n  dispatch(fetchPaginationPeopleRequest())\r\n  const URL = `https://swapi.co/api/people/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPeopleSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\n\r\n// FETCH BY ID\r\nexport const fetchPeopleByIdRequest = () => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPeopleByIdSuccess = people => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_SUCCESS,\r\n  payload : {\r\n    people,\r\n  }\r\n});\r\n\r\nexport const fetchPeopleByIdError = error => ({\r\n  type: ActionType.FETCH_PEOPLE_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPeopleRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPaginationPeopleSuccess = people => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_SUCCESS,\r\n  payload : people\r\n});\r\n\r\nexport const fetchPaginationPeopleError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PEOPLE_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  fetchPlanetsByIdRequest,\r\n  fetchPlanetsByIdSuccess,\r\n  fetchPlanetsByIdError,\r\n  fetchPaginationPlanetsRequest,\r\n  fetchPaginationPlanetsSuccess\r\n} from './planetsActions';\r\n\r\n\r\n\r\nexport const fetchPlanetsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/planets/${count}`\r\n  dispatch(fetchPlanetsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPlanetsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchPlanetsByIdError(error));\r\n    });\r\n};\r\n\r\n//\r\nexport const fetchPaginationPlanets = page => dispatch => {\r\n  dispatch(fetchPaginationPlanetsRequest())\r\n  const URL = `https://swapi.co/api/planets/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationPlanetsSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchPlanetsByIdRequest = () => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchPlanetsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchPlanetsByIdError = error => ({\r\n  type: ActionType.FETCH_PLANETS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationPlanetsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationPlanetsSuccess = planets => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_SUCCESS,\r\n  payload : planets\r\n});\r\n\r\nexport const fetchPaginationPlanetsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_PLANETS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n","import axios from 'axios';\r\nimport {\r\n  fetchSpeciesByIdRequest,\r\n  fetchSpeciesByIdSuccess,\r\n  fetchSpeciesByIdError,\r\n  fetchPaginationSpeciesRequest,\r\n  fetchPaginationSpeciesSuccess\r\n} from './speciesActions';\r\n\r\nexport const fetchSpeciesById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/species/${count}`\r\n  dispatch(fetchSpeciesByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchSpeciesByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchSpeciesByIdError(error));\r\n    });\r\n};\r\nexport const fetchPaginationSpecies = page => dispatch => {\r\n  dispatch(fetchPaginationSpeciesRequest())\r\n  const URL = `https://swapi.co/api/species/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationSpeciesSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchSpeciesByIdRequest = () => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_REQUEST,\r\n});\r\n\r\nexport const fetchSpeciesByIdSuccess = species => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_SUCCESS,\r\n  payload : {\r\n    species,\r\n  }\r\n});\r\n\r\nexport const fetchSpeciesByIdError = error => ({\r\n  type: ActionType.FETCH_SPECIES_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationSpeciesRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationSpeciesSuccess = species => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_SUCCESS,\r\n  payload : species\r\n});\r\n\r\nexport const fetchPaginationSpeciesError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_SPECIES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as filmsSelectors from '../../../redux/films/filmsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nimport css from '../../list.module.css'\r\n\r\nconst SpeciesList = ({film, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!film.length && (\r\n            <ul className={css.list}>\r\n              {film.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={el.episode_id}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/films/${el.episode_id}`}>{el.title}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : filmsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import axios from 'axios';\r\nimport {\r\n  fetchStarshipsByIdRequest,\r\n  fetchStarshipsByIdSuccess,\r\n  fetchStarshipsByIdError,\r\n  fetchPaginationStarshipsRequest,\r\n  fetchPaginationStarshipsSuccess\r\n} from './starshipsActions';\r\n\r\nexport const fetchStarshipsById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/starships/${count}`\r\n  dispatch(fetchStarshipsByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchStarshipsByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchStarshipsByIdError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationStarships = page => dispatch => {\r\n  dispatch(fetchPaginationStarshipsRequest())\r\n  const URL = `https://swapi.co/api/starships/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationStarshipsSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchStarshipsByIdRequest = () => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_REQUEST,\r\n  payload : {}\r\n});\r\n\r\nexport const fetchStarshipsByIdSuccess = planets => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_SUCCESS,\r\n  payload : {\r\n    planets,\r\n  }\r\n});\r\n\r\nexport const fetchStarshipsByIdError = error => ({\r\n  type: ActionType.FETCH_STARSHIPS_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationStarshipsRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationStarshipsSuccess = starships => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_SUCCESS,\r\n  payload : starships\r\n});\r\n\r\nexport const fetchPaginationStarshipsError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_STARSHIPS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  fetchVehiclesByIdRequest,\r\n  fetchVehiclesByIdSuccess,\r\n  fetchVehiclesByIdError,\r\n  fetchPaginationVehiclesRequest, fetchPaginationVehiclesSuccess\r\n} from './vehiclesActions';\r\n\r\nexport const fetchVehiclesById = (count) => dispatch => {\r\nconst URL = `https://swapi.co/api/vehicles/${count}`\r\n  dispatch(fetchVehiclesByIdRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchVehiclesByIdSuccess({...response.data, id : count}));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message)\r\n      dispatch(fetchVehiclesByIdError(error));\r\n    });\r\n};\r\n\r\nexport const fetchPaginationVehicles = page => dispatch => {\r\n  dispatch(fetchPaginationVehiclesRequest())\r\n  const URL = `https://swapi.co/api/vehicles/?page=${page}`\r\n  axios\r\n    .get(URL)\r\n    .then(response => dispatch(fetchPaginationVehiclesSuccess(response.data)))\r\n    .catch(error => {\r\n      console.log(error.message)\r\n    })\r\n}","import {ActionType} from '../actionType'\r\n\r\nexport const fetchVehiclesByIdRequest = () => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_REQUEST,\r\n});\r\n\r\nexport const fetchVehiclesByIdSuccess = vehicles => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_SUCCESS,\r\n  payload : {\r\n    vehicles,\r\n  }\r\n});\r\n\r\nexport const fetchVehiclesByIdError = error => ({\r\n  type: ActionType.FETCH_VEHICLES_BY_ID_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH PAGINATION\r\nexport const fetchPaginationVehiclesRequest = () => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_REQUEST,\r\n  payload : []\r\n});\r\n\r\nexport const fetchPaginationVehiclesSuccess = vehicles => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_SUCCESS,\r\n  payload : vehicles\r\n});\r\n\r\nexport const fetchPaginationVehiclesError = error => ({\r\n  type: ActionType.FETCH_PAGINATION_VEHICLES_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as planetsSelectors from '../../../redux/planets/planetsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\nimport css from \"../../list.module.css\";\r\n\r\nconst SpeciesList = ({planets, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!planets.length && (\r\n            <ul className={css.list}>\r\n              {planets.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={ i * 9}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/planets/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : planetsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as speciesSelectors from '../../../redux/species/speciesSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\nimport css from \"../../list.module.css\";\r\n\r\nconst SpeciesList = ({species, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!species.length && (\r\n            <ul className={css.list}>\r\n              {species.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={ i * 9}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/species/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : speciesSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as vehiclesSelectors from '../../../redux/vehicles/vehiclesSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\nimport css from \"../../list.module.css\";\r\n\r\nconst SpeciesList = ({vehicles, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!vehicles.length && (\r\n            <ul className={css.list}>\r\n              {vehicles.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={ i * 9}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/vehicles/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : vehiclesSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport * as starshipsSelectors from '../../../redux/starships/starshipsSelectors'\r\nimport { Loaders } from \"../../Loaders\";\r\n\r\nimport css from \"../../list.module.css\";\r\n\r\nconst style = {\r\n  position: 'relative',\r\n  display : 'block'\r\n}\r\n\r\nconst SpeciesList = ({starships, loading}) => {\r\n  return (\r\n    <div className={css.container}>\r\n      {loading && <Loaders/>}\r\n      {!loading && (\r\n        <>\r\n          {!!starships.length && (\r\n            <ul className={css.list}>\r\n              {starships.map((el, i) => (\r\n                <li\r\n                  className={css.item}\r\n                  key={ i * 9}>\r\n                  <NavLink\r\n                    className={css.link}\r\n                    to={`/starships/${el.id}`}>{el.name}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mSTP = state => ({\r\n  loading : starshipsSelectors.getLoading(state)\r\n})\r\n\r\nexport default connect(mSTP)(SpeciesList);","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport * as filmsSelectors from '../../../redux/films/filmsSelectors'\r\nimport * as planetsSelectors from '../../../redux/planets/planetsSelectors'\r\nimport * as starshipsSelectors\r\n  from '../../../redux/starships/starshipsSelectors'\r\nimport * as vehiclesSelectors from '../../../redux/vehicles/vehiclesSelectors'\r\nimport * as speciesSelectors from '../../../redux/species/speciesSelectors'\r\nimport FilmsList from \"../../Films/FilmsList/FilmsList\";\r\nimport PlanetsList from \"../../Planets/PlanetsList/PlanetsList\";\r\nimport StarshipsList from \"../../Starships/StarshipsList/StarshipsList\";\r\nimport VehiclesList from \"../../Vehicles/VehiclesList/VehiclesList\";\r\nimport SpeciesList from '../../Species/SpeciesList/SpeciesList'\r\n\r\nimport css from './DetailPeople.module.css'\r\n\r\nconst DetailPeople = ({\r\n                        name,\r\n                        height,\r\n                        mass,\r\n                        hair_color,\r\n                        skin_color,\r\n                        eye_color,\r\n                        birth_year,\r\n                        gender,\r\n                        allFilms,\r\n                        allPlanets,\r\n                        allStarships,\r\n                        allVehicles,\r\n                        allSpecies,\r\n                        films,\r\n                      }) => {\r\n\r\n  const history = useHistory()\r\n\r\n  const handlerBack = () => {\r\n    history.goBack()\r\n  }\r\n\r\n  const arrId = films.map(el => Number(el.split('/')[5]))\r\n  const film = allFilms.filter(el => {\r\n    return arrId.includes(el.episode_id)\r\n  })\r\n\r\n  return (\r\n     <div className={css.container}>\r\n      <p className={css.p}>Name : {name}</p>\r\n      <p className={css.p}>height : {height}</p>\r\n      <p className={css.p}>mass : {mass}</p>\r\n      <p className={css.p}>hair_color : {hair_color}</p>\r\n      <p className={css.p}>skin_color : {skin_color}</p>\r\n      <p className={css.p}>eye_color : {eye_color}</p>\r\n      <p className={css.p}>birth_year : {birth_year}</p>\r\n      <p className={css.p}>gender : {gender}</p>\r\n\r\n    {/*FILMS*/}\r\n    {!!allFilms.length && (\r\n      <div>\r\n        <h2 className={css.title}>films</h2>\r\n        <FilmsList film={film}/>\r\n      </div>\r\n    )}\r\n\r\n      {/*PLANETS*/}\r\n      {!!allPlanets.length && (\r\n        <div>\r\n        <h2 className={css.title}>homeworld</h2>\r\n        <PlanetsList planets={allPlanets}/>\r\n        </div>\r\n      )}\r\n\r\n    {/*STARSHIPS*/}\r\n    {!!allStarships.length && (\r\n      <div>\r\n        <h2 className={css.title}>starships</h2>\r\n        <StarshipsList starships={allStarships}/>\r\n      </div>\r\n    )}\r\n\r\n    {/*VEHICLES*/}\r\n    {!!allVehicles.length && (\r\n      <div>\r\n        <h2 className={css.title}>vehicles</h2>\r\n        <VehiclesList vehicles={allVehicles}/>\r\n      </div>\r\n    )}\r\n\r\n    {/*SPECIES*/}\r\n    {!!allSpecies.length && (\r\n      <div>\r\n        <h2 className={css.title}>species</h2>\r\n        <SpeciesList species={allSpecies}/>\r\n      </div>\r\n    )}\r\n\r\n    <button\r\n      className={css.button}\r\n      onClick={handlerBack}\r\n    >\r\n      Back\r\n    </button>\r\n\r\n    </div>)\r\n}\r\n\r\nconst mSTP = state => ({\r\n  allFilms : filmsSelectors.getAllFilms(state),\r\n  allPlanets: planetsSelectors.getPlanets(state),\r\n  allStarships: starshipsSelectors.getStarships(state),\r\n  allVehicles: vehiclesSelectors.getAllVehicles(state),\r\n  allSpecies: speciesSelectors.getAllSpecies(state),\r\n})\r\n\r\nexport default connect(mSTP)(DetailPeople)\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DetailPeople_container__cZahy\",\"p\":\"DetailPeople_p__1yqNM\",\"title\":\"DetailPeople_title__3LeX6\",\"button\":\"DetailPeople_button__3aDGE\"};","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport DetailPeople from \"../components/People/DetailPeople/DetailPeople\";\r\nimport * as peopleSelectors from \"../redux/people/peopleSelectors\";\r\nimport * as peopleOperations from '../redux/people/peopleOperations'\r\nimport * as planetsOperations from \"../redux/planets/planetsOperations\";\r\nimport * as starshipsOperation from \"../redux/starships/starshipsOperations\";\r\nimport * as vehiclesOperations from \"../redux/vehicles/vehiclesOperations\";\r\nimport * as speciesOperations from \"../redux/species/speciesOperations\";\r\n\r\nconst DetailPeoplePage = ({\r\n                            people,\r\n                            fetchPeopleById,\r\n                            fetchPlanetsById,\r\n                            fetchStarshipsById,\r\n                            fetchVehiclesById,\r\n                            fetchSpeciesById\r\n                          }) => {\r\n  const peopleId = Number(useParams().id)\r\n  const character = people.filter(el => el.id === peopleId)\r\n\r\n  useEffect(() => {\r\n    if (!!!people.length) {\r\n      fetchPeopleById(peopleId)\r\n    }\r\n  }, [fetchPeopleById])\r\n\r\n  if (character[0]) {\r\n    const count = Number(character[0].homeworld.split('/')[5])\r\n    fetchPlanetsById(count)\r\n\r\n    character[0].starships.map(el => {\r\n      const count = Number(el.split('/')[5])\r\n      return fetchStarshipsById(count)\r\n    })\r\n\r\n    character[0].vehicles.map(el => {\r\n      const count = Number(el.split('/')[5])\r\n      return fetchVehiclesById(count)\r\n    })\r\n    character[0].species.map(el => {\r\n      const count = Number(el.split('/')[5])\r\n      return fetchSpeciesById(count)\r\n    })\r\n  }\r\n\r\n  return (<div>\r\n    {!!character.length && <DetailPeople {...character[0]}/>}\r\n  </div>)\r\n}\r\n\r\nconst mSTP = state => ({\r\n  people: peopleSelectors.getPeople(state)\r\n})\r\n\r\nconst mDTP = {\r\n  fetchPeopleById: peopleOperations.fetchPeopleById,\r\n  fetchPlanetsById: planetsOperations.fetchPlanetsById,\r\n  fetchStarshipsById: starshipsOperation.fetchStarshipsById,\r\n  fetchVehiclesById: vehiclesOperations.fetchVehiclesById,\r\n  fetchSpeciesById: speciesOperations.fetchSpeciesById,\r\n}\r\n\r\nexport default connect(mSTP, mDTP)(DetailPeoplePage)\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"list_container__1Bq0D\",\"list\":\"list_list__1pvkh\",\"item\":\"list_item__3HMYw\",\"link\":\"list_link__2mIHv\"};","export const getAllFilms = state => state.films.items\r\n\r\nexport const getLoading = state => state.films.loading\r\n","export const getPeople = state => state.people.items.sort((a, b) => {\r\n return a.name > b.name\r\n})\r\n\r\nexport const getLoading = state => state.people.loading\r\n\r\n\r\n//PAGINATION\r\nexport const paginationPeople = state => state.people.paginationPeople.results\r\n\r\nexport const peoplePrev = state => state.people.paginationPeople.previous\r\n\r\nexport const peopleNext = state => state.people.paginationPeople.next\r\n","export const getPlanets = state => state.planets.items\r\n\r\nexport const getLoading = state => state.planets.loading\r\n\r\n//PAGINATION\r\nexport const paginationPlanets = state => state.planets.paginationPlanets.results\r\n\r\nexport const planetsPrev = state => state.planets.paginationPlanets.previous\r\n\r\nexport const planetsNext = state => state.planets.paginationPlanets.next\r\n"],"sourceRoot":""}